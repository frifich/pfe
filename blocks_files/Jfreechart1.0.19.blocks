StartClass 1
Class(org.jfree.chart.JFreeChart,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(INFO,org.jfree.ui.about.ProjectInfo,Public,Y,Y,);
Attribute(DEFAULT_TITLE_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_IMAGE,java.awt.Image,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT,int,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_IMAGE_ALPHA,float,Public,Y,Y,);
Attribute(KEY_SUPPRESS_SHADOW_GENERATION,java.awt.RenderingHints$Key,Public,Y,Y,);
Attribute(renderingHints,java.awt.RenderingHints,Private,N,N,);
Attribute(borderVisible,boolean,Private,N,N,);
Attribute(borderStroke,java.awt.Stroke,Private,N,N,);
Attribute(borderPaint,java.awt.Paint,Private,N,N,);
Attribute(padding,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(title,org.jfree.chart.title.TextTitle,Private,N,N,);
Attribute(subtitles,java.util.List,Private,N,N,);
Attribute(plot,org.jfree.chart.plot.Plot,Private,N,N,);
Attribute(backgroundPaint,java.awt.Paint,Private,N,N,);
Attribute(backgroundImage,java.awt.Image,Private,N,N,);
Attribute(backgroundImageAlignment,int,Private,N,N,);
Attribute(backgroundImageAlpha,float,Private,N,N,);
Attribute(changeListeners,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(progressListeners,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(notify,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getRenderingHints,java.awt.RenderingHints,Public,N,N);
Method(setRenderingHints,void,Public,N,N);
Method(isBorderVisible,boolean,Public,N,N);
Method(setBorderVisible,void,Public,N,N);
Method(getBorderStroke,java.awt.Stroke,Public,N,N);
Method(setBorderStroke,void,Public,N,N);
Method(getBorderPaint,java.awt.Paint,Public,N,N);
Method(setBorderPaint,void,Public,N,N);
Method(getPadding,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setPadding,void,Public,N,N);
Method(getTitle,org.jfree.chart.title.TextTitle,Public,N,N);
Method(setTitle,void,Public,N,N);
Method(setTitle$2,void,Public,N,N);
Method(addLegend,void,Public,N,N);
Method(getLegend,org.jfree.chart.title.LegendTitle,Public,N,N);
Method(getLegend$2,org.jfree.chart.title.LegendTitle,Public,N,N);
Method(removeLegend,void,Public,N,N);
Method(getSubtitles,java.util.List,Public,N,N);
Method(setSubtitles,void,Public,N,N);
Method(getSubtitleCount,int,Public,N,N);
Method(getSubtitle,org.jfree.chart.title.Title,Public,N,N);
Method(addSubtitle,void,Public,N,N);
Method(addSubtitle$2,void,Public,N,N);
Method(clearSubtitles,void,Public,N,N);
Method(removeSubtitle,void,Public,N,N);
Method(getPlot,org.jfree.chart.plot.Plot,Public,N,N);
Method(getCategoryPlot,org.jfree.chart.plot.CategoryPlot,Public,N,N);
Method(getXYPlot,org.jfree.chart.plot.XYPlot,Public,N,N);
Method(getAntiAlias,boolean,Public,N,N);
Method(setAntiAlias,void,Public,N,N);
Method(getTextAntiAlias,java.lang.Object,Public,N,N);
Method(setTextAntiAlias,void,Public,N,N);
Method(setTextAntiAlias$2,void,Public,N,N);
Method(getBackgroundPaint,java.awt.Paint,Public,N,N);
Method(setBackgroundPaint,void,Public,N,N);
Method(getBackgroundImage,java.awt.Image,Public,N,N);
Method(setBackgroundImage,void,Public,N,N);
Method(getBackgroundImageAlignment,int,Public,N,N);
Method(setBackgroundImageAlignment,void,Public,N,N);
Method(getBackgroundImageAlpha,float,Public,N,N);
Method(setBackgroundImageAlpha,void,Public,N,N);
Method(isNotify,boolean,Public,N,N);
Method(setNotify,void,Public,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,void,Public,N,N);
Method(draw$3,void,Public,N,N);
Method(createAlignedRectangle2D,java.awt.geom.Rectangle2D,Private,N,N);
Method(drawTitle,org.jfree.chart.entity.EntityCollection,Protected,N,N);
Method(createBufferedImage,java.awt.image.BufferedImage,Public,N,N);
Method(createBufferedImage$2,java.awt.image.BufferedImage,Public,N,N);
Method(createBufferedImage$3,java.awt.image.BufferedImage,Public,N,N);
Method(createBufferedImage$4,java.awt.image.BufferedImage,Public,N,N);
Method(handleClick,void,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(fireChartChanged,void,Public,N,N);
Method(notifyListeners,void,Protected,N,N);
Method(addProgressListener,void,Public,N,N);
Method(removeProgressListener,void,Public,N,N);
Method(notifyListeners$2,void,Protected,N,N);
Method(titleChanged,void,Public,N,N);
Method(plotChanged,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(main,void,Public,Y,N);
Method(clone,java.lang.Object,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.jfree.chart.plot.Plot,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,org.jfree.chart.plot.Plot,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.awt.Font,);
Parameter(<init>$3,org.jfree.chart.plot.Plot,);
Parameter(<init>$3,boolean,);
Parameter(setRenderingHints,java.awt.RenderingHints,);
Parameter(setBorderVisible,boolean,);
Parameter(setBorderStroke,java.awt.Stroke,);
Parameter(setBorderPaint,java.awt.Paint,);
Parameter(setPadding,org.jfree.ui.RectangleInsets,);
Parameter(setTitle,org.jfree.chart.title.TextTitle,);
Parameter(setTitle$2,java.lang.String,);
Parameter(addLegend,org.jfree.chart.title.LegendTitle,);
Parameter(getLegend$2,int,);
Parameter(setSubtitles,java.util.List,);
Parameter(getSubtitle,int,);
Parameter(addSubtitle,org.jfree.chart.title.Title,);
Parameter(addSubtitle$2,int,);
Parameter(addSubtitle$2,org.jfree.chart.title.Title,);
Parameter(removeSubtitle,org.jfree.chart.title.Title,);
Parameter(setAntiAlias,boolean,);
Parameter(setTextAntiAlias,boolean,);
Parameter(setTextAntiAlias$2,java.lang.Object,);
Parameter(setBackgroundPaint,java.awt.Paint,);
Parameter(setBackgroundImage,java.awt.Image,);
Parameter(setBackgroundImageAlignment,int,);
Parameter(setBackgroundImageAlpha,float,);
Parameter(setNotify,boolean,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,org.jfree.chart.ChartRenderingInfo,);
Parameter(draw$3,java.awt.Graphics2D,);
Parameter(draw$3,java.awt.geom.Rectangle2D,);
Parameter(draw$3,java.awt.geom.Point2D,);
Parameter(draw$3,org.jfree.chart.ChartRenderingInfo,);
Parameter(createAlignedRectangle2D,org.jfree.ui.Size2D,);
Parameter(createAlignedRectangle2D,java.awt.geom.Rectangle2D,);
Parameter(createAlignedRectangle2D,org.jfree.ui.HorizontalAlignment,);
Parameter(createAlignedRectangle2D,org.jfree.ui.VerticalAlignment,);
Parameter(drawTitle,org.jfree.chart.title.Title,);
Parameter(drawTitle,java.awt.Graphics2D,);
Parameter(drawTitle,java.awt.geom.Rectangle2D,);
Parameter(drawTitle,boolean,);
Parameter(createBufferedImage,int,);
Parameter(createBufferedImage,int,);
Parameter(createBufferedImage$2,int,);
Parameter(createBufferedImage$2,int,);
Parameter(createBufferedImage$2,org.jfree.chart.ChartRenderingInfo,);
Parameter(createBufferedImage$3,int,);
Parameter(createBufferedImage$3,int,);
Parameter(createBufferedImage$3,int,);
Parameter(createBufferedImage$3,org.jfree.chart.ChartRenderingInfo,);
Parameter(createBufferedImage$4,int,);
Parameter(createBufferedImage$4,int,);
Parameter(createBufferedImage$4,double,);
Parameter(createBufferedImage$4,double,);
Parameter(createBufferedImage$4,org.jfree.chart.ChartRenderingInfo,);
Parameter(handleClick,int,);
Parameter(handleClick,int,);
Parameter(handleClick,org.jfree.chart.ChartRenderingInfo,);
Parameter(addChangeListener,org.jfree.chart.event.ChartChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.ChartChangeListener,);
Parameter(notifyListeners,org.jfree.chart.event.ChartChangeEvent,);
Parameter(addProgressListener,org.jfree.chart.event.ChartProgressListener,);
Parameter(removeProgressListener,org.jfree.chart.event.ChartProgressListener,);
Parameter(notifyListeners$2,org.jfree.chart.event.ChartProgressEvent,);
Parameter(titleChanged,org.jfree.chart.event.TitleChangeEvent,);
Parameter(plotChanged,org.jfree.chart.event.PlotChangeEvent,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(main,java.lang.String[],);
Realization(org.jfree.chart.event.TitleChangeListener);
Realization(org.jfree.chart.event.PlotChangeListener);
Composition(org.jfree.chart.title.TextTitle);
Composition(org.jfree.chart.plot.Plot);
Call(METHOD,org.jfree.chart.JFreeChart,<init> --> <init>$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$2 --> <init>$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setRenderingHints --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBorderVisible --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBorderStroke --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBorderPaint --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setPadding --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle$2 --> setTitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,addLegend --> addSubtitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,getLegend --> getLegend$2,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,removeLegend --> getLegend,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,removeLegend --> removeSubtitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setSubtitles --> setNotify,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setSubtitles --> clearSubtitles,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setSubtitles --> addSubtitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,getSubtitle --> getSubtitleCount,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle$2 --> getSubtitleCount,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle$2 --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,clearSubtitles --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,removeSubtitle --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setAntiAlias --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setTextAntiAlias --> setTextAntiAlias$2,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setTextAntiAlias$2 --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBackgroundPaint --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBackgroundImage --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBackgroundImageAlignment --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setBackgroundImageAlpha --> fireChartChanged,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,setNotify --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw --> draw$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$2 --> draw$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> notifyListeners$2,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> isBorderVisible,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> getBorderPaint,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> getBorderStroke,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> drawTitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> createAlignedRectangle2D,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,createBufferedImage --> createBufferedImage$2,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,createBufferedImage$2 --> createBufferedImage$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,createBufferedImage$3 --> draw$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,createBufferedImage$4 --> draw$3,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,fireChartChanged --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,titleChanged --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,plotChanged --> notifyListeners,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,readObject --> getSubtitleCount,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,readObject --> getSubtitle,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> getSubtitleCount,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> getSubtitle,org.jfree.chart.JFreeChart,);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$2 --> DEFAULT_TITLE_FONT,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> DEFAULT_TITLE_FONT,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> DEFAULT_BACKGROUND_PAINT,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> DEFAULT_BACKGROUND_IMAGE,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> backgroundImageAlignment,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> backgroundImageAlpha,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> progressListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> changeListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> notify,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> renderingHints,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> borderVisible,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> borderStroke,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> borderPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> padding,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> plot,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> subtitles,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> title,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> backgroundPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<init>$3 --> backgroundImage,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getRenderingHints --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setRenderingHints --> renderingHints,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,isBorderVisible --> borderVisible,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBorderVisible --> borderVisible,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBorderStroke --> borderStroke,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBorderStroke --> borderStroke,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBorderPaint --> borderPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBorderPaint --> borderPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getPadding --> padding,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setPadding --> padding,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getTitle --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setTitle --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setTitle --> title,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setTitle$2 --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setTitle$2 --> DEFAULT_TITLE_FONT,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getLegend$2 --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getSubtitles --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getSubtitleCount --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getSubtitle --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,addSubtitle --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,addSubtitle$2 --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clearSubtitles --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,removeSubtitle --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getPlot --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getCategoryPlot --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getXYPlot --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getAntiAlias --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setAntiAlias --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getTextAntiAlias --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setTextAntiAlias$2 --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBackgroundPaint --> backgroundPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundPaint --> backgroundPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundPaint --> backgroundPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBackgroundImage --> backgroundImage,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImage --> backgroundImage,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImage --> backgroundImage,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,getBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,isNotify --> notify,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,setNotify --> notify,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> backgroundPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> backgroundImage,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> backgroundImageAlpha,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> backgroundImageAlignment,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> padding,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,draw$3 --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,handleClick --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,addChangeListener --> changeListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,removeChangeListener --> changeListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,notifyListeners --> notify,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,notifyListeners --> changeListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,addProgressListener --> progressListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,removeProgressListener --> progressListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,notifyListeners$2 --> progressListeners,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> borderVisible,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> borderStroke,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> borderPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> padding,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> backgroundPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> backgroundImage,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> backgroundImageAlignment,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> backgroundImageAlpha,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,equals --> notify,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,writeObject --> borderStroke,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,writeObject --> borderPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,writeObject --> backgroundPaint,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> borderStroke,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> borderPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> backgroundPaint,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> progressListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> changeListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,readObject --> renderingHints,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,main --> INFO,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> renderingHints,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> title,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> subtitles,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> plot,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> renderingHints,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> title,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> subtitles,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> plot,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> progressListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,clone --> changeListeners,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<clinit> --> INFO,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<clinit> --> DEFAULT_TITLE_FONT,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<clinit> --> DEFAULT_BACKGROUND_PAINT,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<clinit> --> DEFAULT_BACKGROUND_IMAGE,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,<clinit> --> KEY_SUPPRESS_SHADOW_GENERATION,org.jfree.chart.JFreeChart,WRITE);
Call(ATTRIBUTE,org.jfree.chart.JFreeChart,drawTitle --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> addChangeListener,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> <init>,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> setMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> <init>,org.jfree.chart.block.LineBorder,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> setFrame,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> setBackgroundPaint,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> setPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,<init>$3 --> <init>$3,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,setRenderingHints --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,setPadding --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,setPadding --> <init>,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle --> removeChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle$2 --> <init>$3,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,setTitle$2 --> setText,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,addSubtitle$2 --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,clearSubtitles --> removeChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,setTextAntiAlias$2 --> <init>,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,setNotify --> <init>,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> <init>,org.jfree.chart.event.ChartProgressEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> clear,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> setChartArea,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> getEntityCollection,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> <init>,org.jfree.chart.entity.JFreeChartEntity,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> isVisible,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> addAll,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> getPlotInfo,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,draw$3 --> draw,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> <init>,org.jfree.chart.block.BlockParams,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> setGenerateEntities,org.jfree.chart.block.BlockParams,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> arrange$2,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> getHorizontalAlignment,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> draw,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> getVerticalAlignment,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,drawTitle --> getEntityCollection,org.jfree.chart.block.EntityBlockResult,);
Call(METHOD,org.jfree.chart.JFreeChart,handleClick --> getPlotInfo,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,handleClick --> handleClick,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,addChangeListener --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,removeChangeListener --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.JFreeChart,fireChartChanged --> <init>,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,notifyListeners --> chartChanged,org.jfree.chart.event.ChartChangeListener,);
Call(METHOD,org.jfree.chart.JFreeChart,notifyListeners$2 --> chartProgress,org.jfree.chart.event.ChartProgressListener,);
Call(METHOD,org.jfree.chart.JFreeChart,titleChanged --> setChart,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,plotChanged --> setChart,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.JFreeChart,readObject --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,readObject --> addChangeListener,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> clone,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> addChangeListener,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> clone,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> clone,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,clone --> addChangeListener,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.JFreeChart,<clinit> --> <init>,org.jfree.chart.JFreeChartInfo,);
Call(METHOD,org.jfree.chart.JFreeChart,<clinit> --> <init>,org.jfree.chart.JFreeChart$1,);
EndClass 1
StartClass 2
Class(org.jfree.chart.event.TitleChangeListener,Y,Y,Public);
Method(titleChanged,void,Public,N,Y);
Parameter(titleChanged,org.jfree.chart.event.TitleChangeEvent,);
EndClass 2
StartClass 3
Class(org.jfree.chart.event.PlotChangeListener,Y,Y,Public);
Method(plotChanged,void,Public,N,Y);
Parameter(plotChanged,org.jfree.chart.event.PlotChangeEvent,);
EndClass 3
StartClass 4
Class(org.jfree.chart.title.TextTitle,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_TEXT_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(text,java.lang.String,Private,N,N,);
Attribute(font,java.awt.Font,Private,N,N,);
Attribute(textAlignment,org.jfree.ui.HorizontalAlignment,Private,N,N,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Attribute(backgroundPaint,java.awt.Paint,Private,N,N,);
Attribute(toolTipText,java.lang.String,Private,N,N,);
Attribute(urlText,java.lang.String,Private,N,N,);
Attribute(content,org.jfree.text.TextBlock,Private,N,N,);
Attribute(expandToFitSpace,boolean,Private,N,N,);
Attribute(maximumLinesToDisplay,int,Private,N,N,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getText,java.lang.String,Public,N,N);
Method(setText,void,Public,N,N);
Method(getTextAlignment,org.jfree.ui.HorizontalAlignment,Public,N,N);
Method(setTextAlignment,void,Public,N,N);
Method(getFont,java.awt.Font,Public,N,N);
Method(setFont,void,Public,N,N);
Method(getPaint,java.awt.Paint,Public,N,N);
Method(setPaint,void,Public,N,N);
Method(getBackgroundPaint,java.awt.Paint,Public,N,N);
Method(setBackgroundPaint,void,Public,N,N);
Method(getToolTipText,java.lang.String,Public,N,N);
Method(setToolTipText,void,Public,N,N);
Method(getURLText,java.lang.String,Public,N,N);
Method(setURLText,void,Public,N,N);
Method(getExpandToFitSpace,boolean,Public,N,N);
Method(setExpandToFitSpace,void,Public,N,N);
Method(getMaximumLinesToDisplay,int,Public,N,N);
Method(setMaximumLinesToDisplay,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRR,org.jfree.ui.Size2D,Protected,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,java.lang.Object,Public,N,N);
Method(drawHorizontal,void,Protected,N,N);
Method(drawVertical,void,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.awt.Font,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.awt.Font,);
Parameter(<init>$4,java.awt.Paint,);
Parameter(<init>$4,org.jfree.ui.RectangleEdge,);
Parameter(<init>$4,org.jfree.ui.HorizontalAlignment,);
Parameter(<init>$4,org.jfree.ui.VerticalAlignment,);
Parameter(<init>$4,org.jfree.ui.RectangleInsets,);
Parameter(setText,java.lang.String,);
Parameter(setTextAlignment,org.jfree.ui.HorizontalAlignment,);
Parameter(setFont,java.awt.Font,);
Parameter(setPaint,java.awt.Paint,);
Parameter(setBackgroundPaint,java.awt.Paint,);
Parameter(setToolTipText,java.lang.String,);
Parameter(setURLText,java.lang.String,);
Parameter(setExpandToFitSpace,boolean,);
Parameter(setMaximumLinesToDisplay,int,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(arrangeFN,java.awt.Graphics2D,);
Parameter(arrangeFN,double,);
Parameter(arrangeRN,java.awt.Graphics2D,);
Parameter(arrangeRN,org.jfree.data.Range,);
Parameter(arrangeRR,java.awt.Graphics2D,);
Parameter(arrangeRR,org.jfree.data.Range,);
Parameter(arrangeRR,org.jfree.data.Range,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.lang.Object,);
Parameter(drawHorizontal,java.awt.Graphics2D,);
Parameter(drawHorizontal,java.awt.geom.Rectangle2D,);
Parameter(drawVertical,java.awt.Graphics2D,);
Parameter(drawVertical,java.awt.geom.Rectangle2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.title.Title);
SuperClass(org.jfree.chart.block.AbstractBlock);
Generalization(org.jfree.chart.title.Title);
Call(METHOD,org.jfree.chart.title.TextTitle,<init> --> <init>$2,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,<init>$2 --> <init>$4,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,<init>$3 --> <init>$4,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> arrangeNN,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> arrangeRN,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> arrangeRR,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> arrangeFN,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeNN --> arrangeRR,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRN --> arrangeNN,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRN --> arrangeFN,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw --> draw$2,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> drawHorizontal,org.jfree.chart.title.TextTitle,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> drawVertical,org.jfree.chart.title.TextTitle,);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_FONT,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_TEXT_PAINT,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$3 --> DEFAULT_TEXT_PAINT,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> expandToFitSpace,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> text,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> font,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> paint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> textAlignment,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> backgroundPaint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> content,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> toolTipText,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$4 --> urlText,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getText --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setText --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setText --> text,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getTextAlignment --> textAlignment,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setTextAlignment --> textAlignment,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getFont --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setFont --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setFont --> font,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getPaint --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setPaint --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setPaint --> paint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getBackgroundPaint --> backgroundPaint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setBackgroundPaint --> backgroundPaint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getToolTipText --> toolTipText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setToolTipText --> toolTipText,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getURLText --> urlText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setURLText --> urlText,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getExpandToFitSpace --> expandToFitSpace,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setExpandToFitSpace --> expandToFitSpace,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,getMaximumLinesToDisplay --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,setMaximumLinesToDisplay --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrange --> $assertionsDisabled,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> content,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> textAlignment,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> expandToFitSpace,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeFN --> content,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> content,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> textAlignment,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> expandToFitSpace,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrangeRR --> content,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,draw$2 --> content,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,draw$2 --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,draw$2 --> toolTipText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,draw$2 --> urlText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,draw$2 --> backgroundPaint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawHorizontal --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawHorizontal --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawHorizontal --> content,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawVertical --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawVertical --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,drawVertical --> content,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> textAlignment,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> backgroundPaint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> maximumLinesToDisplay,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> expandToFitSpace,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> toolTipText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,equals --> urlText,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,hashCode --> text,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,hashCode --> font,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,hashCode --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,hashCode --> backgroundPaint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,writeObject --> paint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,writeObject --> backgroundPaint,org.jfree.chart.title.TextTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,readObject --> paint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,readObject --> backgroundPaint,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<clinit> --> $assertionsDisabled,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<clinit> --> DEFAULT_FONT,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<clinit> --> DEFAULT_TEXT_PAINT,org.jfree.chart.title.TextTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_POSITION,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_HORIZONTAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_VERTICAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$2 --> DEFAULT_PADDING,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$3 --> DEFAULT_POSITION,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$3 --> DEFAULT_HORIZONTAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$3 --> DEFAULT_VERTICAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,<init>$3 --> DEFAULT_PADDING,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.title.TextTitle,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(METHOD,org.jfree.chart.title.TextTitle,<init>$4 --> <init>$3,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setText --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.TextTitle,setText --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setText --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setTextAlignment --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.TextTitle,setTextAlignment --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setTextAlignment --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.TextTitle,setFont --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setFont --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.TextTitle,setPaint --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setPaint --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setBackgroundPaint --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setBackgroundPaint --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setToolTipText --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setToolTipText --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setURLText --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setURLText --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setExpandToFitSpace --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setExpandToFitSpace --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,setMaximumLinesToDisplay --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.TextTitle,setMaximumLinesToDisplay --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> toContentConstraint,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> calculateTotalWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrange --> calculateTotalHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeNN --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeFN --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRN --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRN --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRR --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,arrangeRR --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> trimMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> drawBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> getGenerateEntities,org.jfree.chart.block.EntityBlockParams,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> <init>$3,org.jfree.chart.entity.TitleEntity,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> trimBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> trimPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> <init>,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> add,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.TextTitle,draw$2 --> setEntityCollection,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.title.TextTitle,drawHorizontal --> getHorizontalAlignment,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,drawHorizontal --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,drawVertical --> getVerticalAlignment,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,drawVertical --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,equals --> equals,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,hashCode --> hashCode,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.TextTitle,clone --> clone,org.jfree.chart.title.Title,);
EndClass 4
StartClass 5
Class(org.jfree.chart.plot.Plot,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(ZERO,java.lang.Number,Public,Y,Y,);
Attribute(DEFAULT_INSETS,org.jfree.ui.RectangleInsets,Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_FOREGROUND_ALPHA,float,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_ALPHA,float,Public,Y,Y,);
Attribute(DEFAULT_BACKGROUND_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(MINIMUM_WIDTH_TO_DRAW,int,Public,Y,Y,);
Attribute(MINIMUM_HEIGHT_TO_DRAW,int,Public,Y,Y,);
Attribute(DEFAULT_LEGEND_ITEM_BOX,java.awt.Shape,Public,Y,Y,);
Attribute(DEFAULT_LEGEND_ITEM_CIRCLE,java.awt.Shape,Public,Y,Y,);
Attribute(parent,org.jfree.chart.plot.Plot,Private,N,N,);
Attribute(datasetGroup,org.jfree.data.general.DatasetGroup,Private,N,N,);
Attribute(noDataMessage,java.lang.String,Private,N,N,);
Attribute(noDataMessageFont,java.awt.Font,Private,N,N,);
Attribute(noDataMessagePaint,java.awt.Paint,Private,N,N,);
Attribute(insets,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(outlineVisible,boolean,Private,N,N,);
Attribute(outlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(outlinePaint,java.awt.Paint,Private,N,N,);
Attribute(backgroundPaint,java.awt.Paint,Private,N,N,);
Attribute(backgroundImage,java.awt.Image,Private,N,N,);
Attribute(backgroundImageAlignment,int,Private,N,N,);
Attribute(backgroundImageAlpha,float,Private,N,N,);
Attribute(foregroundAlpha,float,Private,N,N,);
Attribute(backgroundAlpha,float,Private,N,N,);
Attribute(drawingSupplier,org.jfree.chart.plot.DrawingSupplier,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(notify,boolean,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(getDatasetGroup,org.jfree.data.general.DatasetGroup,Public,N,N);
Method(setDatasetGroup,void,Protected,N,N);
Method(getNoDataMessage,java.lang.String,Public,N,N);
Method(setNoDataMessage,void,Public,N,N);
Method(getNoDataMessageFont,java.awt.Font,Public,N,N);
Method(setNoDataMessageFont,void,Public,N,N);
Method(getNoDataMessagePaint,java.awt.Paint,Public,N,N);
Method(setNoDataMessagePaint,void,Public,N,N);
Method(getPlotType,java.lang.String,Public,N,Y);
Method(getParent,org.jfree.chart.plot.Plot,Public,N,N);
Method(setParent,void,Public,N,N);
Method(getRootPlot,org.jfree.chart.plot.Plot,Public,N,N);
Method(isSubplot,boolean,Public,N,N);
Method(getInsets,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setInsets,void,Public,N,N);
Method(setInsets$2,void,Public,N,N);
Method(getBackgroundPaint,java.awt.Paint,Public,N,N);
Method(setBackgroundPaint,void,Public,N,N);
Method(getBackgroundAlpha,float,Public,N,N);
Method(setBackgroundAlpha,void,Public,N,N);
Method(getDrawingSupplier,org.jfree.chart.plot.DrawingSupplier,Public,N,N);
Method(setDrawingSupplier,void,Public,N,N);
Method(setDrawingSupplier$2,void,Public,N,N);
Method(getBackgroundImage,java.awt.Image,Public,N,N);
Method(setBackgroundImage,void,Public,N,N);
Method(getBackgroundImageAlignment,int,Public,N,N);
Method(setBackgroundImageAlignment,void,Public,N,N);
Method(getBackgroundImageAlpha,float,Public,N,N);
Method(setBackgroundImageAlpha,void,Public,N,N);
Method(isOutlineVisible,boolean,Public,N,N);
Method(setOutlineVisible,void,Public,N,N);
Method(getOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setOutlineStroke,void,Public,N,N);
Method(getOutlinePaint,java.awt.Paint,Public,N,N);
Method(setOutlinePaint,void,Public,N,N);
Method(getForegroundAlpha,float,Public,N,N);
Method(setForegroundAlpha,void,Public,N,N);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(isNotify,boolean,Public,N,N);
Method(setNotify,void,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(notifyListeners,void,Public,N,N);
Method(fireChangeEvent,void,Protected,N,N);
Method(draw,void,Public,N,Y);
Method(drawBackground,void,Public,N,N);
Method(fillBackground,void,Protected,N,N);
Method(fillBackground$2,void,Protected,N,N);
Method(drawBackgroundImage,void,Public,N,N);
Method(drawOutline,void,Public,N,N);
Method(drawNoDataMessage,void,Protected,N,N);
Method(createAndAddEntity,void,Protected,N,N);
Method(handleClick,void,Public,N,N);
Method(zoom,void,Public,N,N);
Method(annotationChanged,void,Public,N,N);
Method(axisChanged,void,Public,N,N);
Method(datasetChanged,void,Public,N,N);
Method(markerChanged,void,Public,N,N);
Method(getRectX,double,Protected,N,N);
Method(getRectY,double,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(resolveDomainAxisLocation,org.jfree.ui.RectangleEdge,Public,Y,N);
Method(resolveRangeAxisLocation,org.jfree.ui.RectangleEdge,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(setDatasetGroup,org.jfree.data.general.DatasetGroup,);
Parameter(setNoDataMessage,java.lang.String,);
Parameter(setNoDataMessageFont,java.awt.Font,);
Parameter(setNoDataMessagePaint,java.awt.Paint,);
Parameter(setParent,org.jfree.chart.plot.Plot,);
Parameter(setInsets,org.jfree.ui.RectangleInsets,);
Parameter(setInsets$2,org.jfree.ui.RectangleInsets,);
Parameter(setInsets$2,boolean,);
Parameter(setBackgroundPaint,java.awt.Paint,);
Parameter(setBackgroundAlpha,float,);
Parameter(setDrawingSupplier,org.jfree.chart.plot.DrawingSupplier,);
Parameter(setDrawingSupplier$2,org.jfree.chart.plot.DrawingSupplier,);
Parameter(setDrawingSupplier$2,boolean,);
Parameter(setBackgroundImage,java.awt.Image,);
Parameter(setBackgroundImageAlignment,int,);
Parameter(setBackgroundImageAlpha,float,);
Parameter(setOutlineVisible,boolean,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setForegroundAlpha,float,);
Parameter(setNotify,boolean,);
Parameter(addChangeListener,org.jfree.chart.event.PlotChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.PlotChangeListener,);
Parameter(notifyListeners,org.jfree.chart.event.PlotChangeEvent,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.geom.Point2D,);
Parameter(draw,org.jfree.chart.plot.PlotState,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(drawBackground,java.awt.Graphics2D,);
Parameter(drawBackground,java.awt.geom.Rectangle2D,);
Parameter(fillBackground,java.awt.Graphics2D,);
Parameter(fillBackground,java.awt.geom.Rectangle2D,);
Parameter(fillBackground$2,java.awt.Graphics2D,);
Parameter(fillBackground$2,java.awt.geom.Rectangle2D,);
Parameter(fillBackground$2,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawBackgroundImage,java.awt.Graphics2D,);
Parameter(drawBackgroundImage,java.awt.geom.Rectangle2D,);
Parameter(drawOutline,java.awt.Graphics2D,);
Parameter(drawOutline,java.awt.geom.Rectangle2D,);
Parameter(drawNoDataMessage,java.awt.Graphics2D,);
Parameter(drawNoDataMessage,java.awt.geom.Rectangle2D,);
Parameter(createAndAddEntity,java.awt.geom.Rectangle2D,);
Parameter(createAndAddEntity,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(createAndAddEntity,java.lang.String,);
Parameter(createAndAddEntity,java.lang.String,);
Parameter(handleClick,int,);
Parameter(handleClick,int,);
Parameter(handleClick,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoom,double,);
Parameter(annotationChanged,org.jfree.chart.event.AnnotationChangeEvent,);
Parameter(axisChanged,org.jfree.chart.event.AxisChangeEvent,);
Parameter(datasetChanged,org.jfree.data.general.DatasetChangeEvent,);
Parameter(markerChanged,org.jfree.chart.event.MarkerChangeEvent,);
Parameter(getRectX,double,);
Parameter(getRectX,double,);
Parameter(getRectX,double,);
Parameter(getRectX,org.jfree.ui.RectangleEdge,);
Parameter(getRectY,double,);
Parameter(getRectY,double,);
Parameter(getRectY,double,);
Parameter(getRectY,org.jfree.ui.RectangleEdge,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(resolveDomainAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(resolveDomainAxisLocation,org.jfree.chart.plot.PlotOrientation,);
Parameter(resolveRangeAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(resolveRangeAxisLocation,org.jfree.chart.plot.PlotOrientation,);
SubClass(org.jfree.chart.plot.CategoryPlot);
SubClass(org.jfree.chart.plot.XYPlot);
Realization(org.jfree.chart.event.AxisChangeListener);
Realization(org.jfree.data.general.DatasetChangeListener);
Realization(org.jfree.chart.event.AnnotationChangeListener);
Realization(org.jfree.chart.event.MarkerChangeListener);
Realization(org.jfree.chart.LegendItemSource);
Composition(org.jfree.chart.plot.Plot);
Composition(org.jfree.data.general.DatasetGroup);
Composition(org.jfree.chart.plot.DrawingSupplier);
Call(METHOD,org.jfree.chart.plot.Plot,setNoDataMessage --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setNoDataMessageFont --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setNoDataMessagePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,getRootPlot --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,getRootPlot --> getRootPlot,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,isSubplot --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setInsets --> setInsets$2,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setInsets$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setBackgroundPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setBackgroundAlpha --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,getDrawingSupplier --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,getDrawingSupplier --> getDrawingSupplier,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setDrawingSupplier --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setDrawingSupplier$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setBackgroundImage --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setBackgroundImageAlignment --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setBackgroundImageAlpha --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setOutlineVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setOutlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setOutlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setForegroundAlpha --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,setNotify --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,fireChangeEvent --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,drawBackground --> fillBackground,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,drawBackground --> drawBackgroundImage,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,fillBackground --> fillBackground$2,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,annotationChanged --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,axisChanged --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,datasetChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.Plot,markerChanged --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> DEFAULT_INSETS,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> DEFAULT_BACKGROUND_PAINT,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> DEFAULT_OUTLINE_STROKE,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> DEFAULT_OUTLINE_PAINT,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> backgroundImageAlignment,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> backgroundImageAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> parent,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> insets,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> backgroundPaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> backgroundAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> backgroundImage,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> outlineVisible,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> outlineStroke,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> outlinePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> foregroundAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> noDataMessage,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> noDataMessageFont,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> noDataMessagePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> drawingSupplier,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> notify,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<init> --> listenerList,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getDatasetGroup --> datasetGroup,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setDatasetGroup --> datasetGroup,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getNoDataMessage --> noDataMessage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setNoDataMessage --> noDataMessage,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getNoDataMessageFont --> noDataMessageFont,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setNoDataMessageFont --> noDataMessageFont,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getNoDataMessagePaint --> noDataMessagePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setNoDataMessagePaint --> noDataMessagePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getParent --> parent,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setParent --> parent,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getInsets --> insets,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setInsets$2 --> insets,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setInsets$2 --> insets,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getBackgroundPaint --> backgroundPaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundPaint --> backgroundPaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundPaint --> backgroundPaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getBackgroundAlpha --> backgroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundAlpha --> backgroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundAlpha --> backgroundAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getDrawingSupplier --> drawingSupplier,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setDrawingSupplier --> drawingSupplier,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setDrawingSupplier$2 --> drawingSupplier,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getBackgroundImage --> backgroundImage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundImage --> backgroundImage,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundImageAlignment --> backgroundImageAlignment,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setBackgroundImageAlpha --> backgroundImageAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,isOutlineVisible --> outlineVisible,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setOutlineVisible --> outlineVisible,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getOutlineStroke --> outlineStroke,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setOutlineStroke --> outlineStroke,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setOutlineStroke --> outlineStroke,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getOutlinePaint --> outlinePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setOutlinePaint --> outlinePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setOutlinePaint --> outlinePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,getForegroundAlpha --> foregroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setForegroundAlpha --> foregroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setForegroundAlpha --> foregroundAlpha,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,isNotify --> notify,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,setNotify --> notify,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,addChangeListener --> listenerList,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,removeChangeListener --> listenerList,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,notifyListeners --> notify,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,notifyListeners --> listenerList,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,fillBackground$2 --> backgroundPaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,fillBackground$2 --> backgroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawBackgroundImage --> backgroundImage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawBackgroundImage --> backgroundImageAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawBackgroundImage --> backgroundImageAlignment,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawOutline --> outlineVisible,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawOutline --> outlineStroke,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawOutline --> outlinePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawNoDataMessage --> noDataMessage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawNoDataMessage --> noDataMessageFont,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,drawNoDataMessage --> noDataMessagePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> noDataMessage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> noDataMessageFont,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> noDataMessagePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> insets,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> outlineVisible,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> outlineStroke,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> outlinePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> backgroundPaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> backgroundImage,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> backgroundImageAlignment,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> backgroundImageAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> foregroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> backgroundAlpha,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> drawingSupplier,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,equals --> notify,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,clone --> datasetGroup,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,clone --> drawingSupplier,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,clone --> datasetGroup,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,clone --> drawingSupplier,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,clone --> listenerList,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,writeObject --> noDataMessagePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,writeObject --> outlineStroke,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,writeObject --> outlinePaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,writeObject --> backgroundPaint,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,readObject --> noDataMessagePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,readObject --> outlineStroke,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,readObject --> outlinePaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,readObject --> backgroundPaint,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,readObject --> listenerList,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> ZERO,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_INSETS,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_OUTLINE_STROKE,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_OUTLINE_PAINT,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_BACKGROUND_PAINT,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_LEGEND_ITEM_BOX,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,<clinit> --> DEFAULT_LEGEND_ITEM_CIRCLE,org.jfree.chart.plot.Plot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,fillBackground --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,fillBackground$2 --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,fillBackground$2 --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,datasetChanged --> DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(METHOD,org.jfree.chart.plot.Plot,<init> --> <init>,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(METHOD,org.jfree.chart.plot.Plot,setNoDataMessageFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Plot,setNoDataMessagePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Plot,setInsets$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Plot,setNotify --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Plot,notifyListeners --> plotChanged,org.jfree.chart.event.PlotChangeListener,);
Call(METHOD,org.jfree.chart.plot.Plot,fireChangeEvent --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Plot,fillBackground$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Plot,createAndAddEntity --> getOwner,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.Plot,createAndAddEntity --> getEntityCollection,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.Plot,createAndAddEntity --> <init>$3,org.jfree.chart.entity.PlotEntity,);
Call(METHOD,org.jfree.chart.plot.Plot,createAndAddEntity --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.plot.Plot,datasetChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Plot,datasetChanged --> setType,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Plot,resolveDomainAxisLocation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Plot,resolveRangeAxisLocation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 5
StartClass 6
Class(org.jfree.chart.title.LegendTitle,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_ITEM_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_ITEM_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(sources,org.jfree.chart.LegendItemSource[],Private,N,N,);
Attribute(backgroundPaint,java.awt.Paint,Private,N,N,);
Attribute(legendItemGraphicEdge,org.jfree.ui.RectangleEdge,Private,N,N,);
Attribute(legendItemGraphicAnchor,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(legendItemGraphicLocation,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(legendItemGraphicPadding,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(itemFont,java.awt.Font,Private,N,N,);
Attribute(itemPaint,java.awt.Paint,Private,N,N,);
Attribute(itemLabelPadding,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(items,org.jfree.chart.block.BlockContainer,Private,N,N,);
Attribute(hLayout,org.jfree.chart.block.Arrangement,Private,N,N,);
Attribute(vLayout,org.jfree.chart.block.Arrangement,Private,N,N,);
Attribute(wrapper,org.jfree.chart.block.BlockContainer,Private,N,N,);
Attribute(sortOrder,org.jfree.util.SortOrder,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getSources,org.jfree.chart.LegendItemSource[],Public,N,N);
Method(setSources,void,Public,N,N);
Method(getBackgroundPaint,java.awt.Paint,Public,N,N);
Method(setBackgroundPaint,void,Public,N,N);
Method(getLegendItemGraphicEdge,org.jfree.ui.RectangleEdge,Public,N,N);
Method(setLegendItemGraphicEdge,void,Public,N,N);
Method(getLegendItemGraphicAnchor,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setLegendItemGraphicAnchor,void,Public,N,N);
Method(getLegendItemGraphicLocation,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setLegendItemGraphicLocation,void,Public,N,N);
Method(getLegendItemGraphicPadding,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setLegendItemGraphicPadding,void,Public,N,N);
Method(getItemFont,java.awt.Font,Public,N,N);
Method(setItemFont,void,Public,N,N);
Method(getItemPaint,java.awt.Paint,Public,N,N);
Method(setItemPaint,void,Public,N,N);
Method(getItemLabelPadding,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setItemLabelPadding,void,Public,N,N);
Method(getSortOrder,org.jfree.util.SortOrder,Public,N,N);
Method(setSortOrder,void,Public,N,N);
Method(fetchLegendItems,void,Protected,N,N);
Method(addItemBlock,void,Private,N,N);
Method(createLegendItemBlock,org.jfree.chart.block.Block,Protected,N,N);
Method(getItemContainer,org.jfree.chart.block.BlockContainer,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,java.lang.Object,Public,N,N);
Method(getWrapper,org.jfree.chart.block.BlockContainer,Public,N,N);
Method(setWrapper,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.jfree.chart.LegendItemSource,);
Parameter(<init>$2,org.jfree.chart.LegendItemSource,);
Parameter(<init>$2,org.jfree.chart.block.Arrangement,);
Parameter(<init>$2,org.jfree.chart.block.Arrangement,);
Parameter(setSources,org.jfree.chart.LegendItemSource[],);
Parameter(setBackgroundPaint,java.awt.Paint,);
Parameter(setLegendItemGraphicEdge,org.jfree.ui.RectangleEdge,);
Parameter(setLegendItemGraphicAnchor,org.jfree.ui.RectangleAnchor,);
Parameter(setLegendItemGraphicLocation,org.jfree.ui.RectangleAnchor,);
Parameter(setLegendItemGraphicPadding,org.jfree.ui.RectangleInsets,);
Parameter(setItemFont,java.awt.Font,);
Parameter(setItemPaint,java.awt.Paint,);
Parameter(setItemLabelPadding,org.jfree.ui.RectangleInsets,);
Parameter(setSortOrder,org.jfree.util.SortOrder,);
Parameter(addItemBlock,org.jfree.chart.LegendItem,);
Parameter(createLegendItemBlock,org.jfree.chart.LegendItem,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.lang.Object,);
Parameter(setWrapper,org.jfree.chart.block.BlockContainer,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.title.Title);
SuperClass(org.jfree.chart.block.AbstractBlock);
Generalization(org.jfree.chart.title.Title);
Composition(org.jfree.chart.block.BlockContainer);
Composition(org.jfree.chart.block.Arrangement);
Call(METHOD,org.jfree.chart.title.LegendTitle,<init> --> <init>$2,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> addItemBlock,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,addItemBlock --> createLegendItemBlock,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLegendItemGraphicAnchor,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLegendItemGraphicLocation,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> fetchLegendItems,org.jfree.chart.title.LegendTitle,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw --> draw$2,org.jfree.chart.title.LegendTitle,);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> DEFAULT_ITEM_FONT,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> DEFAULT_ITEM_PAINT,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> sources,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> items,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> hLayout,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> vLayout,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> backgroundPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> legendItemGraphicEdge,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> legendItemGraphicAnchor,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> legendItemGraphicLocation,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> legendItemGraphicPadding,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> itemFont,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> itemPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> itemLabelPadding,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<init>$2 --> sortOrder,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getSources --> sources,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setSources --> sources,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getBackgroundPaint --> backgroundPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setBackgroundPaint --> backgroundPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getLegendItemGraphicEdge --> legendItemGraphicEdge,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setLegendItemGraphicEdge --> legendItemGraphicEdge,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getLegendItemGraphicAnchor --> legendItemGraphicAnchor,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setLegendItemGraphicAnchor --> legendItemGraphicAnchor,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getLegendItemGraphicLocation --> legendItemGraphicLocation,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setLegendItemGraphicLocation --> legendItemGraphicLocation,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getLegendItemGraphicPadding --> legendItemGraphicPadding,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setLegendItemGraphicPadding --> legendItemGraphicPadding,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getItemFont --> itemFont,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setItemFont --> itemFont,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getItemPaint --> itemPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setItemPaint --> itemPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getItemLabelPadding --> itemLabelPadding,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setItemLabelPadding --> itemLabelPadding,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getSortOrder --> sortOrder,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setSortOrder --> sortOrder,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,fetchLegendItems --> items,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,fetchLegendItems --> hLayout,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,fetchLegendItems --> vLayout,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,fetchLegendItems --> sortOrder,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,fetchLegendItems --> sources,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,addItemBlock --> items,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> legendItemGraphicPadding,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> legendItemGraphicEdge,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> itemFont,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> itemPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> itemLabelPadding,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getItemContainer --> items,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,arrange --> items,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,arrange --> wrapper,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,draw$2 --> backgroundPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,draw$2 --> wrapper,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,draw$2 --> items,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,getWrapper --> wrapper,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,setWrapper --> wrapper,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> backgroundPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> legendItemGraphicEdge,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> legendItemGraphicAnchor,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> legendItemGraphicLocation,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> itemFont,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> itemPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> hLayout,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> vLayout,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,equals --> sortOrder,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,writeObject --> backgroundPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,writeObject --> itemPaint,org.jfree.chart.title.LegendTitle,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,readObject --> backgroundPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,readObject --> itemPaint,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<clinit> --> DEFAULT_ITEM_FONT,org.jfree.chart.title.LegendTitle,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendTitle,<clinit> --> DEFAULT_ITEM_PAINT,org.jfree.chart.title.LegendTitle,WRITE);
Call(METHOD,org.jfree.chart.title.LegendTitle,<init> --> <init>,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.title.LegendTitle,<init> --> <init>,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.title.LegendTitle,<init>$2 --> <init>,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,<init>$2 --> <init>$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSources --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSources --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSources --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setBackgroundPaint --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setBackgroundPaint --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicEdge --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicEdge --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicEdge --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicAnchor --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicPadding --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicPadding --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setLegendItemGraphicPadding --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemFont --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemFont --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemPaint --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemPaint --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemLabelPadding --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemLabelPadding --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setItemLabelPadding --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSortOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSortOrder --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.LegendTitle,setSortOrder --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> clear,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> getPosition,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> setArrangement,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> getLegendItems,org.jfree.chart.LegendItemSource,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> getItemCount,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.title.LegendTitle,fetchLegendItems --> get,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.title.LegendTitle,addItemBlock --> add,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getShape,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getFillPaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getFillPaintTransformer,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setFillPaintTransformer,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> isShapeFilled,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setShapeFilled,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLine,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setLine,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLineStroke,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setLineStroke,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLinePaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setLinePaint,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> isLineVisible,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setLineVisible,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> isShapeVisible,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setShapeVisible,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> isShapeOutlineVisible,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setShapeOutlineVisible,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getOutlinePaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setOutlinePaint,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getOutlineStroke,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setOutlineStroke,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getDataset,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getSeriesKey,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>$2,org.jfree.chart.title.LegendItemBlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setShapeAnchor,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setShapeLocation,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> add$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLabelFont,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLabelPaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getLabel,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>$3,org.jfree.chart.block.LabelBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> add,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getToolTipText,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setToolTipText,org.jfree.chart.title.LegendItemBlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> getURLText,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> setURLText,org.jfree.chart.title.LegendItemBlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.title.LegendTitle,createLegendItemBlock --> <init>$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> isEmpty,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> toContentConstraint,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> arrange,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> calculateTotalHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,arrange --> calculateTotalWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> getGenerateEntities,org.jfree.chart.block.EntityBlockParams,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> <init>,org.jfree.chart.entity.TitleEntity,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> add,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> trimMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> getFrame,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> draw,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> trimPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> draw$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> getEntityCollection,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> addAll,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.LegendTitle,draw$2 --> setEntityCollection,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.title.LegendTitle,equals --> equals,org.jfree.chart.title.Title,);
EndClass 6
StartClass 7
Class(org.jfree.chart.title.Title,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_POSITION,org.jfree.ui.RectangleEdge,Public,Y,Y,);
Attribute(DEFAULT_HORIZONTAL_ALIGNMENT,org.jfree.ui.HorizontalAlignment,Public,Y,Y,);
Attribute(DEFAULT_VERTICAL_ALIGNMENT,org.jfree.ui.VerticalAlignment,Public,Y,Y,);
Attribute(DEFAULT_PADDING,org.jfree.ui.RectangleInsets,Public,Y,Y,);
Attribute(visible,boolean,Public,N,N,);
Attribute(position,org.jfree.ui.RectangleEdge,Private,N,N,);
Attribute(horizontalAlignment,org.jfree.ui.HorizontalAlignment,Private,N,N,);
Attribute(verticalAlignment,org.jfree.ui.VerticalAlignment,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(notify,boolean,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(<init>$2,void,Protected,N,N);
Method(<init>$3,void,Protected,N,N);
Method(isVisible,boolean,Public,N,N);
Method(setVisible,void,Public,N,N);
Method(getPosition,org.jfree.ui.RectangleEdge,Public,N,N);
Method(setPosition,void,Public,N,N);
Method(getHorizontalAlignment,org.jfree.ui.HorizontalAlignment,Public,N,N);
Method(setHorizontalAlignment,void,Public,N,N);
Method(getVerticalAlignment,org.jfree.ui.VerticalAlignment,Public,N,N);
Method(setVerticalAlignment,void,Public,N,N);
Method(getNotify,boolean,Public,N,N);
Method(setNotify,void,Public,N,N);
Method(draw,void,Public,N,Y);
Method(clone,java.lang.Object,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(notifyListeners,void,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.jfree.ui.RectangleEdge,);
Parameter(<init>$2,org.jfree.ui.HorizontalAlignment,);
Parameter(<init>$2,org.jfree.ui.VerticalAlignment,);
Parameter(<init>$3,org.jfree.ui.RectangleEdge,);
Parameter(<init>$3,org.jfree.ui.HorizontalAlignment,);
Parameter(<init>$3,org.jfree.ui.VerticalAlignment,);
Parameter(<init>$3,org.jfree.ui.RectangleInsets,);
Parameter(setVisible,boolean,);
Parameter(setPosition,org.jfree.ui.RectangleEdge,);
Parameter(setHorizontalAlignment,org.jfree.ui.HorizontalAlignment,);
Parameter(setVerticalAlignment,org.jfree.ui.VerticalAlignment,);
Parameter(setNotify,boolean,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(addChangeListener,org.jfree.chart.event.TitleChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.TitleChangeListener,);
Parameter(notifyListeners,org.jfree.chart.event.TitleChangeEvent,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.block.AbstractBlock);
SubClass(org.jfree.chart.title.TextTitle);
SubClass(org.jfree.chart.title.LegendTitle);
Generalization(org.jfree.chart.block.AbstractBlock);
Realization(org.jfree.chart.block.Block);
Call(METHOD,org.jfree.chart.title.Title,<init> --> <init>$3,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,<init>$2 --> <init>$3,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,setVisible --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,setPosition --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,setHorizontalAlignment --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,setVerticalAlignment --> notifyListeners,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.title.Title,setNotify --> notifyListeners,org.jfree.chart.title.Title,);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init> --> DEFAULT_POSITION,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init> --> DEFAULT_HORIZONTAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init> --> DEFAULT_VERTICAL_ALIGNMENT,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init> --> DEFAULT_PADDING,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$2 --> DEFAULT_PADDING,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> visible,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> position,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> horizontalAlignment,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> verticalAlignment,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> listenerList,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<init>$3 --> notify,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,isVisible --> visible,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setVisible --> visible,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,getPosition --> position,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setPosition --> position,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setPosition --> position,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,getHorizontalAlignment --> horizontalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setHorizontalAlignment --> horizontalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setHorizontalAlignment --> horizontalAlignment,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,getVerticalAlignment --> verticalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setVerticalAlignment --> verticalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setVerticalAlignment --> verticalAlignment,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,getNotify --> notify,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,setNotify --> notify,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,clone --> listenerList,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,addChangeListener --> listenerList,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,removeChangeListener --> listenerList,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,notifyListeners --> notify,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,notifyListeners --> listenerList,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,equals --> visible,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,equals --> position,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,equals --> horizontalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,equals --> verticalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,equals --> notify,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,hashCode --> position,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,hashCode --> horizontalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,hashCode --> verticalAlignment,org.jfree.chart.title.Title,READ);
Call(ATTRIBUTE,org.jfree.chart.title.Title,readObject --> listenerList,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<clinit> --> DEFAULT_POSITION,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<clinit> --> DEFAULT_HORIZONTAL_ALIGNMENT,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<clinit> --> DEFAULT_VERTICAL_ALIGNMENT,org.jfree.chart.title.Title,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.Title,<clinit> --> DEFAULT_PADDING,org.jfree.chart.title.Title,WRITE);
Call(METHOD,org.jfree.chart.title.Title,<init>$3 --> <init>,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.Title,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.Title,<init>$3 --> setPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.Title,setVisible --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.Title,setPosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.Title,setPosition --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.Title,setHorizontalAlignment --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.Title,setHorizontalAlignment --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.Title,setVerticalAlignment --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.Title,setVerticalAlignment --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.Title,setNotify --> <init>,org.jfree.chart.event.TitleChangeEvent,);
Call(METHOD,org.jfree.chart.title.Title,clone --> clone,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.Title,notifyListeners --> titleChanged,org.jfree.chart.event.TitleChangeListener,);
Call(METHOD,org.jfree.chart.title.Title,equals --> equals,org.jfree.chart.block.AbstractBlock,);
EndClass 7
StartClass 8
Class(org.jfree.chart.plot.CategoryPlot,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_DOMAIN_GRIDLINES_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_RANGE_GRIDLINES_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_GRIDLINE_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_GRIDLINE_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_VALUE_LABEL_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(localizationResources,java.util.ResourceBundle,Protected,Y,N,);
Attribute(orientation,org.jfree.chart.plot.PlotOrientation,Private,N,N,);
Attribute(axisOffset,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(domainAxes,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.CategoryAxis);
Attribute(domainAxisLocations,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.AxisLocation);
Attribute(drawSharedDomainAxis,boolean,Private,N,N,);
Attribute(rangeAxes,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.ValueAxis);
Attribute(rangeAxisLocations,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.AxisLocation);
Attribute(datasets,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.data.category.CategoryDataset);
Attribute(datasetToDomainAxesMap,java.util.TreeMap,Private,N,N,);
Attribute(datasetToRangeAxesMap,java.util.TreeMap,Private,N,N,);
Attribute(renderers,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.renderer.category.CategoryItemRenderer);
Attribute(renderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,Private,N,N,);
Attribute(columnRenderingOrder,org.jfree.util.SortOrder,Private,N,N,);
Attribute(rowRenderingOrder,org.jfree.util.SortOrder,Private,N,N,);
Attribute(domainGridlinesVisible,boolean,Private,N,N,);
Attribute(domainGridlinePosition,org.jfree.chart.axis.CategoryAnchor,Private,N,N,);
Attribute(domainGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeZeroBaselineVisible,boolean,Private,N,N,);
Attribute(rangeZeroBaselineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeZeroBaselinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeGridlinesVisible,boolean,Private,N,N,);
Attribute(rangeGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeMinorGridlinesVisible,boolean,Private,N,N,);
Attribute(rangeMinorGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeMinorGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(anchorValue,double,Private,N,N,);
Attribute(crosshairDatasetIndex,int,Private,N,N,);
Attribute(domainCrosshairVisible,boolean,Private,N,N,);
Attribute(domainCrosshairRowKey,java.lang.Comparable,Private,N,N,);
Attribute(domainCrosshairColumnKey,java.lang.Comparable,Private,N,N,);
Attribute(domainCrosshairStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainCrosshairPaint,java.awt.Paint,Private,N,N,);
Attribute(rangeCrosshairVisible,boolean,Private,N,N,);
Attribute(rangeCrosshairValue,double,Private,N,N,);
Attribute(rangeCrosshairStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeCrosshairPaint,java.awt.Paint,Private,N,N,);
Attribute(rangeCrosshairLockedOnData,boolean,Private,N,N,);
Attribute(foregroundDomainMarkers,java.util.Map,Private,N,N,);
Attribute(backgroundDomainMarkers,java.util.Map,Private,N,N,);
Attribute(foregroundRangeMarkers,java.util.Map,Private,N,N,);
Attribute(backgroundRangeMarkers,java.util.Map,Private,N,N,);
Attribute(annotations,java.util.List,Private,N,N,);
Attribute(weight,int,Private,N,N,);
Attribute(fixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Private,N,N,);
Attribute(fixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Private,N,N,);
Attribute(fixedLegendItems,org.jfree.chart.LegendItemCollection,Private,N,N,);
Attribute(rangePannable,boolean,Private,N,N,);
Attribute(shadowGenerator,org.jfree.chart.util.ShadowGenerator,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getPlotType,java.lang.String,Public,N,N);
Method(getOrientation,org.jfree.chart.plot.PlotOrientation,Public,N,N);
Method(setOrientation,void,Public,N,N);
Method(getAxisOffset,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setAxisOffset,void,Public,N,N);
Method(getDomainAxis,org.jfree.chart.axis.CategoryAxis,Public,N,N);
Method(getDomainAxis$2,org.jfree.chart.axis.CategoryAxis,Public,N,N);
Method(setDomainAxis,void,Public,N,N);
Method(setDomainAxis$2,void,Public,N,N);
Method(setDomainAxis$3,void,Public,N,N);
Method(setDomainAxes,void,Public,N,N);
Method(getDomainAxisIndex,int,Public,N,N);
Method(getDomainAxisLocation,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(getDomainAxisLocation$2,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setDomainAxisLocation,void,Public,N,N);
Method(setDomainAxisLocation$2,void,Public,N,N);
Method(setDomainAxisLocation$3,void,Public,N,N);
Method(setDomainAxisLocation$4,void,Public,N,N);
Method(getDomainAxisEdge,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getDomainAxisEdge$2,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getDomainAxisCount,int,Public,N,N);
Method(clearDomainAxes,void,Public,N,N);
Method(configureDomainAxes,void,Public,N,N);
Method(getRangeAxis,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(getRangeAxis$2,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(setRangeAxis,void,Public,N,N);
Method(setRangeAxis$2,void,Public,N,N);
Method(setRangeAxis$3,void,Public,N,N);
Method(setRangeAxes,void,Public,N,N);
Method(getRangeAxisIndex,int,Public,N,N);
Method(findRangeAxisIndex,int,Private,N,N);
Method(getRangeAxisLocation,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(getRangeAxisLocation$2,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setRangeAxisLocation,void,Public,N,N);
Method(setRangeAxisLocation$2,void,Public,N,N);
Method(setRangeAxisLocation$3,void,Public,N,N);
Method(setRangeAxisLocation$4,void,Public,N,N);
Method(getRangeAxisEdge,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getRangeAxisEdge$2,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getRangeAxisCount,int,Public,N,N);
Method(clearRangeAxes,void,Public,N,N);
Method(configureRangeAxes,void,Public,N,N);
Method(getDataset,org.jfree.data.category.CategoryDataset,Public,N,N);
Method(getDataset$2,org.jfree.data.category.CategoryDataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(setDataset$2,void,Public,N,N);
Method(getDatasetCount,int,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(mapDatasetToDomainAxis,void,Public,N,N);
Method(mapDatasetToDomainAxes,void,Public,N,N);
Method(checkAxisIndices,void,Private,N,N);
Method(getDomainAxisForDataset,org.jfree.chart.axis.CategoryAxis,Public,N,N);
Method(mapDatasetToRangeAxis,void,Public,N,N);
Method(mapDatasetToRangeAxes,void,Public,N,N);
Method(getRangeAxisForDataset,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(getRendererCount,int,Public,N,N);
Method(getRenderer,org.jfree.chart.renderer.category.CategoryItemRenderer,Public,N,N);
Method(getRenderer$2,org.jfree.chart.renderer.category.CategoryItemRenderer,Public,N,N);
Method(setRenderer,void,Public,N,N);
Method(setRenderer$2,void,Public,N,N);
Method(setRenderer$3,void,Public,N,N);
Method(setRenderer$4,void,Public,N,N);
Method(setRenderers,void,Public,N,N);
Method(getRendererForDataset,org.jfree.chart.renderer.category.CategoryItemRenderer,Public,N,N);
Method(getIndexOf,int,Public,N,N);
Method(getDatasetRenderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,Public,N,N);
Method(setDatasetRenderingOrder,void,Public,N,N);
Method(getColumnRenderingOrder,org.jfree.util.SortOrder,Public,N,N);
Method(setColumnRenderingOrder,void,Public,N,N);
Method(getRowRenderingOrder,org.jfree.util.SortOrder,Public,N,N);
Method(setRowRenderingOrder,void,Public,N,N);
Method(isDomainGridlinesVisible,boolean,Public,N,N);
Method(setDomainGridlinesVisible,void,Public,N,N);
Method(getDomainGridlinePosition,org.jfree.chart.axis.CategoryAnchor,Public,N,N);
Method(setDomainGridlinePosition,void,Public,N,N);
Method(getDomainGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setDomainGridlineStroke,void,Public,N,N);
Method(getDomainGridlinePaint,java.awt.Paint,Public,N,N);
Method(setDomainGridlinePaint,void,Public,N,N);
Method(isRangeZeroBaselineVisible,boolean,Public,N,N);
Method(setRangeZeroBaselineVisible,void,Public,N,N);
Method(getRangeZeroBaselineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeZeroBaselineStroke,void,Public,N,N);
Method(getRangeZeroBaselinePaint,java.awt.Paint,Public,N,N);
Method(setRangeZeroBaselinePaint,void,Public,N,N);
Method(isRangeGridlinesVisible,boolean,Public,N,N);
Method(setRangeGridlinesVisible,void,Public,N,N);
Method(getRangeGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeGridlineStroke,void,Public,N,N);
Method(getRangeGridlinePaint,java.awt.Paint,Public,N,N);
Method(setRangeGridlinePaint,void,Public,N,N);
Method(isRangeMinorGridlinesVisible,boolean,Public,N,N);
Method(setRangeMinorGridlinesVisible,void,Public,N,N);
Method(getRangeMinorGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeMinorGridlineStroke,void,Public,N,N);
Method(getRangeMinorGridlinePaint,java.awt.Paint,Public,N,N);
Method(setRangeMinorGridlinePaint,void,Public,N,N);
Method(getFixedLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(setFixedLegendItems,void,Public,N,N);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(handleClick,void,Public,N,N);
Method(zoom,void,Public,N,N);
Method(annotationChanged,void,Public,N,N);
Method(datasetChanged,void,Public,N,N);
Method(rendererChanged,void,Public,N,N);
Method(addDomainMarker,void,Public,N,N);
Method(addDomainMarker$2,void,Public,N,N);
Method(addDomainMarker$3,void,Public,N,N);
Method(addDomainMarker$4,void,Public,N,N);
Method(clearDomainMarkers,void,Public,N,N);
Method(getDomainMarkers,java.util.Collection,Public,N,N);
Method(getDomainMarkers$2,java.util.Collection,Public,N,N);
Method(clearDomainMarkers$2,void,Public,N,N);
Method(removeDomainMarker,boolean,Public,N,N);
Method(removeDomainMarker$2,boolean,Public,N,N);
Method(removeDomainMarker$3,boolean,Public,N,N);
Method(removeDomainMarker$4,boolean,Public,N,N);
Method(addRangeMarker,void,Public,N,N);
Method(addRangeMarker$2,void,Public,N,N);
Method(addRangeMarker$3,void,Public,N,N);
Method(addRangeMarker$4,void,Public,N,N);
Method(clearRangeMarkers,void,Public,N,N);
Method(getRangeMarkers,java.util.Collection,Public,N,N);
Method(getRangeMarkers$2,java.util.Collection,Public,N,N);
Method(clearRangeMarkers$2,void,Public,N,N);
Method(removeRangeMarker,boolean,Public,N,N);
Method(removeRangeMarker$2,boolean,Public,N,N);
Method(removeRangeMarker$3,boolean,Public,N,N);
Method(removeRangeMarker$4,boolean,Public,N,N);
Method(isDomainCrosshairVisible,boolean,Public,N,N);
Method(setDomainCrosshairVisible,void,Public,N,N);
Method(getDomainCrosshairRowKey,java.lang.Comparable,Public,N,N);
Method(setDomainCrosshairRowKey,void,Public,N,N);
Method(setDomainCrosshairRowKey$2,void,Public,N,N);
Method(getDomainCrosshairColumnKey,java.lang.Comparable,Public,N,N);
Method(setDomainCrosshairColumnKey,void,Public,N,N);
Method(setDomainCrosshairColumnKey$2,void,Public,N,N);
Method(getCrosshairDatasetIndex,int,Public,N,N);
Method(setCrosshairDatasetIndex,void,Public,N,N);
Method(setCrosshairDatasetIndex$2,void,Public,N,N);
Method(getDomainCrosshairPaint,java.awt.Paint,Public,N,N);
Method(setDomainCrosshairPaint,void,Public,N,N);
Method(getDomainCrosshairStroke,java.awt.Stroke,Public,N,N);
Method(setDomainCrosshairStroke,void,Public,N,N);
Method(isRangeCrosshairVisible,boolean,Public,N,N);
Method(setRangeCrosshairVisible,void,Public,N,N);
Method(isRangeCrosshairLockedOnData,boolean,Public,N,N);
Method(setRangeCrosshairLockedOnData,void,Public,N,N);
Method(getRangeCrosshairValue,double,Public,N,N);
Method(setRangeCrosshairValue,void,Public,N,N);
Method(setRangeCrosshairValue$2,void,Public,N,N);
Method(getRangeCrosshairStroke,java.awt.Stroke,Public,N,N);
Method(setRangeCrosshairStroke,void,Public,N,N);
Method(getRangeCrosshairPaint,java.awt.Paint,Public,N,N);
Method(setRangeCrosshairPaint,void,Public,N,N);
Method(getAnnotations,java.util.List,Public,N,N);
Method(addAnnotation,void,Public,N,N);
Method(addAnnotation$2,void,Public,N,N);
Method(removeAnnotation,boolean,Public,N,N);
Method(removeAnnotation$2,boolean,Public,N,N);
Method(clearAnnotations,void,Public,N,N);
Method(getShadowGenerator,org.jfree.chart.util.ShadowGenerator,Public,N,N);
Method(setShadowGenerator,void,Public,N,N);
Method(calculateDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(calculateRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(integerise,java.awt.Rectangle,Private,N,N);
Method(calculateAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(draw,void,Public,N,N);
Method(getDatasetIndices,java.util.List,Private,N,N);
Method(getRendererIndices,java.util.List,Private,N,N);
Method(drawBackground,void,Public,N,N);
Method(drawAxes,java.util.Map,Protected,N,N);
Method(render,boolean,Public,N,N);
Method(drawDomainGridlines,void,Protected,N,N);
Method(drawRangeGridlines,void,Protected,N,N);
Method(drawZeroRangeBaseline,void,Protected,N,N);
Method(drawAnnotations,void,Protected,N,N);
Method(drawDomainMarkers,void,Protected,N,N);
Method(drawRangeMarkers,void,Protected,N,N);
Method(drawRangeLine,void,Protected,N,N);
Method(drawDomainCrosshair,void,Protected,N,N);
Method(drawRangeCrosshair,void,Protected,N,N);
Method(getDataRange,org.jfree.data.Range,Public,N,N);
Method(datasetsMappedToDomainAxis,java.util.List,Private,N,N);
Method(datasetsMappedToRangeAxis,java.util.List,Private,N,N);
Method(getWeight,int,Public,N,N);
Method(setWeight,void,Public,N,N);
Method(getFixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(setFixedDomainAxisSpace,void,Public,N,N);
Method(setFixedDomainAxisSpace$2,void,Public,N,N);
Method(getFixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(setFixedRangeAxisSpace,void,Public,N,N);
Method(setFixedRangeAxisSpace$2,void,Public,N,N);
Method(getCategories,java.util.List,Public,N,N);
Method(getCategoriesForAxis,java.util.List,Public,N,N);
Method(getDrawSharedDomainAxis,boolean,Public,N,N);
Method(setDrawSharedDomainAxis,void,Public,N,N);
Method(isDomainPannable,boolean,Public,N,N);
Method(isRangePannable,boolean,Public,N,N);
Method(setRangePannable,void,Public,N,N);
Method(panDomainAxes,void,Public,N,N);
Method(panRangeAxes,void,Public,N,N);
Method(isDomainZoomable,boolean,Public,N,N);
Method(isRangeZoomable,boolean,Public,N,N);
Method(zoomDomainAxes,void,Public,N,N);
Method(zoomDomainAxes$2,void,Public,N,N);
Method(zoomDomainAxes$3,void,Public,N,N);
Method(zoomRangeAxes,void,Public,N,N);
Method(zoomRangeAxes$2,void,Public,N,N);
Method(zoomRangeAxes$3,void,Public,N,N);
Method(getAnchorValue,double,Public,N,N);
Method(setAnchorValue,void,Public,N,N);
Method(setAnchorValue$2,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(cloneMarkerMap,java.util.Map,Private,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.jfree.data.category.CategoryDataset,);
Parameter(<init>$2,org.jfree.chart.axis.CategoryAxis,);
Parameter(<init>$2,org.jfree.chart.axis.ValueAxis,);
Parameter(<init>$2,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setOrientation,org.jfree.chart.plot.PlotOrientation,);
Parameter(setAxisOffset,org.jfree.ui.RectangleInsets,);
Parameter(getDomainAxis$2,int,);
Parameter(setDomainAxis,org.jfree.chart.axis.CategoryAxis,);
Parameter(setDomainAxis$2,int,);
Parameter(setDomainAxis$2,org.jfree.chart.axis.CategoryAxis,);
Parameter(setDomainAxis$3,int,);
Parameter(setDomainAxis$3,org.jfree.chart.axis.CategoryAxis,);
Parameter(setDomainAxis$3,boolean,);
Parameter(setDomainAxes,org.jfree.chart.axis.CategoryAxis[],);
Parameter(getDomainAxisIndex,org.jfree.chart.axis.CategoryAxis,);
Parameter(getDomainAxisLocation$2,int,);
Parameter(setDomainAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$2,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$2,boolean,);
Parameter(setDomainAxisLocation$3,int,);
Parameter(setDomainAxisLocation$3,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$4,int,);
Parameter(setDomainAxisLocation$4,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$4,boolean,);
Parameter(getDomainAxisEdge$2,int,);
Parameter(getRangeAxis$2,int,);
Parameter(setRangeAxis,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxis$2,int,);
Parameter(setRangeAxis$2,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxis$3,int,);
Parameter(setRangeAxis$3,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxis$3,boolean,);
Parameter(setRangeAxes,org.jfree.chart.axis.ValueAxis[],);
Parameter(getRangeAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(findRangeAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(getRangeAxisLocation$2,int,);
Parameter(setRangeAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$2,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$2,boolean,);
Parameter(setRangeAxisLocation$3,int,);
Parameter(setRangeAxisLocation$3,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$4,int,);
Parameter(setRangeAxisLocation$4,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$4,boolean,);
Parameter(getRangeAxisEdge$2,int,);
Parameter(getDataset$2,int,);
Parameter(setDataset,org.jfree.data.category.CategoryDataset,);
Parameter(setDataset$2,int,);
Parameter(setDataset$2,org.jfree.data.category.CategoryDataset,);
Parameter(indexOf,org.jfree.data.category.CategoryDataset,);
Parameter(mapDatasetToDomainAxis,int,);
Parameter(mapDatasetToDomainAxis,int,);
Parameter(mapDatasetToDomainAxes,int,);
Parameter(mapDatasetToDomainAxes,java.util.List,);
Parameter(checkAxisIndices,java.util.List,);
Parameter(getDomainAxisForDataset,int,);
Parameter(mapDatasetToRangeAxis,int,);
Parameter(mapDatasetToRangeAxis,int,);
Parameter(mapDatasetToRangeAxes,int,);
Parameter(mapDatasetToRangeAxes,java.util.List,);
Parameter(getRangeAxisForDataset,int,);
Parameter(getRenderer$2,int,);
Parameter(setRenderer,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setRenderer$2,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setRenderer$2,boolean,);
Parameter(setRenderer$3,int,);
Parameter(setRenderer$3,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setRenderer$4,int,);
Parameter(setRenderer$4,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setRenderer$4,boolean,);
Parameter(setRenderers,org.jfree.chart.renderer.category.CategoryItemRenderer[],);
Parameter(getRendererForDataset,org.jfree.data.category.CategoryDataset,);
Parameter(getIndexOf,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Parameter(setDatasetRenderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,);
Parameter(setColumnRenderingOrder,org.jfree.util.SortOrder,);
Parameter(setRowRenderingOrder,org.jfree.util.SortOrder,);
Parameter(setDomainGridlinesVisible,boolean,);
Parameter(setDomainGridlinePosition,org.jfree.chart.axis.CategoryAnchor,);
Parameter(setDomainGridlineStroke,java.awt.Stroke,);
Parameter(setDomainGridlinePaint,java.awt.Paint,);
Parameter(setRangeZeroBaselineVisible,boolean,);
Parameter(setRangeZeroBaselineStroke,java.awt.Stroke,);
Parameter(setRangeZeroBaselinePaint,java.awt.Paint,);
Parameter(setRangeGridlinesVisible,boolean,);
Parameter(setRangeGridlineStroke,java.awt.Stroke,);
Parameter(setRangeGridlinePaint,java.awt.Paint,);
Parameter(setRangeMinorGridlinesVisible,boolean,);
Parameter(setRangeMinorGridlineStroke,java.awt.Stroke,);
Parameter(setRangeMinorGridlinePaint,java.awt.Paint,);
Parameter(setFixedLegendItems,org.jfree.chart.LegendItemCollection,);
Parameter(handleClick,int,);
Parameter(handleClick,int,);
Parameter(handleClick,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoom,double,);
Parameter(annotationChanged,org.jfree.chart.event.AnnotationChangeEvent,);
Parameter(datasetChanged,org.jfree.data.general.DatasetChangeEvent,);
Parameter(rendererChanged,org.jfree.chart.event.RendererChangeEvent,);
Parameter(addDomainMarker,org.jfree.chart.plot.CategoryMarker,);
Parameter(addDomainMarker$2,org.jfree.chart.plot.CategoryMarker,);
Parameter(addDomainMarker$2,org.jfree.ui.Layer,);
Parameter(addDomainMarker$3,int,);
Parameter(addDomainMarker$3,org.jfree.chart.plot.CategoryMarker,);
Parameter(addDomainMarker$3,org.jfree.ui.Layer,);
Parameter(addDomainMarker$4,int,);
Parameter(addDomainMarker$4,org.jfree.chart.plot.CategoryMarker,);
Parameter(addDomainMarker$4,org.jfree.ui.Layer,);
Parameter(addDomainMarker$4,boolean,);
Parameter(getDomainMarkers,org.jfree.ui.Layer,);
Parameter(getDomainMarkers$2,int,);
Parameter(getDomainMarkers$2,org.jfree.ui.Layer,);
Parameter(clearDomainMarkers$2,int,);
Parameter(removeDomainMarker,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$2,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$2,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$3,int,);
Parameter(removeDomainMarker$3,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$3,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$4,int,);
Parameter(removeDomainMarker$4,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$4,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$4,boolean,);
Parameter(addRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$2,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$2,org.jfree.ui.Layer,);
Parameter(addRangeMarker$3,int,);
Parameter(addRangeMarker$3,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$3,org.jfree.ui.Layer,);
Parameter(addRangeMarker$4,int,);
Parameter(addRangeMarker$4,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$4,org.jfree.ui.Layer,);
Parameter(addRangeMarker$4,boolean,);
Parameter(getRangeMarkers,org.jfree.ui.Layer,);
Parameter(getRangeMarkers$2,int,);
Parameter(getRangeMarkers$2,org.jfree.ui.Layer,);
Parameter(clearRangeMarkers$2,int,);
Parameter(removeRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$2,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$2,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$3,int,);
Parameter(removeRangeMarker$3,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$3,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$4,int,);
Parameter(removeRangeMarker$4,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$4,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$4,boolean,);
Parameter(setDomainCrosshairVisible,boolean,);
Parameter(setDomainCrosshairRowKey,java.lang.Comparable,);
Parameter(setDomainCrosshairRowKey$2,java.lang.Comparable,);
Parameter(setDomainCrosshairRowKey$2,boolean,);
Parameter(setDomainCrosshairColumnKey,java.lang.Comparable,);
Parameter(setDomainCrosshairColumnKey$2,java.lang.Comparable,);
Parameter(setDomainCrosshairColumnKey$2,boolean,);
Parameter(setCrosshairDatasetIndex,int,);
Parameter(setCrosshairDatasetIndex$2,int,);
Parameter(setCrosshairDatasetIndex$2,boolean,);
Parameter(setDomainCrosshairPaint,java.awt.Paint,);
Parameter(setDomainCrosshairStroke,java.awt.Stroke,);
Parameter(setRangeCrosshairVisible,boolean,);
Parameter(setRangeCrosshairLockedOnData,boolean,);
Parameter(setRangeCrosshairValue,double,);
Parameter(setRangeCrosshairValue$2,double,);
Parameter(setRangeCrosshairValue$2,boolean,);
Parameter(setRangeCrosshairStroke,java.awt.Stroke,);
Parameter(setRangeCrosshairPaint,java.awt.Paint,);
Parameter(addAnnotation,org.jfree.chart.annotations.CategoryAnnotation,);
Parameter(addAnnotation$2,org.jfree.chart.annotations.CategoryAnnotation,);
Parameter(addAnnotation$2,boolean,);
Parameter(removeAnnotation,org.jfree.chart.annotations.CategoryAnnotation,);
Parameter(removeAnnotation$2,org.jfree.chart.annotations.CategoryAnnotation,);
Parameter(removeAnnotation$2,boolean,);
Parameter(setShadowGenerator,org.jfree.chart.util.ShadowGenerator,);
Parameter(calculateDomainAxisSpace,java.awt.Graphics2D,);
Parameter(calculateDomainAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(calculateRangeAxisSpace,java.awt.Graphics2D,);
Parameter(calculateRangeAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(integerise,java.awt.geom.Rectangle2D,);
Parameter(calculateAxisSpace,java.awt.Graphics2D,);
Parameter(calculateAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.geom.Point2D,);
Parameter(draw,org.jfree.chart.plot.PlotState,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getDatasetIndices,org.jfree.chart.plot.DatasetRenderingOrder,java.lang.Integer);
Parameter(getRendererIndices,org.jfree.chart.plot.DatasetRenderingOrder,java.lang.Integer);
Parameter(drawBackground,java.awt.Graphics2D,);
Parameter(drawBackground,java.awt.geom.Rectangle2D,);
Parameter(drawAxes,java.awt.Graphics2D,);
Parameter(drawAxes,java.awt.geom.Rectangle2D,);
Parameter(drawAxes,java.awt.geom.Rectangle2D,);
Parameter(drawAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(render,java.awt.Graphics2D,);
Parameter(render,java.awt.geom.Rectangle2D,);
Parameter(render,int,);
Parameter(render,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(render,org.jfree.chart.plot.CategoryCrosshairState,);
Parameter(drawDomainGridlines,java.awt.Graphics2D,);
Parameter(drawDomainGridlines,java.awt.geom.Rectangle2D,);
Parameter(drawRangeGridlines,java.awt.Graphics2D,);
Parameter(drawRangeGridlines,java.awt.geom.Rectangle2D,);
Parameter(drawRangeGridlines,java.util.List,);
Parameter(drawZeroRangeBaseline,java.awt.Graphics2D,);
Parameter(drawZeroRangeBaseline,java.awt.geom.Rectangle2D,);
Parameter(drawAnnotations,java.awt.Graphics2D,);
Parameter(drawAnnotations,java.awt.geom.Rectangle2D,);
Parameter(drawDomainMarkers,java.awt.Graphics2D,);
Parameter(drawDomainMarkers,java.awt.geom.Rectangle2D,);
Parameter(drawDomainMarkers,int,);
Parameter(drawDomainMarkers,org.jfree.ui.Layer,);
Parameter(drawRangeMarkers,java.awt.Graphics2D,);
Parameter(drawRangeMarkers,java.awt.geom.Rectangle2D,);
Parameter(drawRangeMarkers,int,);
Parameter(drawRangeMarkers,org.jfree.ui.Layer,);
Parameter(drawRangeLine,java.awt.Graphics2D,);
Parameter(drawRangeLine,java.awt.geom.Rectangle2D,);
Parameter(drawRangeLine,double,);
Parameter(drawRangeLine,java.awt.Stroke,);
Parameter(drawRangeLine,java.awt.Paint,);
Parameter(drawDomainCrosshair,java.awt.Graphics2D,);
Parameter(drawDomainCrosshair,java.awt.geom.Rectangle2D,);
Parameter(drawDomainCrosshair,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawDomainCrosshair,int,);
Parameter(drawDomainCrosshair,java.lang.Comparable,);
Parameter(drawDomainCrosshair,java.lang.Comparable,);
Parameter(drawDomainCrosshair,java.awt.Stroke,);
Parameter(drawDomainCrosshair,java.awt.Paint,);
Parameter(drawRangeCrosshair,java.awt.Graphics2D,);
Parameter(drawRangeCrosshair,java.awt.geom.Rectangle2D,);
Parameter(drawRangeCrosshair,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawRangeCrosshair,double,);
Parameter(drawRangeCrosshair,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeCrosshair,java.awt.Stroke,);
Parameter(drawRangeCrosshair,java.awt.Paint,);
Parameter(getDataRange,org.jfree.chart.axis.ValueAxis,);
Parameter(datasetsMappedToDomainAxis,int,org.jfree.data.category.CategoryDataset);
Parameter(datasetsMappedToRangeAxis,int,);
Parameter(setWeight,int,);
Parameter(setFixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedDomainAxisSpace$2,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedDomainAxisSpace$2,boolean,);
Parameter(setFixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedRangeAxisSpace$2,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedRangeAxisSpace$2,boolean,);
Parameter(getCategoriesForAxis,org.jfree.chart.axis.CategoryAxis,);
Parameter(setDrawSharedDomainAxis,boolean,);
Parameter(setRangePannable,boolean,);
Parameter(panDomainAxes,double,);
Parameter(panDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panDomainAxes,java.awt.geom.Point2D,);
Parameter(panRangeAxes,double,);
Parameter(panRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panRangeAxes,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes,double,);
Parameter(zoomDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$2,double,);
Parameter(zoomDomainAxes$2,double,);
Parameter(zoomDomainAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$2,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$3,double,);
Parameter(zoomDomainAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$3,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$3,boolean,);
Parameter(zoomRangeAxes,double,);
Parameter(zoomRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,double,);
Parameter(zoomRangeAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$2,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,boolean,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$3,java.awt.geom.Point2D,);
Parameter(setAnchorValue,double,);
Parameter(setAnchorValue$2,double,);
Parameter(setAnchorValue$2,boolean,);
Parameter(equals,java.lang.Object,);
Parameter(cloneMarkerMap,java.util.Map,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.plot.Plot);
Generalization(org.jfree.chart.plot.Plot);
Realization(org.jfree.chart.plot.ValueAxisPlot);
Realization(org.jfree.chart.plot.Pannable);
Realization(org.jfree.chart.plot.Zoomable);
Realization(org.jfree.chart.event.AnnotationChangeListener);
Realization(org.jfree.chart.event.RendererChangeListener);
Composition(org.jfree.chart.plot.PlotOrientation);
Composition(org.jfree.chart.plot.DatasetRenderingOrder);
Composition(org.jfree.chart.axis.CategoryAnchor);
Composition(org.jfree.chart.axis.AxisSpace);
Composition(org.jfree.chart.LegendItemCollection);
Composition(org.jfree.chart.util.ShadowGenerator);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init> --> <init>$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> mapDatasetToDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> mapDatasetToRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> configureDomainAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> configureRangeAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxis --> getDomainAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxis$2 --> getDomainAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis --> setDomainAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$2 --> setDomainAxis$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxes --> setDomainAxis$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisLocation --> getDomainAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisLocation$2 --> getDomainAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxisLocation --> setDomainAxisLocation$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxisLocation$2 --> setDomainAxisLocation$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxisLocation$3 --> setDomainAxisLocation$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisEdge --> getDomainAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisEdge$2 --> getDomainAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisEdge$2 --> getDomainAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxis --> getRangeAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxis$2 --> getRangeAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis --> setRangeAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$2 --> setRangeAxis$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxes --> setRangeAxis$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisIndex --> findRangeAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisIndex --> getRangeAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisLocation --> getRangeAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisLocation$2 --> getRangeAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxisLocation --> setRangeAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxisLocation$2 --> setRangeAxisLocation$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxisLocation$3 --> setRangeAxisLocation$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisEdge --> getRangeAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisEdge$2 --> getRangeAxisLocation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataset --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDataset --> setDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDataset$2 --> datasetChanged,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxis --> mapDatasetToDomainAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> checkAxisIndices,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> datasetChanged,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisForDataset --> getDomainAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxis --> mapDatasetToRangeAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> checkAxisIndices,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> datasetChanged,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisForDataset --> getRangeAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRenderer --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer --> setRenderer$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$2 --> setRenderer$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$3 --> setRenderer$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> configureDomainAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> configureRangeAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderers --> setRenderer$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRendererForDataset --> indexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRendererForDataset --> getRenderer,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getLegendItems --> indexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getLegendItems --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> getRangeAxisLocation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> setAnchorValue,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> setRangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoom --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,rendererChanged --> configureRangeAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker --> addDomainMarker$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker$2 --> addDomainMarker$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker$3 --> addDomainMarker$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers --> clearDomainMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainMarkers --> getDomainMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeDomainMarker --> removeDomainMarker$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeDomainMarker$2 --> removeDomainMarker$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeDomainMarker$3 --> removeDomainMarker$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addRangeMarker --> addRangeMarker$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addRangeMarker$2 --> addRangeMarker$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addRangeMarker$3 --> addRangeMarker$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers --> clearRangeMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeMarkers --> getRangeMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeRangeMarker --> removeRangeMarker$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$2 --> removeRangeMarker$3,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$3 --> removeRangeMarker$4,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairRowKey --> setDomainCrosshairRowKey$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairColumnKey --> setDomainCrosshairColumnKey$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setCrosshairDatasetIndex --> setCrosshairDatasetIndex$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairValue --> setRangeCrosshairValue$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairValue$2 --> isRangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addAnnotation --> addAnnotation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeAnnotation --> removeAnnotation$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getDomainAxisLocation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getDomainAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getDomainAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> findRangeAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> getRangeAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateAxisSpace --> calculateRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateAxisSpace --> calculateDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> calculateAxisSpace,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> integerise,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRenderer,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawBackground,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawAxes,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDomainCrosshairRowKey,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDomainCrosshairColumnKey,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawDomainGridlines,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawRangeGridlines,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawZeroRangeBaseline,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getIndexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawDomainMarkers,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawRangeMarkers,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDatasetRenderingOrder,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDatasetIndices,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> render,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRendererIndices,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawAnnotations,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setCrosshairDatasetIndex$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setDomainCrosshairRowKey$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setDomainCrosshairColumnKey$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> isDomainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDomainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDomainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawDomainCrosshair,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setRangeCrosshairValue$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> isRangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawRangeCrosshair,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getDomainAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getDomainAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> findRangeAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getRangeAxisEdge$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getDomainAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getRangeAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> isDomainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getDomainGridlinePosition,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getDomainAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getRenderer,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> isRangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> isRangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRenderer,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getRangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> isRangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> isRangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> getRenderer,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAnnotations --> getAnnotations,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAnnotations --> getDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAnnotations --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainMarkers --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainMarkers --> getDomainMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainMarkers --> getDomainAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeMarkers --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeMarkers --> getRangeMarkers$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeMarkers --> getRangeAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainCrosshair --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainCrosshair --> getDomainAxisForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainCrosshair --> getRenderer$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> findRangeAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> datasetsMappedToRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> getRendererForDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetsMappedToDomainAxis --> indexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetsMappedToRangeAxis --> indexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setFixedDomainAxisSpace --> setFixedDomainAxisSpace$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setFixedRangeAxisSpace --> setFixedRangeAxisSpace$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategories --> getDataset,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategoriesForAxis --> getDomainAxisIndex,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategoriesForAxis --> datasetsMappedToDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> isRangePannable,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes --> zoomRangeAxes$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setAnchorValue --> setAnchorValue$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> cloneMarkerMap,org.jfree.chart.plot.CategoryPlot,);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> DEFAULT_CROSSHAIR_STROKE,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> DEFAULT_CROSSHAIR_PAINT,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> renderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> columnRenderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rowRenderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> orientation,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainAxes,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> renderers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> datasets,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> axisOffset,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> drawSharedDomainAxis,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainGridlinePosition,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> anchorValue,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> annotations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> rangePannable,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> shadowGenerator,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getPlotType --> localizationResources,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getOrientation --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setOrientation --> orientation,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getAxisOffset --> axisOffset,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setAxisOffset --> axisOffset,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxis$2 --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxisIndex --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxisLocation$2 --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainAxisLocation$4 --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxisEdge$2 --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxisCount --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearDomainAxes --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,configureDomainAxes --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeAxis$2 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,findRangeAxisIndex --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeAxisLocation$2 --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeAxisLocation$4 --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeAxisEdge$2 --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeAxisCount --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearRangeAxes --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,configureRangeAxes --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDataset$2 --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDataset$2 --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDatasetCount --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,indexOf --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainAxisForDataset --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeAxisForDataset --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRendererCount --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRenderer$2 --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRendererForDataset --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getIndexOf --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDatasetRenderingOrder --> renderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDatasetRenderingOrder --> renderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getColumnRenderingOrder --> columnRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setColumnRenderingOrder --> columnRenderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRowRenderingOrder --> rowRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRowRenderingOrder --> rowRenderingOrder,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainGridlinePosition --> domainGridlinePosition,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePosition --> domainGridlinePosition,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainGridlineStroke --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainGridlineStroke --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainGridlinePaint --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePaint --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangeZeroBaselineVisible --> rangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselineVisible --> rangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeZeroBaselineStroke --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselineStroke --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeZeroBaselinePaint --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselinePaint --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeGridlineStroke --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeGridlineStroke --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeGridlinePaint --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeGridlinePaint --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeMinorGridlineStroke --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlineStroke --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeMinorGridlinePaint --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinePaint --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getFixedLegendItems --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setFixedLegendItems --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getLegendItems --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getLegendItems --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,handleClick --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,zoom --> anchorValue,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetChanged --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,addDomainMarker$4 --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,addDomainMarker$4 --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainMarkers$2 --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainMarkers$2 --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers$2 --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers$2 --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,removeDomainMarker$4 --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,removeDomainMarker$4 --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,addRangeMarker$4 --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,addRangeMarker$4 --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeMarkers$2 --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeMarkers$2 --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers$2 --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers$2 --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$4 --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$4 --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainCrosshairRowKey --> domainCrosshairRowKey,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairRowKey$2 --> domainCrosshairRowKey,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainCrosshairColumnKey --> domainCrosshairColumnKey,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairColumnKey$2 --> domainCrosshairColumnKey,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getCrosshairDatasetIndex --> crosshairDatasetIndex,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setCrosshairDatasetIndex$2 --> crosshairDatasetIndex,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainCrosshairPaint --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairPaint --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDomainCrosshairStroke --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairStroke --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeCrosshairValue --> rangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairValue$2 --> rangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeCrosshairStroke --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairStroke --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRangeCrosshairPaint --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairPaint --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getAnnotations --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,addAnnotation$2 --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,removeAnnotation$2 --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clearAnnotations --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getShadowGenerator --> shadowGenerator,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setShadowGenerator --> shadowGenerator,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> drawSharedDomainAxis,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> axisOffset,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> shadowGenerator,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDatasetIndices --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRendererIndices --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawBackground --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawAxes --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawAxes --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawAxes --> axisOffset,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,render --> columnRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,render --> rowRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToDomainAxis --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToDomainAxis --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToRangeAxis --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToRangeAxis --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getWeight --> weight,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setWeight --> weight,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getFixedDomainAxisSpace --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setFixedDomainAxisSpace$2 --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getFixedRangeAxisSpace --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setFixedRangeAxisSpace$2 --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDrawSharedDomainAxis --> drawSharedDomainAxis,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setDrawSharedDomainAxis --> drawSharedDomainAxis,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,isRangePannable --> rangePannable,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setRangePannable --> rangePannable,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$3 --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getAnchorValue --> anchorValue,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,setAnchorValue$2 --> anchorValue,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> orientation,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> axisOffset,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> drawSharedDomainAxis,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> renderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> columnRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rowRenderingOrder,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainGridlinePosition,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> anchorValue,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeCrosshairValue,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> weight,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainCrosshairVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> crosshairDatasetIndex,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainCrosshairColumnKey,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainCrosshairRowKey,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeMinorGridlinesVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeZeroBaselineVisible,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,equals --> shadowGenerator,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> annotations,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> domainAxes,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> rangeAxes,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> domainAxisLocations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> rangeAxisLocations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasets,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasetToDomainAxesMap,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> datasetToRangeAxesMap,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> renderers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedDomainAxisSpace,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedRangeAxisSpace,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> annotations,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> foregroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> backgroundDomainMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> foregroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> backgroundRangeMarkers,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,clone --> fixedLegendItems,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,writeObject --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> domainAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeAxes,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> datasets,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> renderers,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> domainGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> domainGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> domainCrosshairStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> domainCrosshairPaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeMinorGridlineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeMinorGridlinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeZeroBaselineStroke,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,readObject --> rangeZeroBaselinePaint,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_VALUE_LABEL_FONT,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_CROSSHAIR_STROKE,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> DEFAULT_CROSSHAIR_PAINT,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<clinit> --> localizationResources,org.jfree.chart.plot.CategoryPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,<init>$2 --> MIDDLE,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,handleClick --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,handleClick --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetChanged --> DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,draw --> KEY_SUPPRESS_SHADOW_GENERATION,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getDatasetIndices --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,getRendererIndices --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> MINOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawDomainCrosshair --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,drawRangeCrosshair --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToDomainAxis --> ZERO,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryPlot,datasetsMappedToRangeAxis --> ZERO,org.jfree.chart.plot.Plot,READ);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> <init>,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> setPlot,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> addChangeListener,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<init>$2 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setOrientation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setOrientation --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setAxisOffset --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setAxisOffset --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxis$2 --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> configure,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxis$3 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisLocation$2 --> getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainAxisLocation$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisEdge$2 --> resolveDomainAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainAxes --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,configureDomainAxes --> configure,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxis$2 --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxis$3 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisIndex --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisLocation$2 --> getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeAxisLocation$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisEdge$2 --> resolveRangeAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeAxes --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,configureRangeAxes --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDataset$2 --> removeChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDataset$2 --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDataset$2 --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToDomainAxes --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDomainAxisForDataset --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,mapDatasetToRangeAxes --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getRangeAxisForDataset --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> removeChangeListener,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> setPlot,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> addChangeListener,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderer$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRenderers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDatasetRenderingOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDatasetRenderingOrder --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setColumnRenderingOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setColumnRenderingOrder --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRowRenderingOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRowRenderingOrder --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePosition --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselineVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeZeroBaselinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeMinorGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setFixedLegendItems --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getLegendItems --> <init>,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getLegendItems --> getLegendItems,org.jfree.chart.LegendItemSource,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getLegendItems --> addAll,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> resolveRangeAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,handleClick --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoom --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoom --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoom --> setRange$3,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoom --> setAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,annotationChanged --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,annotationChanged --> annotationChanged,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,annotationChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,annotationChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> datasetChanged,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> setType,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,datasetChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,rendererChanged --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,rendererChanged --> rendererChanged,org.jfree.chart.event.RendererChangeListener,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,rendererChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,rendererChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker$4 --> addChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addDomainMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers$2 --> removeChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearDomainMarkers$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeDomainMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addRangeMarker$4 --> addChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addRangeMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers$2 --> removeChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearRangeMarkers$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeRangeMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairRowKey$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairColumnKey$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setCrosshairDatasetIndex$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDomainCrosshairStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairLockedOnData --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairValue$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setRangeCrosshairPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addAnnotation$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addAnnotation$2 --> addChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,addAnnotation$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeAnnotation$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeAnnotation$2 --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,removeAnnotation$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearAnnotations --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clearAnnotations --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setShadowGenerator --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> isHorizontal,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getLeft,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> ensureAtLeast$2,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getRight,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> isVertical,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getTop,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> getBottom,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> resolveDomainAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateDomainAxisSpace --> reserveSpace,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> isHorizontal,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> getTop,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> ensureAtLeast$2,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> getBottom,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> getLeft,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> getRight,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateRangeAxisSpace --> reserveSpace,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,calculateAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> <init>,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setPlotArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getInsets,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> shrink,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> createAndAddEntity,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawBackground,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> <init>,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setAnchor,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setAnchorX,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setAnchorY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setRowKey,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setColumnKey,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> setCrosshairY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getSharedAxisStates,org.jfree.chart.plot.PlotState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getTicks,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getForegroundAlpha,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> createDropShadow,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> calculateOffsetX,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> calculateOffsetY,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawNoDataMessage,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getDatasetIndex,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getRowKey,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getColumnKey,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> getCrosshairY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> isOutlineVisible,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawOutline,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,draw --> drawOutline,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawBackground --> fillBackground$2,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawBackground --> drawBackgroundImage,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> <init>,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> add,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getAxesAtTop,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> draw,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getAxesAtBottom,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getAxesAtLeft,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAxes --> getAxesAtRight,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> isEmptyOrNull$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> initialise,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> setCrosshairState,org.jfree.chart.renderer.category.CategoryItemRendererState,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> getPassCount,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,render --> drawItem,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> getCategoryJava2DCoordinate,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainGridlines --> drawDomainGridline,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getTickType,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> drawRangeLine,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeGridlines --> drawRangeGridline,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> drawRangeLine,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawZeroRangeBaseline --> drawRangeGridline,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawAnnotations --> draw,org.jfree.chart.annotations.CategoryAnnotation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainMarkers --> drawDomainMarker,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeMarkers --> drawRangeMarker,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawDomainCrosshair --> getItemMiddle,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeCrosshair --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeCrosshair --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,drawRangeCrosshair --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> findRangeBounds,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getDataRange --> combine,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setWeight --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setFixedDomainAxisSpace$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setFixedRangeAxisSpace$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategories --> getColumnKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategoriesForAxis --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,getCategoriesForAxis --> getColumnKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setDrawSharedDomainAxis --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> isInverted,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,panRangeAxes --> setRange$3,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> isHorizontal,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> resizeRange2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$2 --> resizeRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,zoomRangeAxes$3 --> zoomRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,setAnchorValue$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,equals --> equals,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> clone,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> cloneMapValues,org.jfree.chart.util.CloneUtils,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> setPlot,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> addChangeListener,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,clone --> clone,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,readObject --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,readObject --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,readObject --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,readObject --> addChangeListener,org.jfree.chart.renderer.category.CategoryItemRenderer,);
Call(METHOD,org.jfree.chart.plot.CategoryPlot,<clinit> --> getBundle,org.jfree.chart.util.ResourceBundleWrapper,);
EndClass 8
StartClass 9
Class(org.jfree.chart.plot.XYPlot,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_GRIDLINE_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_GRIDLINE_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_CROSSHAIR_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(localizationResources,java.util.ResourceBundle,Protected,Y,N,);
Attribute(orientation,org.jfree.chart.plot.PlotOrientation,Private,N,N,);
Attribute(axisOffset,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(domainAxes,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.ValueAxis);
Attribute(domainAxisLocations,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.AxisLocation);
Attribute(rangeAxes,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.ValueAxis);
Attribute(rangeAxisLocations,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.axis.AxisLocation);
Attribute(datasets,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.data.xy.XYDataset);
Attribute(renderers,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.renderer.xy.XYItemRenderer);
Attribute(datasetToDomainAxesMap,java.util.Map,Private,N,N,java.lang.Integer;java.util.List<Ljava.lang.Integer;>);
Attribute(datasetToRangeAxesMap,java.util.Map,Private,N,N,java.lang.Integer;java.util.List<Ljava.lang.Integer;>);
Attribute(quadrantOrigin,java.awt.geom.Point2D,Private,N,N,);
Attribute(quadrantPaint,java.awt.Paint[],Private,N,N,);
Attribute(domainGridlinesVisible,boolean,Private,N,N,);
Attribute(domainGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeGridlinesVisible,boolean,Private,N,N,);
Attribute(rangeGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(domainMinorGridlinesVisible,boolean,Private,N,N,);
Attribute(domainMinorGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainMinorGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeMinorGridlinesVisible,boolean,Private,N,N,);
Attribute(rangeMinorGridlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeMinorGridlinePaint,java.awt.Paint,Private,N,N,);
Attribute(domainZeroBaselineVisible,boolean,Private,N,N,);
Attribute(domainZeroBaselineStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainZeroBaselinePaint,java.awt.Paint,Private,N,N,);
Attribute(rangeZeroBaselineVisible,boolean,Private,N,N,);
Attribute(rangeZeroBaselineStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeZeroBaselinePaint,java.awt.Paint,Private,N,N,);
Attribute(domainCrosshairVisible,boolean,Private,N,N,);
Attribute(domainCrosshairValue,double,Private,N,N,);
Attribute(domainCrosshairStroke,java.awt.Stroke,Private,N,N,);
Attribute(domainCrosshairPaint,java.awt.Paint,Private,N,N,);
Attribute(domainCrosshairLockedOnData,boolean,Private,N,N,);
Attribute(rangeCrosshairVisible,boolean,Private,N,N,);
Attribute(rangeCrosshairValue,double,Private,N,N,);
Attribute(rangeCrosshairStroke,java.awt.Stroke,Private,N,N,);
Attribute(rangeCrosshairPaint,java.awt.Paint,Private,N,N,);
Attribute(rangeCrosshairLockedOnData,boolean,Private,N,N,);
Attribute(foregroundDomainMarkers,java.util.Map,Private,N,N,);
Attribute(backgroundDomainMarkers,java.util.Map,Private,N,N,);
Attribute(foregroundRangeMarkers,java.util.Map,Private,N,N,);
Attribute(backgroundRangeMarkers,java.util.Map,Private,N,N,);
Attribute(annotations,java.util.List,Private,N,N,org.jfree.chart.annotations.XYAnnotation);
Attribute(domainTickBandPaint,java.awt.Paint,Private,N,N,);
Attribute(rangeTickBandPaint,java.awt.Paint,Private,N,N,);
Attribute(fixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Private,N,N,);
Attribute(fixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Private,N,N,);
Attribute(datasetRenderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,Private,N,N,);
Attribute(seriesRenderingOrder,org.jfree.chart.plot.SeriesRenderingOrder,Private,N,N,);
Attribute(weight,int,Private,N,N,);
Attribute(fixedLegendItems,org.jfree.chart.LegendItemCollection,Private,N,N,);
Attribute(domainPannable,boolean,Private,N,N,);
Attribute(rangePannable,boolean,Private,N,N,);
Attribute(shadowGenerator,org.jfree.chart.util.ShadowGenerator,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getPlotType,java.lang.String,Public,N,N);
Method(getOrientation,org.jfree.chart.plot.PlotOrientation,Public,N,N);
Method(setOrientation,void,Public,N,N);
Method(getAxisOffset,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setAxisOffset,void,Public,N,N);
Method(getDomainAxis,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(getDomainAxis$2,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(setDomainAxis,void,Public,N,N);
Method(setDomainAxis$2,void,Public,N,N);
Method(setDomainAxis$3,void,Public,N,N);
Method(setDomainAxes,void,Public,N,N);
Method(getDomainAxisLocation,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setDomainAxisLocation,void,Public,N,N);
Method(setDomainAxisLocation$2,void,Public,N,N);
Method(getDomainAxisEdge,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getDomainAxisCount,int,Public,N,N);
Method(clearDomainAxes,void,Public,N,N);
Method(configureDomainAxes,void,Public,N,N);
Method(getDomainAxisLocation$2,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setDomainAxisLocation$3,void,Public,N,N);
Method(setDomainAxisLocation$4,void,Public,N,N);
Method(getDomainAxisEdge$2,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getRangeAxis,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(setRangeAxis,void,Public,N,N);
Method(getRangeAxisLocation,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setRangeAxisLocation,void,Public,N,N);
Method(setRangeAxisLocation$2,void,Public,N,N);
Method(getRangeAxisEdge,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getRangeAxis$2,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(setRangeAxis$2,void,Public,N,N);
Method(setRangeAxis$3,void,Public,N,N);
Method(setRangeAxes,void,Public,N,N);
Method(getRangeAxisCount,int,Public,N,N);
Method(clearRangeAxes,void,Public,N,N);
Method(configureRangeAxes,void,Public,N,N);
Method(getRangeAxisLocation$2,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(setRangeAxisLocation$3,void,Public,N,N);
Method(setRangeAxisLocation$4,void,Public,N,N);
Method(getRangeAxisEdge$2,org.jfree.ui.RectangleEdge,Public,N,N);
Method(getDataset,org.jfree.data.xy.XYDataset,Public,N,N);
Method(getDataset$2,org.jfree.data.xy.XYDataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(setDataset$2,void,Public,N,N);
Method(getDatasetCount,int,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(mapDatasetToDomainAxis,void,Public,N,N);
Method(mapDatasetToDomainAxes,void,Public,N,N);
Method(mapDatasetToRangeAxis,void,Public,N,N);
Method(mapDatasetToRangeAxes,void,Public,N,N);
Method(checkAxisIndices,void,Private,N,N);
Method(getRendererCount,int,Public,N,N);
Method(getRenderer,org.jfree.chart.renderer.xy.XYItemRenderer,Public,N,N);
Method(getRenderer$2,org.jfree.chart.renderer.xy.XYItemRenderer,Public,N,N);
Method(setRenderer,void,Public,N,N);
Method(setRenderer$2,void,Public,N,N);
Method(setRenderer$3,void,Public,N,N);
Method(setRenderers,void,Public,N,N);
Method(getDatasetRenderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,Public,N,N);
Method(setDatasetRenderingOrder,void,Public,N,N);
Method(getSeriesRenderingOrder,org.jfree.chart.plot.SeriesRenderingOrder,Public,N,N);
Method(setSeriesRenderingOrder,void,Public,N,N);
Method(getIndexOf,int,Public,N,N);
Method(getRendererForDataset,org.jfree.chart.renderer.xy.XYItemRenderer,Public,N,N);
Method(getWeight,int,Public,N,N);
Method(setWeight,void,Public,N,N);
Method(isDomainGridlinesVisible,boolean,Public,N,N);
Method(setDomainGridlinesVisible,void,Public,N,N);
Method(isDomainMinorGridlinesVisible,boolean,Public,N,N);
Method(setDomainMinorGridlinesVisible,void,Public,N,N);
Method(getDomainGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setDomainGridlineStroke,void,Public,N,N);
Method(getDomainMinorGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setDomainMinorGridlineStroke,void,Public,N,N);
Method(getDomainGridlinePaint,java.awt.Paint,Public,N,N);
Method(setDomainGridlinePaint,void,Public,N,N);
Method(getDomainMinorGridlinePaint,java.awt.Paint,Public,N,N);
Method(setDomainMinorGridlinePaint,void,Public,N,N);
Method(isRangeGridlinesVisible,boolean,Public,N,N);
Method(setRangeGridlinesVisible,void,Public,N,N);
Method(getRangeGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeGridlineStroke,void,Public,N,N);
Method(getRangeGridlinePaint,java.awt.Paint,Public,N,N);
Method(setRangeGridlinePaint,void,Public,N,N);
Method(isRangeMinorGridlinesVisible,boolean,Public,N,N);
Method(setRangeMinorGridlinesVisible,void,Public,N,N);
Method(getRangeMinorGridlineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeMinorGridlineStroke,void,Public,N,N);
Method(getRangeMinorGridlinePaint,java.awt.Paint,Public,N,N);
Method(setRangeMinorGridlinePaint,void,Public,N,N);
Method(isDomainZeroBaselineVisible,boolean,Public,N,N);
Method(setDomainZeroBaselineVisible,void,Public,N,N);
Method(getDomainZeroBaselineStroke,java.awt.Stroke,Public,N,N);
Method(setDomainZeroBaselineStroke,void,Public,N,N);
Method(getDomainZeroBaselinePaint,java.awt.Paint,Public,N,N);
Method(setDomainZeroBaselinePaint,void,Public,N,N);
Method(isRangeZeroBaselineVisible,boolean,Public,N,N);
Method(setRangeZeroBaselineVisible,void,Public,N,N);
Method(getRangeZeroBaselineStroke,java.awt.Stroke,Public,N,N);
Method(setRangeZeroBaselineStroke,void,Public,N,N);
Method(getRangeZeroBaselinePaint,java.awt.Paint,Public,N,N);
Method(setRangeZeroBaselinePaint,void,Public,N,N);
Method(getDomainTickBandPaint,java.awt.Paint,Public,N,N);
Method(setDomainTickBandPaint,void,Public,N,N);
Method(getRangeTickBandPaint,java.awt.Paint,Public,N,N);
Method(setRangeTickBandPaint,void,Public,N,N);
Method(getQuadrantOrigin,java.awt.geom.Point2D,Public,N,N);
Method(setQuadrantOrigin,void,Public,N,N);
Method(getQuadrantPaint,java.awt.Paint,Public,N,N);
Method(setQuadrantPaint,void,Public,N,N);
Method(addDomainMarker,void,Public,N,N);
Method(addDomainMarker$2,void,Public,N,N);
Method(clearDomainMarkers,void,Public,N,N);
Method(clearDomainMarkers$2,void,Public,N,N);
Method(addDomainMarker$3,void,Public,N,N);
Method(addDomainMarker$4,void,Public,N,N);
Method(removeDomainMarker,boolean,Public,N,N);
Method(removeDomainMarker$2,boolean,Public,N,N);
Method(removeDomainMarker$3,boolean,Public,N,N);
Method(removeDomainMarker$4,boolean,Public,N,N);
Method(addRangeMarker,void,Public,N,N);
Method(addRangeMarker$2,void,Public,N,N);
Method(clearRangeMarkers,void,Public,N,N);
Method(addRangeMarker$3,void,Public,N,N);
Method(addRangeMarker$4,void,Public,N,N);
Method(clearRangeMarkers$2,void,Public,N,N);
Method(removeRangeMarker,boolean,Public,N,N);
Method(removeRangeMarker$2,boolean,Public,N,N);
Method(removeRangeMarker$3,boolean,Public,N,N);
Method(removeRangeMarker$4,boolean,Public,N,N);
Method(addAnnotation,void,Public,N,N);
Method(addAnnotation$2,void,Public,N,N);
Method(removeAnnotation,boolean,Public,N,N);
Method(removeAnnotation$2,boolean,Public,N,N);
Method(getAnnotations,java.util.List,Public,N,N);
Method(clearAnnotations,void,Public,N,N);
Method(getShadowGenerator,org.jfree.chart.util.ShadowGenerator,Public,N,N);
Method(setShadowGenerator,void,Public,N,N);
Method(calculateAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(calculateDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(calculateRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Protected,N,N);
Method(integerise,java.awt.Rectangle,Private,N,N);
Method(draw,void,Public,N,N);
Method(getDatasetIndices,java.util.List,Private,N,N);
Method(getRendererIndices,java.util.List,Private,N,N);
Method(drawBackground,void,Public,N,N);
Method(drawQuadrants,void,Protected,N,N);
Method(drawDomainTickBands,void,Public,N,N);
Method(drawRangeTickBands,void,Public,N,N);
Method(drawAxes,java.util.Map,Protected,N,N);
Method(render,boolean,Public,N,N);
Method(getDomainAxisForDataset,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(getRangeAxisForDataset,org.jfree.chart.axis.ValueAxis,Public,N,N);
Method(drawDomainGridlines,void,Protected,N,N);
Method(drawRangeGridlines,void,Protected,N,N);
Method(drawZeroDomainBaseline,void,Protected,N,N);
Method(drawZeroRangeBaseline,void,Protected,N,N);
Method(drawAnnotations,void,Public,N,N);
Method(drawDomainMarkers,void,Protected,N,N);
Method(drawRangeMarkers,void,Protected,N,N);
Method(getDomainMarkers,java.util.Collection,Public,N,N);
Method(getRangeMarkers,java.util.Collection,Public,N,N);
Method(getDomainMarkers$2,java.util.Collection,Public,N,N);
Method(getRangeMarkers$2,java.util.Collection,Public,N,N);
Method(drawHorizontalLine,void,Protected,N,N);
Method(drawDomainCrosshair,void,Protected,N,N);
Method(drawVerticalLine,void,Protected,N,N);
Method(drawRangeCrosshair,void,Protected,N,N);
Method(handleClick,void,Public,N,N);
Method(getDatasetsMappedToDomainAxis,java.util.List,Private,N,N);
Method(getDatasetsMappedToRangeAxis,java.util.List,Private,N,N);
Method(getDomainAxisIndex,int,Public,N,N);
Method(findDomainAxisIndex,int,Private,N,N);
Method(getRangeAxisIndex,int,Public,N,N);
Method(findRangeAxisIndex,int,Private,N,N);
Method(getDataRange,org.jfree.data.Range,Public,N,N);
Method(annotationChanged,void,Public,N,N);
Method(datasetChanged,void,Public,N,N);
Method(rendererChanged,void,Public,N,N);
Method(isDomainCrosshairVisible,boolean,Public,N,N);
Method(setDomainCrosshairVisible,void,Public,N,N);
Method(isDomainCrosshairLockedOnData,boolean,Public,N,N);
Method(setDomainCrosshairLockedOnData,void,Public,N,N);
Method(getDomainCrosshairValue,double,Public,N,N);
Method(setDomainCrosshairValue,void,Public,N,N);
Method(setDomainCrosshairValue$2,void,Public,N,N);
Method(getDomainCrosshairStroke,java.awt.Stroke,Public,N,N);
Method(setDomainCrosshairStroke,void,Public,N,N);
Method(getDomainCrosshairPaint,java.awt.Paint,Public,N,N);
Method(setDomainCrosshairPaint,void,Public,N,N);
Method(isRangeCrosshairVisible,boolean,Public,N,N);
Method(setRangeCrosshairVisible,void,Public,N,N);
Method(isRangeCrosshairLockedOnData,boolean,Public,N,N);
Method(setRangeCrosshairLockedOnData,void,Public,N,N);
Method(getRangeCrosshairValue,double,Public,N,N);
Method(setRangeCrosshairValue,void,Public,N,N);
Method(setRangeCrosshairValue$2,void,Public,N,N);
Method(getRangeCrosshairStroke,java.awt.Stroke,Public,N,N);
Method(setRangeCrosshairStroke,void,Public,N,N);
Method(getRangeCrosshairPaint,java.awt.Paint,Public,N,N);
Method(setRangeCrosshairPaint,void,Public,N,N);
Method(getFixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(setFixedDomainAxisSpace,void,Public,N,N);
Method(setFixedDomainAxisSpace$2,void,Public,N,N);
Method(getFixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(setFixedRangeAxisSpace,void,Public,N,N);
Method(setFixedRangeAxisSpace$2,void,Public,N,N);
Method(isDomainPannable,boolean,Public,N,N);
Method(setDomainPannable,void,Public,N,N);
Method(isRangePannable,boolean,Public,N,N);
Method(setRangePannable,void,Public,N,N);
Method(panDomainAxes,void,Public,N,N);
Method(panRangeAxes,void,Public,N,N);
Method(zoomDomainAxes,void,Public,N,N);
Method(zoomDomainAxes$2,void,Public,N,N);
Method(zoomDomainAxes$3,void,Public,N,N);
Method(zoomRangeAxes,void,Public,N,N);
Method(zoomRangeAxes$2,void,Public,N,N);
Method(zoomRangeAxes$3,void,Public,N,N);
Method(isDomainZoomable,boolean,Public,N,N);
Method(isRangeZoomable,boolean,Public,N,N);
Method(getSeriesCount,int,Public,N,N);
Method(getFixedLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(setFixedLegendItems,void,Public,N,N);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.jfree.data.xy.XYDataset,);
Parameter(<init>$2,org.jfree.chart.axis.ValueAxis,);
Parameter(<init>$2,org.jfree.chart.axis.ValueAxis,);
Parameter(<init>$2,org.jfree.chart.renderer.xy.XYItemRenderer,);
Parameter(setOrientation,org.jfree.chart.plot.PlotOrientation,);
Parameter(setAxisOffset,org.jfree.ui.RectangleInsets,);
Parameter(getDomainAxis$2,int,);
Parameter(setDomainAxis,org.jfree.chart.axis.ValueAxis,);
Parameter(setDomainAxis$2,int,);
Parameter(setDomainAxis$2,org.jfree.chart.axis.ValueAxis,);
Parameter(setDomainAxis$3,int,);
Parameter(setDomainAxis$3,org.jfree.chart.axis.ValueAxis,);
Parameter(setDomainAxis$3,boolean,);
Parameter(setDomainAxes,org.jfree.chart.axis.ValueAxis[],);
Parameter(setDomainAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$2,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$2,boolean,);
Parameter(getDomainAxisLocation$2,int,);
Parameter(setDomainAxisLocation$3,int,);
Parameter(setDomainAxisLocation$3,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$4,int,);
Parameter(setDomainAxisLocation$4,org.jfree.chart.axis.AxisLocation,);
Parameter(setDomainAxisLocation$4,boolean,);
Parameter(getDomainAxisEdge$2,int,);
Parameter(setRangeAxis,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxisLocation,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$2,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$2,boolean,);
Parameter(getRangeAxis$2,int,);
Parameter(setRangeAxis$2,int,);
Parameter(setRangeAxis$2,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxis$3,int,);
Parameter(setRangeAxis$3,org.jfree.chart.axis.ValueAxis,);
Parameter(setRangeAxis$3,boolean,);
Parameter(setRangeAxes,org.jfree.chart.axis.ValueAxis[],);
Parameter(getRangeAxisLocation$2,int,);
Parameter(setRangeAxisLocation$3,int,);
Parameter(setRangeAxisLocation$3,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$4,int,);
Parameter(setRangeAxisLocation$4,org.jfree.chart.axis.AxisLocation,);
Parameter(setRangeAxisLocation$4,boolean,);
Parameter(getRangeAxisEdge$2,int,);
Parameter(getDataset$2,int,);
Parameter(setDataset,org.jfree.data.xy.XYDataset,);
Parameter(setDataset$2,int,);
Parameter(setDataset$2,org.jfree.data.xy.XYDataset,);
Parameter(indexOf,org.jfree.data.xy.XYDataset,);
Parameter(mapDatasetToDomainAxis,int,);
Parameter(mapDatasetToDomainAxis,int,);
Parameter(mapDatasetToDomainAxes,int,);
Parameter(mapDatasetToDomainAxes,java.util.List,);
Parameter(mapDatasetToRangeAxis,int,);
Parameter(mapDatasetToRangeAxis,int,);
Parameter(mapDatasetToRangeAxes,int,);
Parameter(mapDatasetToRangeAxes,java.util.List,);
Parameter(checkAxisIndices,java.util.List,java.lang.Integer);
Parameter(getRenderer$2,int,);
Parameter(setRenderer,org.jfree.chart.renderer.xy.XYItemRenderer,);
Parameter(setRenderer$2,int,);
Parameter(setRenderer$2,org.jfree.chart.renderer.xy.XYItemRenderer,);
Parameter(setRenderer$3,int,);
Parameter(setRenderer$3,org.jfree.chart.renderer.xy.XYItemRenderer,);
Parameter(setRenderer$3,boolean,);
Parameter(setRenderers,org.jfree.chart.renderer.xy.XYItemRenderer[],);
Parameter(setDatasetRenderingOrder,org.jfree.chart.plot.DatasetRenderingOrder,);
Parameter(setSeriesRenderingOrder,org.jfree.chart.plot.SeriesRenderingOrder,);
Parameter(getIndexOf,org.jfree.chart.renderer.xy.XYItemRenderer,);
Parameter(getRendererForDataset,org.jfree.data.xy.XYDataset,);
Parameter(setWeight,int,);
Parameter(setDomainGridlinesVisible,boolean,);
Parameter(setDomainMinorGridlinesVisible,boolean,);
Parameter(setDomainGridlineStroke,java.awt.Stroke,);
Parameter(setDomainMinorGridlineStroke,java.awt.Stroke,);
Parameter(setDomainGridlinePaint,java.awt.Paint,);
Parameter(setDomainMinorGridlinePaint,java.awt.Paint,);
Parameter(setRangeGridlinesVisible,boolean,);
Parameter(setRangeGridlineStroke,java.awt.Stroke,);
Parameter(setRangeGridlinePaint,java.awt.Paint,);
Parameter(setRangeMinorGridlinesVisible,boolean,);
Parameter(setRangeMinorGridlineStroke,java.awt.Stroke,);
Parameter(setRangeMinorGridlinePaint,java.awt.Paint,);
Parameter(setDomainZeroBaselineVisible,boolean,);
Parameter(setDomainZeroBaselineStroke,java.awt.Stroke,);
Parameter(setDomainZeroBaselinePaint,java.awt.Paint,);
Parameter(setRangeZeroBaselineVisible,boolean,);
Parameter(setRangeZeroBaselineStroke,java.awt.Stroke,);
Parameter(setRangeZeroBaselinePaint,java.awt.Paint,);
Parameter(setDomainTickBandPaint,java.awt.Paint,);
Parameter(setRangeTickBandPaint,java.awt.Paint,);
Parameter(setQuadrantOrigin,java.awt.geom.Point2D,);
Parameter(getQuadrantPaint,int,);
Parameter(setQuadrantPaint,int,);
Parameter(setQuadrantPaint,java.awt.Paint,);
Parameter(addDomainMarker,org.jfree.chart.plot.Marker,);
Parameter(addDomainMarker$2,org.jfree.chart.plot.Marker,);
Parameter(addDomainMarker$2,org.jfree.ui.Layer,);
Parameter(clearDomainMarkers$2,int,);
Parameter(addDomainMarker$3,int,);
Parameter(addDomainMarker$3,org.jfree.chart.plot.Marker,);
Parameter(addDomainMarker$3,org.jfree.ui.Layer,);
Parameter(addDomainMarker$4,int,);
Parameter(addDomainMarker$4,org.jfree.chart.plot.Marker,);
Parameter(addDomainMarker$4,org.jfree.ui.Layer,);
Parameter(addDomainMarker$4,boolean,);
Parameter(removeDomainMarker,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$2,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$2,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$3,int,);
Parameter(removeDomainMarker$3,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$3,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$4,int,);
Parameter(removeDomainMarker$4,org.jfree.chart.plot.Marker,);
Parameter(removeDomainMarker$4,org.jfree.ui.Layer,);
Parameter(removeDomainMarker$4,boolean,);
Parameter(addRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$2,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$2,org.jfree.ui.Layer,);
Parameter(addRangeMarker$3,int,);
Parameter(addRangeMarker$3,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$3,org.jfree.ui.Layer,);
Parameter(addRangeMarker$4,int,);
Parameter(addRangeMarker$4,org.jfree.chart.plot.Marker,);
Parameter(addRangeMarker$4,org.jfree.ui.Layer,);
Parameter(addRangeMarker$4,boolean,);
Parameter(clearRangeMarkers$2,int,);
Parameter(removeRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$2,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$2,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$3,int,);
Parameter(removeRangeMarker$3,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$3,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$4,int,);
Parameter(removeRangeMarker$4,org.jfree.chart.plot.Marker,);
Parameter(removeRangeMarker$4,org.jfree.ui.Layer,);
Parameter(removeRangeMarker$4,boolean,);
Parameter(addAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,boolean,);
Parameter(removeAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(removeAnnotation$2,org.jfree.chart.annotations.XYAnnotation,);
Parameter(removeAnnotation$2,boolean,);
Parameter(setShadowGenerator,org.jfree.chart.util.ShadowGenerator,);
Parameter(calculateAxisSpace,java.awt.Graphics2D,);
Parameter(calculateAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainAxisSpace,java.awt.Graphics2D,);
Parameter(calculateDomainAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(calculateRangeAxisSpace,java.awt.Graphics2D,);
Parameter(calculateRangeAxisSpace,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(integerise,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.geom.Point2D,);
Parameter(draw,org.jfree.chart.plot.PlotState,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getDatasetIndices,org.jfree.chart.plot.DatasetRenderingOrder,java.lang.Integer);
Parameter(getRendererIndices,org.jfree.chart.plot.DatasetRenderingOrder,java.lang.Integer);
Parameter(drawBackground,java.awt.Graphics2D,);
Parameter(drawBackground,java.awt.geom.Rectangle2D,);
Parameter(drawQuadrants,java.awt.Graphics2D,);
Parameter(drawQuadrants,java.awt.geom.Rectangle2D,);
Parameter(drawDomainTickBands,java.awt.Graphics2D,);
Parameter(drawDomainTickBands,java.awt.geom.Rectangle2D,);
Parameter(drawDomainTickBands,java.util.List,);
Parameter(drawRangeTickBands,java.awt.Graphics2D,);
Parameter(drawRangeTickBands,java.awt.geom.Rectangle2D,);
Parameter(drawRangeTickBands,java.util.List,);
Parameter(drawAxes,java.awt.Graphics2D,org.jfree.chart.axis.Axis;org.jfree.chart.axis.AxisState);
Parameter(drawAxes,java.awt.geom.Rectangle2D,);
Parameter(drawAxes,java.awt.geom.Rectangle2D,);
Parameter(drawAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(render,java.awt.Graphics2D,);
Parameter(render,java.awt.geom.Rectangle2D,);
Parameter(render,int,);
Parameter(render,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(render,org.jfree.chart.plot.CrosshairState,);
Parameter(getDomainAxisForDataset,int,);
Parameter(getRangeAxisForDataset,int,);
Parameter(drawDomainGridlines,java.awt.Graphics2D,);
Parameter(drawDomainGridlines,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridlines,java.util.List,);
Parameter(drawRangeGridlines,java.awt.Graphics2D,);
Parameter(drawRangeGridlines,java.awt.geom.Rectangle2D,);
Parameter(drawRangeGridlines,java.util.List,);
Parameter(drawZeroDomainBaseline,java.awt.Graphics2D,);
Parameter(drawZeroDomainBaseline,java.awt.geom.Rectangle2D,);
Parameter(drawZeroRangeBaseline,java.awt.Graphics2D,);
Parameter(drawZeroRangeBaseline,java.awt.geom.Rectangle2D,);
Parameter(drawAnnotations,java.awt.Graphics2D,);
Parameter(drawAnnotations,java.awt.geom.Rectangle2D,);
Parameter(drawAnnotations,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(drawDomainMarkers,java.awt.Graphics2D,);
Parameter(drawDomainMarkers,java.awt.geom.Rectangle2D,);
Parameter(drawDomainMarkers,int,);
Parameter(drawDomainMarkers,org.jfree.ui.Layer,);
Parameter(drawRangeMarkers,java.awt.Graphics2D,);
Parameter(drawRangeMarkers,java.awt.geom.Rectangle2D,);
Parameter(drawRangeMarkers,int,);
Parameter(drawRangeMarkers,org.jfree.ui.Layer,);
Parameter(getDomainMarkers,org.jfree.ui.Layer,);
Parameter(getRangeMarkers,org.jfree.ui.Layer,);
Parameter(getDomainMarkers$2,int,);
Parameter(getDomainMarkers$2,org.jfree.ui.Layer,);
Parameter(getRangeMarkers$2,int,);
Parameter(getRangeMarkers$2,org.jfree.ui.Layer,);
Parameter(drawHorizontalLine,java.awt.Graphics2D,);
Parameter(drawHorizontalLine,java.awt.geom.Rectangle2D,);
Parameter(drawHorizontalLine,double,);
Parameter(drawHorizontalLine,java.awt.Stroke,);
Parameter(drawHorizontalLine,java.awt.Paint,);
Parameter(drawDomainCrosshair,java.awt.Graphics2D,);
Parameter(drawDomainCrosshair,java.awt.geom.Rectangle2D,);
Parameter(drawDomainCrosshair,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawDomainCrosshair,double,);
Parameter(drawDomainCrosshair,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainCrosshair,java.awt.Stroke,);
Parameter(drawDomainCrosshair,java.awt.Paint,);
Parameter(drawVerticalLine,java.awt.Graphics2D,);
Parameter(drawVerticalLine,java.awt.geom.Rectangle2D,);
Parameter(drawVerticalLine,double,);
Parameter(drawVerticalLine,java.awt.Stroke,);
Parameter(drawVerticalLine,java.awt.Paint,);
Parameter(drawRangeCrosshair,java.awt.Graphics2D,);
Parameter(drawRangeCrosshair,java.awt.geom.Rectangle2D,);
Parameter(drawRangeCrosshair,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawRangeCrosshair,double,);
Parameter(drawRangeCrosshair,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeCrosshair,java.awt.Stroke,);
Parameter(drawRangeCrosshair,java.awt.Paint,);
Parameter(handleClick,int,);
Parameter(handleClick,int,);
Parameter(handleClick,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getDatasetsMappedToDomainAxis,java.lang.Integer,org.jfree.data.xy.XYDataset);
Parameter(getDatasetsMappedToRangeAxis,java.lang.Integer,org.jfree.data.xy.XYDataset);
Parameter(getDomainAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(findDomainAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(getRangeAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(findRangeAxisIndex,org.jfree.chart.axis.ValueAxis,);
Parameter(getDataRange,org.jfree.chart.axis.ValueAxis,);
Parameter(annotationChanged,org.jfree.chart.event.AnnotationChangeEvent,);
Parameter(datasetChanged,org.jfree.data.general.DatasetChangeEvent,);
Parameter(rendererChanged,org.jfree.chart.event.RendererChangeEvent,);
Parameter(setDomainCrosshairVisible,boolean,);
Parameter(setDomainCrosshairLockedOnData,boolean,);
Parameter(setDomainCrosshairValue,double,);
Parameter(setDomainCrosshairValue$2,double,);
Parameter(setDomainCrosshairValue$2,boolean,);
Parameter(setDomainCrosshairStroke,java.awt.Stroke,);
Parameter(setDomainCrosshairPaint,java.awt.Paint,);
Parameter(setRangeCrosshairVisible,boolean,);
Parameter(setRangeCrosshairLockedOnData,boolean,);
Parameter(setRangeCrosshairValue,double,);
Parameter(setRangeCrosshairValue$2,double,);
Parameter(setRangeCrosshairValue$2,boolean,);
Parameter(setRangeCrosshairStroke,java.awt.Stroke,);
Parameter(setRangeCrosshairPaint,java.awt.Paint,);
Parameter(setFixedDomainAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedDomainAxisSpace$2,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedDomainAxisSpace$2,boolean,);
Parameter(setFixedRangeAxisSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedRangeAxisSpace$2,org.jfree.chart.axis.AxisSpace,);
Parameter(setFixedRangeAxisSpace$2,boolean,);
Parameter(setDomainPannable,boolean,);
Parameter(setRangePannable,boolean,);
Parameter(panDomainAxes,double,);
Parameter(panDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panDomainAxes,java.awt.geom.Point2D,);
Parameter(panRangeAxes,double,);
Parameter(panRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panRangeAxes,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes,double,);
Parameter(zoomDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$2,double,);
Parameter(zoomDomainAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$2,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$2,boolean,);
Parameter(zoomDomainAxes$3,double,);
Parameter(zoomDomainAxes$3,double,);
Parameter(zoomDomainAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$3,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes,double,);
Parameter(zoomRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,double,);
Parameter(zoomRangeAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$2,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,boolean,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$3,java.awt.geom.Point2D,);
Parameter(setFixedLegendItems,org.jfree.chart.LegendItemCollection,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.plot.Plot);
Generalization(org.jfree.chart.plot.Plot);
Realization(org.jfree.chart.plot.ValueAxisPlot);
Realization(org.jfree.chart.plot.Pannable);
Realization(org.jfree.chart.plot.Zoomable);
Realization(org.jfree.chart.event.RendererChangeListener);
Composition(org.jfree.chart.plot.PlotOrientation);
Composition(org.jfree.chart.annotations.XYAnnotation);
Composition(org.jfree.chart.axis.AxisSpace);
Composition(org.jfree.chart.plot.DatasetRenderingOrder);
Composition(org.jfree.chart.plot.SeriesRenderingOrder);
Composition(org.jfree.chart.LegendItemCollection);
Composition(org.jfree.chart.util.ShadowGenerator);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init> --> <init>$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> mapDatasetToDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> mapDatasetToRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> configureDomainAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> configureRangeAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxis --> getDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxis$2 --> getDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis --> setDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$2 --> setDomainAxis$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> getDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxes --> setDomainAxis$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxisLocation --> setDomainAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxisLocation$2 --> setDomainAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisEdge --> getDomainAxisLocation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisLocation$2 --> getDomainAxisLocation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxisLocation$3 --> setDomainAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisEdge$2 --> getDomainAxisLocation$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxis --> getRangeAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxisLocation --> setRangeAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxisLocation$2 --> setRangeAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisEdge --> getRangeAxisLocation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxis$2 --> getRangeAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$2 --> setRangeAxis$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> getRangeAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxes --> setRangeAxis$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisLocation$2 --> getRangeAxisLocation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxisLocation$3 --> setRangeAxisLocation$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisEdge$2 --> getRangeAxisLocation$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataset --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset --> setDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset$2 --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset$2 --> datasetChanged,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxis --> mapDatasetToDomainAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> checkAxisIndices,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> datasetChanged,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxis --> mapDatasetToRangeAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> checkAxisIndices,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> datasetChanged,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRenderer --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer --> setRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$2 --> setRenderer$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> configureDomainAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> configureRangeAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderers --> setRenderer$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRendererForDataset --> indexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRendererForDataset --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker --> addDomainMarker$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker$2 --> addDomainMarker$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainMarkers --> clearDomainMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker$3 --> addDomainMarker$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeDomainMarker --> removeDomainMarker$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeDomainMarker$2 --> removeDomainMarker$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeDomainMarker$3 --> removeDomainMarker$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addRangeMarker --> addRangeMarker$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addRangeMarker$2 --> addRangeMarker$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeMarkers --> clearRangeMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addRangeMarker$3 --> addRangeMarker$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeRangeMarker --> removeRangeMarker$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeRangeMarker$2 --> removeRangeMarker$3,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeRangeMarker$3 --> removeRangeMarker$4,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addAnnotation --> addAnnotation$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeAnnotation --> removeAnnotation$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateAxisSpace --> calculateRangeAxisSpace,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateAxisSpace --> calculateDomainAxisSpace,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> findDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> getDomainAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> findRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> getRangeAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> calculateAxisSpace,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> integerise,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawBackground,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainCrosshairValue,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeCrosshairValue,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawDomainTickBands,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawRangeTickBands,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawDomainGridlines,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawZeroDomainBaseline,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawRangeGridlines,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawZeroRangeBaseline,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> indexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawDomainMarkers,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawRangeMarkers,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDatasetRenderingOrder,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRendererIndices,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDatasetIndices,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> render,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setDomainCrosshairValue$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> isDomainCrosshairVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainCrosshairPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDomainCrosshairStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawDomainCrosshair,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setRangeCrosshairValue$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> isRangeCrosshairVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeCrosshairPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getRangeCrosshairStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawRangeCrosshair,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawAnnotations,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawBackground --> drawQuadrants,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getDomainTickBandPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getRangeTickBandPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> findDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getDomainAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> findRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getRangeAxisEdge$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getDomainAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getRangeAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getSeriesRenderingOrder,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisForDataset --> getDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisForDataset --> getRangeAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> isDomainGridlinesVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> isDomainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getDomainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getDomainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getDomainGridlineStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getDomainGridlinePaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> isRangeGridlinesVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> isRangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRangeGridlineStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getRangeGridlinePaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> isRangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> isDomainZeroBaselineVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> isRangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> getRenderer,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAnnotations --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAnnotations --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainMarkers --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainMarkers --> getDatasetCount,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainMarkers --> getDomainMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainMarkers --> getDomainAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeMarkers --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeMarkers --> getDatasetCount,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeMarkers --> getRangeMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeMarkers --> getRangeAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainMarkers --> getDomainMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeMarkers --> getRangeMarkers$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> getDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> setDomainCrosshairValue,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> getRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> setRangeCrosshairValue,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisIndex --> findDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisIndex --> getDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisIndex --> findRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisIndex --> getRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getDomainAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getDatasetsMappedToDomainAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getRangeAxisIndex,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getDatasetsMappedToRangeAxis,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getRendererForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> configureDomainAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> configureRangeAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,rendererChanged --> configureDomainAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,rendererChanged --> configureRangeAxes,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairValue --> setDomainCrosshairValue$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairValue$2 --> isDomainCrosshairVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairValue --> setRangeCrosshairValue$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairValue$2 --> isRangeCrosshairVisible,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setFixedDomainAxisSpace --> setFixedDomainAxisSpace$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setFixedRangeAxisSpace --> setFixedRangeAxisSpace$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panDomainAxes --> isDomainPannable,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panDomainAxes --> getDomainAxisCount,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panDomainAxes --> getDomainAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panRangeAxes --> isRangePannable,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panRangeAxes --> getRangeAxisCount,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panRangeAxes --> getRangeAxis$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes --> zoomDomainAxes$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes --> zoomRangeAxes$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getSeriesCount --> getDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> indexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> getRenderer$2,org.jfree.chart.plot.XYPlot,);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> DEFAULT_CROSSHAIR_STROKE,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> DEFAULT_CROSSHAIR_PAINT,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> quadrantOrigin,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> quadrantPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> datasetRenderingOrder,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> seriesRenderingOrder,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> orientation,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> weight,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> axisOffset,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainAxes,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainAxisLocations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeAxes,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> datasets,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> renderers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> annotations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainZeroBaselineVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainCrosshairVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainCrosshairValue,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeCrosshairVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeCrosshairValue,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> shadowGenerator,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getPlotType --> localizationResources,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getOrientation --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setOrientation --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setOrientation --> orientation,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getAxisOffset --> axisOffset,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setAxisOffset --> axisOffset,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxis$2 --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisLocation --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisEdge --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisCount --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainAxes --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,configureDomainAxes --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisLocation$2 --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainAxisLocation$4 --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisEdge$2 --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeAxis --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisLocation --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisEdge --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxis$2 --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisCount --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearRangeAxes --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,configureRangeAxes --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisLocation$2 --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeAxisLocation$4 --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisEdge$2 --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDataset$2 --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDataset$2 --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetCount --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,indexOf --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRendererCount --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRenderer$2 --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRenderer$3 --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetRenderingOrder --> datasetRenderingOrder,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDatasetRenderingOrder --> datasetRenderingOrder,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getSeriesRenderingOrder --> seriesRenderingOrder,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setSeriesRenderingOrder --> seriesRenderingOrder,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getIndexOf --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRendererForDataset --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getWeight --> weight,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setWeight --> weight,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainGridlinesVisible --> domainGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainMinorGridlinesVisible --> domainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinesVisible --> domainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinesVisible --> domainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainGridlineStroke --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainGridlineStroke --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainMinorGridlineStroke --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainMinorGridlineStroke --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainGridlinePaint --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainGridlinePaint --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainMinorGridlinePaint --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinePaint --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeGridlinesVisible --> rangeGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeGridlineStroke --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeGridlineStroke --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeGridlinePaint --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeGridlinePaint --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinesVisible --> rangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeMinorGridlineStroke --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeMinorGridlineStroke --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeMinorGridlinePaint --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinePaint --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainZeroBaselineVisible --> domainZeroBaselineVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainZeroBaselineVisible --> domainZeroBaselineVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainZeroBaselineStroke --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainZeroBaselineStroke --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainZeroBaselinePaint --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainZeroBaselinePaint --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangeZeroBaselineVisible --> rangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeZeroBaselineVisible --> rangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeZeroBaselineStroke --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeZeroBaselineStroke --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeZeroBaselinePaint --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeZeroBaselinePaint --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainTickBandPaint --> domainTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainTickBandPaint --> domainTickBandPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeTickBandPaint --> rangeTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeTickBandPaint --> rangeTickBandPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getQuadrantOrigin --> quadrantOrigin,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setQuadrantOrigin --> quadrantOrigin,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getQuadrantPaint --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setQuadrantPaint --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainMarkers --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainMarkers --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainMarkers$2 --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainMarkers$2 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearDomainMarkers$2 --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,addDomainMarker$4 --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,addDomainMarker$4 --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,removeDomainMarker$4 --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,removeDomainMarker$4 --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearRangeMarkers --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearRangeMarkers --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,addRangeMarker$4 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,addRangeMarker$4 --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearRangeMarkers$2 --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearRangeMarkers$2 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,removeRangeMarker$4 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,removeRangeMarker$4 --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,addAnnotation$2 --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,removeAnnotation$2 --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getAnnotations --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clearAnnotations --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getShadowGenerator --> shadowGenerator,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setShadowGenerator --> shadowGenerator,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> fixedDomainAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> fixedRangeAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> axisOffset,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> shadowGenerator,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetIndices --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRendererIndices --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawBackground --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawQuadrants --> quadrantOrigin,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawQuadrants --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawQuadrants --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawAxes --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawAxes --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawAxes --> axisOffset,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainAxisForDataset --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeAxisForDataset --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawAnnotations --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainMarkers$2 --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainMarkers$2 --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeMarkers$2 --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeMarkers$2 --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToDomainAxis --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToDomainAxis --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToRangeAxis --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToRangeAxis --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,findDomainAxisIndex --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,findRangeAxisIndex --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDataRange --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairVisible --> domainCrosshairVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainCrosshairLockedOnData --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairLockedOnData --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairLockedOnData --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainCrosshairValue --> domainCrosshairValue,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairValue$2 --> domainCrosshairValue,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainCrosshairStroke --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairStroke --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDomainCrosshairPaint --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainCrosshairPaint --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairVisible --> rangeCrosshairVisible,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairLockedOnData --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeCrosshairValue --> rangeCrosshairValue,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairValue$2 --> rangeCrosshairValue,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeCrosshairStroke --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairStroke --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRangeCrosshairPaint --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangeCrosshairPaint --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getFixedDomainAxisSpace --> fixedDomainAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setFixedDomainAxisSpace$2 --> fixedDomainAxisSpace,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getFixedRangeAxisSpace --> fixedRangeAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setFixedRangeAxisSpace$2 --> fixedRangeAxisSpace,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isDomainPannable --> domainPannable,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setDomainPannable --> domainPannable,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,isRangePannable --> rangePannable,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setRangePannable --> rangePannable,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomDomainAxes$3 --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomRangeAxes$3 --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getFixedLegendItems --> fixedLegendItems,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,setFixedLegendItems --> fixedLegendItems,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getLegendItems --> fixedLegendItems,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getLegendItems --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> weight,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> orientation,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeMinorGridlinesVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainZeroBaselineVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeZeroBaselineVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainCrosshairValue,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeCrosshairVisible,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeCrosshairValue,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> axisOffset,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> fixedLegendItems,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> domainTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> rangeTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> quadrantOrigin,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,equals --> shadowGenerator,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> domainAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> annotations,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedDomainAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedRangeAxisSpace,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedLegendItems,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> quadrantOrigin,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> domainAxes,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> rangeAxes,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> domainAxisLocations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> rangeAxisLocations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasets,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasetToDomainAxesMap,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> datasetToRangeAxesMap,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> renderers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> foregroundDomainMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> backgroundDomainMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> foregroundRangeMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> backgroundRangeMarkers,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> annotations,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedDomainAxisSpace,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedRangeAxisSpace,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> fixedLegendItems,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> quadrantOrigin,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,clone --> quadrantPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> rangeTickBandPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> quadrantOrigin,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,writeObject --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> quadrantPaint,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeAxes,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> datasets,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> renderers,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeMinorGridlineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeMinorGridlinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeCrosshairStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeCrosshairPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainTickBandPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> rangeTickBandPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> quadrantOrigin,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> quadrantPaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainZeroBaselineStroke,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,readObject --> domainZeroBaselinePaint,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.XYPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> DEFAULT_CROSSHAIR_STROKE,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> DEFAULT_CROSSHAIR_PAINT,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<clinit> --> localizationResources,org.jfree.chart.plot.XYPlot,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> REVERSE,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,<init>$2 --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,draw --> KEY_SUPPRESS_SHADOW_GENERATION,org.jfree.chart.JFreeChart,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetIndices --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getRendererIndices --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawQuadrants --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,render --> REVERSE,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> MINOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> MINOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawDomainCrosshair --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawVerticalLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,drawRangeCrosshair --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToDomainAxis --> ZERO,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,getDatasetsMappedToRangeAxis --> ZERO,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,datasetChanged --> DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> <init>,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> setPlot,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> addChangeListener,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<init>$2 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setOrientation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setOrientation --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setAxisOffset --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setAxisOffset --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxis$2 --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxis$3 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisEdge --> resolveDomainAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainAxes --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,configureDomainAxes --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisLocation$2 --> getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainAxisLocation$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisEdge$2 --> resolveDomainAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisEdge --> resolveRangeAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxis$2 --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxis$3 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeAxes --> removeChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeAxes --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,configureRangeAxes --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisLocation$2 --> getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeAxisLocation$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisEdge$2 --> resolveRangeAxisLocation,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset$2 --> removeChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset$2 --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDataset$2 --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToDomainAxes --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,mapDatasetToRangeAxes --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> removeChangeListener,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> setPlot,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> addChangeListener,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderer$3 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRenderers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDatasetRenderingOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDatasetRenderingOrder --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setSeriesRenderingOrder --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setSeriesRenderingOrder --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setWeight --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainMinorGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainMinorGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainMinorGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinesVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeMinorGridlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeMinorGridlineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeMinorGridlinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainZeroBaselineVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainZeroBaselineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainZeroBaselineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainZeroBaselinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainZeroBaselinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeZeroBaselineVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeZeroBaselineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeZeroBaselineStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeZeroBaselinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeZeroBaselinePaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainTickBandPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeTickBandPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setQuadrantOrigin --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setQuadrantOrigin --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setQuadrantPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainMarkers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainMarkers$2 --> removeChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearDomainMarkers$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker$4 --> addChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addDomainMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeDomainMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeMarkers --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addRangeMarker$4 --> addChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addRangeMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeMarkers$2 --> removeChangeListener,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearRangeMarkers$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeRangeMarker$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeRangeMarker$4 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addAnnotation$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addAnnotation$2 --> addChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,addAnnotation$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeAnnotation$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeAnnotation$2 --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,removeAnnotation$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearAnnotations --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clearAnnotations --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setShadowGenerator --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateAxisSpace --> shrink,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> getLeft,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> ensureAtLeast$2,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> getRight,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> getTop,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> getBottom,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateDomainAxisSpace --> reserveSpace,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> getTop,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> ensureAtLeast$2,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> getBottom,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> getLeft,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> getRight,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,calculateRangeAxisSpace --> reserveSpace,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setPlotArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getInsets,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> shrink,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> createAndAddEntity,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> <init>,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setAnchor,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setAnchorX,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setAnchorY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setCrosshairX,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> setCrosshairY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getForegroundAlpha,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getSharedAxisStates,org.jfree.chart.plot.PlotState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getTicks,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawAnnotations,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getDatasetIndex,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getCrosshairX,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> getCrosshairY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawNoDataMessage,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> createDropShadow,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> calculateOffsetX,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> calculateOffsetY,org.jfree.chart.util.ShadowGenerator,);
Call(METHOD,org.jfree.chart.plot.XYPlot,draw --> drawOutline,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawBackground --> fillBackground$2,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawBackground --> drawBackgroundImage,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawQuadrants --> getBackgroundAlpha,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> fillDomainGridBand,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainTickBands --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> fillRangeGridBand,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeTickBands --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> <init>,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> add,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getAxesAtTop,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> draw,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getAxesAtBottom,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getAxesAtLeft,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAxes --> getAxesAtRight,org.jfree.chart.axis.AxisCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> isEmptyOrNull$3,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> initialise,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getPassCount,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getProcessVisibleItemsOnly,org.jfree.chart.renderer.xy.XYItemRendererState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> findLiveItems,org.jfree.chart.renderer.RendererUtilities,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> startSeriesPass,org.jfree.chart.renderer.xy.XYItemRendererState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> drawItem,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,render --> endSeriesPass,org.jfree.chart.renderer.xy.XYItemRendererState,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisForDataset --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisForDataset --> requireNonNegative,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getTickType,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainGridlines --> drawDomainLine,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getTickType,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeGridlines --> drawRangeLine,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroDomainBaseline --> drawDomainLine,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawZeroRangeBaseline --> drawRangeLine,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawAnnotations --> draw,org.jfree.chart.annotations.XYAnnotation,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainMarkers --> drawDomainMarker,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeMarkers --> drawRangeMarker,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawHorizontalLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainCrosshair --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainCrosshair --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawDomainCrosshair --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawVerticalLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeCrosshair --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeCrosshair --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,drawRangeCrosshair --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,handleClick --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDatasetsMappedToDomainAxis --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDatasetsMappedToRangeAxis --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDomainAxisIndex --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getRangeAxisIndex --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> findDomainBounds,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> combine,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> findDomainBounds,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> findRangeBounds,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> findRangeBounds$4,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getIncludeInDataBounds,org.jfree.chart.annotations.XYAnnotationBoundsInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getXRange,org.jfree.chart.annotations.XYAnnotationBoundsInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getDataRange --> getYRange,org.jfree.chart.annotations.XYAnnotationBoundsInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,annotationChanged --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,annotationChanged --> annotationChanged,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,annotationChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,annotationChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> getParent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> datasetChanged,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> <init>,org.jfree.chart.event.PlotChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> setType,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,datasetChanged --> notifyListeners,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,rendererChanged --> getSeriesVisibilityChanged,org.jfree.chart.event.RendererChangeEvent,);
Call(METHOD,org.jfree.chart.plot.XYPlot,rendererChanged --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairLockedOnData --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairValue$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setDomainCrosshairPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairVisible --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairLockedOnData --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairValue$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairStroke --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setRangeCrosshairPaint --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setFixedDomainAxisSpace$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setFixedRangeAxisSpace$2 --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panDomainAxes --> isInverted,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panDomainAxes --> pan,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panRangeAxes --> isInverted,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,panRangeAxes --> pan,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> resizeRange2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$2 --> resizeRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomDomainAxes$3 --> zoomRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> java2DToValue,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> resizeRange2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$2 --> resizeRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,zoomRangeAxes$3 --> zoomRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getSeriesCount --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,setFixedLegendItems --> fireChangeEvent,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> <init>,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> isSeriesVisible,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> isSeriesVisibleInLegend,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> getLegendItem,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,getLegendItems --> add,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,equals --> equals,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> clone,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> cloneMapValues,org.jfree.chart.util.CloneUtils,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> setPlot,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> addChangeListener,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,clone --> clone,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.plot.XYPlot,readObject --> setPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,readObject --> addChangeListener,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.plot.XYPlot,readObject --> addChangeListener,org.jfree.data.general.Dataset,);
Call(METHOD,org.jfree.chart.plot.XYPlot,readObject --> addChangeListener,org.jfree.chart.renderer.xy.XYItemRenderer,);
Call(METHOD,org.jfree.chart.plot.XYPlot,<clinit> --> getBundle,org.jfree.chart.util.ResourceBundleWrapper,);
EndClass 9
StartClass 10
Class(org.jfree.chart.ChartRenderingInfo,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(chartArea,java.awt.geom.Rectangle2D,Private,N,N,);
Attribute(plotInfo,org.jfree.chart.plot.PlotRenderingInfo,Private,N,N,);
Attribute(entities,org.jfree.chart.entity.EntityCollection,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getChartArea,java.awt.geom.Rectangle2D,Public,N,N);
Method(setChartArea,void,Public,N,N);
Method(getEntityCollection,org.jfree.chart.entity.EntityCollection,Public,N,N);
Method(setEntityCollection,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(getPlotInfo,org.jfree.chart.plot.PlotRenderingInfo,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>$2,org.jfree.chart.entity.EntityCollection,);
Parameter(setChartArea,java.awt.geom.Rectangle2D,);
Parameter(setEntityCollection,org.jfree.chart.entity.EntityCollection,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Composition(org.jfree.chart.plot.PlotRenderingInfo);
Composition(org.jfree.chart.entity.EntityCollection);
Call(METHOD,org.jfree.chart.ChartRenderingInfo,<init> --> <init>$2,org.jfree.chart.ChartRenderingInfo,);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,<init>$2 --> chartArea,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,<init>$2 --> plotInfo,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,<init>$2 --> entities,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,getChartArea --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,setChartArea --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,getEntityCollection --> entities,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,setEntityCollection --> entities,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clear --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clear --> entities,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clear --> plotInfo,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,getPlotInfo --> plotInfo,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,equals --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,equals --> plotInfo,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,equals --> entities,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clone --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clone --> entities,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clone --> chartArea,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,clone --> entities,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,writeObject --> chartArea,org.jfree.chart.ChartRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartRenderingInfo,readObject --> chartArea,org.jfree.chart.ChartRenderingInfo,WRITE);
Call(METHOD,org.jfree.chart.ChartRenderingInfo,<init> --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.ChartRenderingInfo,<init>$2 --> <init>,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.ChartRenderingInfo,clear --> <init>,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.ChartRenderingInfo,clear --> clear,org.jfree.chart.entity.EntityCollection,);
EndClass 10
StartClass 11
Class(org.jfree.chart.entity.EntityCollection,Y,Y,Public);
Method(clear,void,Public,N,Y);
Method(add,void,Public,N,Y);
Method(addAll,void,Public,N,Y);
Method(getEntity,org.jfree.chart.entity.ChartEntity,Public,N,Y);
Method(getEntity$2,org.jfree.chart.entity.ChartEntity,Public,N,Y);
Method(getEntityCount,int,Public,N,Y);
Method(getEntities,java.util.Collection,Public,N,Y);
Method(iterator,java.util.Iterator,Public,N,Y);
Parameter(add,org.jfree.chart.entity.ChartEntity,);
Parameter(addAll,org.jfree.chart.entity.EntityCollection,);
Parameter(getEntity,double,);
Parameter(getEntity,double,);
Parameter(getEntity$2,int,);
EndClass 11
StartClass 12
Class(org.jfree.chart.event.ChartChangeListener,Y,Y,Public);
Method(chartChanged,void,Public,N,Y);
Parameter(chartChanged,org.jfree.chart.event.ChartChangeEvent,);
EndClass 12
StartClass 13
Class(org.jfree.chart.event.ChartChangeEvent,N,N,Public);
Attribute(type,org.jfree.chart.event.ChartChangeEventType,Private,N,N,);
Attribute(chart,org.jfree.chart.JFreeChart,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getChart,org.jfree.chart.JFreeChart,Public,N,N);
Method(setChart,void,Public,N,N);
Method(getType,org.jfree.chart.event.ChartChangeEventType,Public,N,N);
Method(setType,void,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>$2,java.lang.Object,);
Parameter(<init>$2,org.jfree.chart.JFreeChart,);
Parameter(<init>$3,java.lang.Object,);
Parameter(<init>$3,org.jfree.chart.JFreeChart,);
Parameter(<init>$3,org.jfree.chart.event.ChartChangeEventType,);
Parameter(setChart,org.jfree.chart.JFreeChart,);
Parameter(setType,org.jfree.chart.event.ChartChangeEventType,);
SubClass(org.jfree.chart.event.TitleChangeEvent);
SubClass(org.jfree.chart.event.PlotChangeEvent);
SubClass(org.jfree.chart.event.AnnotationChangeEvent);
SubClass(org.jfree.chart.event.RendererChangeEvent);
SubClass(org.jfree.chart.event.AxisChangeEvent);
SubClass(org.jfree.chart.event.MarkerChangeEvent);
Composition(org.jfree.chart.event.ChartChangeEventType);
Composition(org.jfree.chart.JFreeChart);
Call(METHOD,org.jfree.chart.event.ChartChangeEvent,<init> --> <init>$3,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.event.ChartChangeEvent,<init>$2 --> <init>$3,org.jfree.chart.event.ChartChangeEvent,);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,<init>$3 --> chart,org.jfree.chart.event.ChartChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,<init>$3 --> type,org.jfree.chart.event.ChartChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,getChart --> chart,org.jfree.chart.event.ChartChangeEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,setChart --> chart,org.jfree.chart.event.ChartChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,getType --> type,org.jfree.chart.event.ChartChangeEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,setType --> type,org.jfree.chart.event.ChartChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,<init> --> GENERAL,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEvent,<init>$2 --> GENERAL,org.jfree.chart.event.ChartChangeEventType,READ);
EndClass 13
StartClass 14
Class(org.jfree.chart.event.ChartProgressListener,Y,Y,Public);
Method(chartProgress,void,Public,N,Y);
Parameter(chartProgress,org.jfree.chart.event.ChartProgressEvent,);
EndClass 14
StartClass 15
Class(org.jfree.chart.event.ChartProgressEvent,N,N,Public);
Attribute(DRAWING_STARTED,int,Public,Y,Y,);
Attribute(DRAWING_FINISHED,int,Public,Y,Y,);
Attribute(type,int,Private,N,N,);
Attribute(percent,int,Private,N,N,);
Attribute(chart,org.jfree.chart.JFreeChart,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getChart,org.jfree.chart.JFreeChart,Public,N,N);
Method(setChart,void,Public,N,N);
Method(getType,int,Public,N,N);
Method(setType,void,Public,N,N);
Method(getPercent,int,Public,N,N);
Method(setPercent,void,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,org.jfree.chart.JFreeChart,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(setChart,org.jfree.chart.JFreeChart,);
Parameter(setType,int,);
Parameter(setPercent,int,);
Composition(org.jfree.chart.JFreeChart);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,<init> --> chart,org.jfree.chart.event.ChartProgressEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,<init> --> type,org.jfree.chart.event.ChartProgressEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,<init> --> percent,org.jfree.chart.event.ChartProgressEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,getChart --> chart,org.jfree.chart.event.ChartProgressEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,setChart --> chart,org.jfree.chart.event.ChartProgressEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,getType --> type,org.jfree.chart.event.ChartProgressEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,setType --> type,org.jfree.chart.event.ChartProgressEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,getPercent --> percent,org.jfree.chart.event.ChartProgressEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartProgressEvent,setPercent --> percent,org.jfree.chart.event.ChartProgressEvent,WRITE);
EndClass 15
StartClass 16
Class(org.jfree.chart.event.TitleChangeEvent,N,N,Public);
Attribute(title,org.jfree.chart.title.Title,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTitle,org.jfree.chart.title.Title,Public,N,N);
Parameter(<init>,org.jfree.chart.title.Title,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Composition(org.jfree.chart.title.Title);
Call(ATTRIBUTE,org.jfree.chart.event.TitleChangeEvent,<init> --> title,org.jfree.chart.event.TitleChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.TitleChangeEvent,getTitle --> title,org.jfree.chart.event.TitleChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.TitleChangeEvent,<init> --> <init>,org.jfree.chart.event.ChartChangeEvent,);
EndClass 16
StartClass 17
Class(org.jfree.chart.event.PlotChangeEvent,N,N,Public);
Attribute(plot,org.jfree.chart.plot.Plot,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getPlot,org.jfree.chart.plot.Plot,Public,N,N);
Parameter(<init>,org.jfree.chart.plot.Plot,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Composition(org.jfree.chart.plot.Plot);
Call(ATTRIBUTE,org.jfree.chart.event.PlotChangeEvent,<init> --> plot,org.jfree.chart.event.PlotChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.PlotChangeEvent,getPlot --> plot,org.jfree.chart.event.PlotChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.PlotChangeEvent,<init> --> <init>,org.jfree.chart.event.ChartChangeEvent,);
EndClass 17
StartClass 18
Class(org.jfree.chart.plot.PlotState,N,N,Public);
Attribute(sharedAxisStates,java.util.Map,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getSharedAxisStates,java.util.Map,Public,N,N);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotState,<init> --> sharedAxisStates,org.jfree.chart.plot.PlotState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotState,getSharedAxisStates --> sharedAxisStates,org.jfree.chart.plot.PlotState,READ);
EndClass 18
StartClass 19
Class(org.jfree.chart.LegendItemSource,Y,Y,Public);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,Y);
EndClass 19
StartClass 20
Class(org.jfree.chart.block.RectangleConstraint,N,N,Public);
Attribute(NONE,org.jfree.chart.block.RectangleConstraint,Public,Y,Y,);
Attribute(width,double,Private,N,N,);
Attribute(widthRange,org.jfree.data.Range,Private,N,N,);
Attribute(widthConstraintType,org.jfree.chart.block.LengthConstraintType,Private,N,N,);
Attribute(height,double,Private,N,N,);
Attribute(heightRange,org.jfree.data.Range,Private,N,N,);
Attribute(heightConstraintType,org.jfree.chart.block.LengthConstraintType,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getWidth,double,Public,N,N);
Method(getWidthRange,org.jfree.data.Range,Public,N,N);
Method(getWidthConstraintType,org.jfree.chart.block.LengthConstraintType,Public,N,N);
Method(getHeight,double,Public,N,N);
Method(getHeightRange,org.jfree.data.Range,Public,N,N);
Method(getHeightConstraintType,org.jfree.chart.block.LengthConstraintType,Public,N,N);
Method(toUnconstrainedWidth,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toUnconstrainedHeight,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toFixedWidth,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toFixedHeight,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toRangeWidth,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toRangeHeight,org.jfree.chart.block.RectangleConstraint,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(calculateConstrainedSize,org.jfree.ui.Size2D,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,double,);
Parameter(<init>,double,);
Parameter(<init>$2,org.jfree.data.Range,);
Parameter(<init>$2,org.jfree.data.Range,);
Parameter(<init>$3,org.jfree.data.Range,);
Parameter(<init>$3,double,);
Parameter(<init>$4,double,);
Parameter(<init>$4,org.jfree.data.Range,);
Parameter(<init>$5,double,);
Parameter(<init>$5,org.jfree.data.Range,);
Parameter(<init>$5,org.jfree.chart.block.LengthConstraintType,);
Parameter(<init>$5,double,);
Parameter(<init>$5,org.jfree.data.Range,);
Parameter(<init>$5,org.jfree.chart.block.LengthConstraintType,);
Parameter(toFixedWidth,double,);
Parameter(toFixedHeight,double,);
Parameter(toRangeWidth,org.jfree.data.Range,);
Parameter(toRangeHeight,org.jfree.data.Range,);
Parameter(calculateConstrainedSize,org.jfree.ui.Size2D,);
Composition(org.jfree.chart.block.RectangleConstraint);
Composition(org.jfree.data.Range);
Composition(org.jfree.chart.block.LengthConstraintType);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<init> --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<init>$2 --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<init>$3 --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<init>$4 --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<clinit> --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> width,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> widthRange,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> height,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> heightRange,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$5 --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getWidth --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getWidthRange --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getWidthConstraintType --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getHeight --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getHeightRange --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,getHeightConstraintType --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toString --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toString --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toString --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> widthConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> heightConstraintType,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> heightRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> height,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> widthRange,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> width,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<clinit> --> NONE,org.jfree.chart.block.RectangleConstraint,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init> --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$2 --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$3 --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$3 --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$4 --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<init>$4 --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedWidth --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toUnconstrainedHeight --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedWidth --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toFixedHeight --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.RectangleConstraint,<clinit> --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,<init>$5 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeWidth --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toRangeHeight --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,toString --> toString,org.jfree.chart.block.LengthConstraintType,);
Call(METHOD,org.jfree.chart.block.RectangleConstraint,calculateConstrainedSize --> constrain,org.jfree.data.Range,);
EndClass 20
StartClass 21
Class(org.jfree.chart.block.BlockParams,N,N,Public);
Attribute(generateEntities,boolean,Private,N,N,);
Attribute(translateX,double,Private,N,N,);
Attribute(translateY,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getGenerateEntities,boolean,Public,N,N);
Method(setGenerateEntities,void,Public,N,N);
Method(getTranslateX,double,Public,N,N);
Method(setTranslateX,void,Public,N,N);
Method(getTranslateY,double,Public,N,N);
Method(setTranslateY,void,Public,N,N);
Parameter(setGenerateEntities,boolean,);
Parameter(setTranslateX,double,);
Parameter(setTranslateY,double,);
Realization(org.jfree.chart.block.EntityBlockParams);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,<init> --> translateX,org.jfree.chart.block.BlockParams,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,<init> --> translateY,org.jfree.chart.block.BlockParams,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,<init> --> generateEntities,org.jfree.chart.block.BlockParams,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,getGenerateEntities --> generateEntities,org.jfree.chart.block.BlockParams,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,setGenerateEntities --> generateEntities,org.jfree.chart.block.BlockParams,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,getTranslateX --> translateX,org.jfree.chart.block.BlockParams,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,setTranslateX --> translateX,org.jfree.chart.block.BlockParams,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,getTranslateY --> translateY,org.jfree.chart.block.BlockParams,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockParams,setTranslateY --> translateY,org.jfree.chart.block.BlockParams,WRITE);
EndClass 21
StartClass 22
Class(org.jfree.chart.block.LineBorder,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Attribute(stroke,java.awt.Stroke,Private,N,N,);
Attribute(insets,org.jfree.ui.RectangleInsets,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getPaint,java.awt.Paint,Public,N,N);
Method(getInsets,org.jfree.ui.RectangleInsets,Public,N,N);
Method(getStroke,java.awt.Stroke,Public,N,N);
Method(draw,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$2,java.awt.Stroke,);
Parameter(<init>$2,org.jfree.ui.RectangleInsets,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Realization(org.jfree.chart.block.BlockFrame);
Call(METHOD,org.jfree.chart.block.LineBorder,<init> --> <init>$2,org.jfree.chart.block.LineBorder,);
Call(METHOD,org.jfree.chart.block.LineBorder,draw --> getPaint,org.jfree.chart.block.LineBorder,);
Call(METHOD,org.jfree.chart.block.LineBorder,draw --> getStroke,org.jfree.chart.block.LineBorder,);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,<init>$2 --> paint,org.jfree.chart.block.LineBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,<init>$2 --> stroke,org.jfree.chart.block.LineBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,<init>$2 --> insets,org.jfree.chart.block.LineBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,getPaint --> paint,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,getInsets --> insets,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,getStroke --> stroke,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,draw --> insets,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,equals --> paint,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,equals --> stroke,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,equals --> insets,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,writeObject --> paint,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,writeObject --> stroke,org.jfree.chart.block.LineBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,readObject --> paint,org.jfree.chart.block.LineBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LineBorder,readObject --> stroke,org.jfree.chart.block.LineBorder,WRITE);
Call(METHOD,org.jfree.chart.block.LineBorder,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 22
StartClass 23
Class(org.jfree.chart.entity.ChartEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(area,java.awt.Shape,Private,N,N,);
Attribute(toolTipText,java.lang.String,Private,N,N,);
Attribute(urlText,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getArea,java.awt.Shape,Public,N,N);
Method(setArea,void,Public,N,N);
Method(getToolTipText,java.lang.String,Public,N,N);
Method(setToolTipText,void,Public,N,N);
Method(getURLText,java.lang.String,Public,N,N);
Method(setURLText,void,Public,N,N);
Method(getShapeType,java.lang.String,Public,N,N);
Method(getShapeCoords,java.lang.String,Public,N,N);
Method(getRectCoords,java.lang.String,Private,N,N);
Method(getPolyCoords,java.lang.String,Private,N,N);
Method(getImageMapAreaTag,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(setArea,java.awt.Shape,);
Parameter(setToolTipText,java.lang.String,);
Parameter(setURLText,java.lang.String,);
Parameter(getRectCoords,java.awt.geom.Rectangle2D,);
Parameter(getPolyCoords,java.awt.Shape,);
Parameter(getImageMapAreaTag,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,);
Parameter(getImageMapAreaTag,org.jfree.chart.imagemap.URLTagFragmentGenerator,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.jfree.chart.entity.JFreeChartEntity);
SubClass(org.jfree.chart.entity.PlotEntity);
SubClass(org.jfree.chart.entity.TitleEntity);
SubClass(org.jfree.chart.entity.XYItemEntity);
SubClass(org.jfree.chart.entity.AxisEntity);
SubClass(org.jfree.chart.entity.CategoryItemEntity);
SubClass(org.jfree.chart.entity.LegendItemEntity);
SubClass(org.jfree.chart.entity.CategoryLabelEntity);
SubClass(org.jfree.chart.entity.TickLabelEntity);
Call(METHOD,org.jfree.chart.entity.ChartEntity,<init> --> <init>$2,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getShapeCoords --> getRectCoords,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getShapeCoords --> getPolyCoords,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> getShapeType,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> getShapeCoords,org.jfree.chart.entity.ChartEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,<init>$3 --> area,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,<init>$3 --> toolTipText,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,<init>$3 --> urlText,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getArea --> area,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,setArea --> area,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getToolTipText --> toolTipText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,setToolTipText --> toolTipText,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getURLText --> urlText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,setURLText --> urlText,org.jfree.chart.entity.ChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getShapeType --> area,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getShapeCoords --> area,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> urlText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> toolTipText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,toString --> toolTipText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,equals --> area,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,equals --> toolTipText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,equals --> urlText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,hashCode --> toolTipText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,hashCode --> urlText,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,writeObject --> area,org.jfree.chart.entity.ChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.ChartEntity,readObject --> area,org.jfree.chart.entity.ChartEntity,WRITE);
Call(METHOD,org.jfree.chart.entity.ChartEntity,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,setArea --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getRectCoords --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getPolyCoords --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> generateToolTipFragment,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,getImageMapAreaTag --> generateURLFragment,org.jfree.chart.imagemap.URLTagFragmentGenerator,);
Call(METHOD,org.jfree.chart.entity.ChartEntity,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
EndClass 23
StartClass 24
Class(org.jfree.chart.block.EntityBlockResult,Y,Y,Public);
Method(getEntityCollection,org.jfree.chart.entity.EntityCollection,Public,N,Y);
EndClass 24
StartClass 25
Class(org.jfree.chart.plot.PlotRenderingInfo,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(owner,org.jfree.chart.ChartRenderingInfo,Private,N,N,);
Attribute(plotArea,java.awt.geom.Rectangle2D,Private,N,N,);
Attribute(dataArea,java.awt.geom.Rectangle2D,Private,N,N,);
Attribute(subplotInfo,java.util.List,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getOwner,org.jfree.chart.ChartRenderingInfo,Public,N,N);
Method(getPlotArea,java.awt.geom.Rectangle2D,Public,N,N);
Method(setPlotArea,void,Public,N,N);
Method(getDataArea,java.awt.geom.Rectangle2D,Public,N,N);
Method(setDataArea,void,Public,N,N);
Method(getSubplotCount,int,Public,N,N);
Method(addSubplotInfo,void,Public,N,N);
Method(getSubplotInfo,org.jfree.chart.plot.PlotRenderingInfo,Public,N,N);
Method(getSubplotIndex,int,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,org.jfree.chart.ChartRenderingInfo,);
Parameter(setPlotArea,java.awt.geom.Rectangle2D,);
Parameter(setDataArea,java.awt.geom.Rectangle2D,);
Parameter(addSubplotInfo,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getSubplotInfo,int,);
Parameter(getSubplotIndex,java.awt.geom.Point2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Composition(org.jfree.chart.ChartRenderingInfo);
Call(METHOD,org.jfree.chart.plot.PlotRenderingInfo,getSubplotIndex --> getSubplotCount,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.PlotRenderingInfo,getSubplotIndex --> getSubplotInfo,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.PlotRenderingInfo,getSubplotIndex --> getDataArea,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.plot.PlotRenderingInfo,clone --> clone,org.jfree.chart.plot.PlotRenderingInfo,);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,<init> --> owner,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,<init> --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,<init> --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,getOwner --> owner,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,getPlotArea --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,setPlotArea --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,getDataArea --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,setDataArea --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,getSubplotCount --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,addSubplotInfo --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,getSubplotInfo --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,equals --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,equals --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,equals --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,clone --> subplotInfo,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,writeObject --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,writeObject --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,readObject --> dataArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotRenderingInfo,readObject --> plotArea,org.jfree.chart.plot.PlotRenderingInfo,WRITE);
Call(METHOD,org.jfree.chart.plot.PlotRenderingInfo,getSubplotIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 25
StartClass 26
Class(org.jfree.chart.util.ParamChecks,N,N,Public);
Method(<init>,void,Public,N,N);
Method(nullNotPermitted,void,Public,Y,N);
Method(requireNonNegative,void,Public,Y,N);
Parameter(nullNotPermitted,java.lang.Object,);
Parameter(nullNotPermitted,java.lang.String,);
Parameter(requireNonNegative,int,);
Parameter(requireNonNegative,java.lang.String,);
EndClass 26
StartClass 27
Class(org.jfree.chart.entity.JFreeChartEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(chart,org.jfree.chart.JFreeChart,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getChart,org.jfree.chart.JFreeChart,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,org.jfree.chart.JFreeChart,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,org.jfree.chart.JFreeChart,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,org.jfree.chart.JFreeChart,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.chart.JFreeChart);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,<init> --> <init>$2,org.jfree.chart.entity.JFreeChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.JFreeChartEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.JFreeChartEntity,<init>$3 --> chart,org.jfree.chart.entity.JFreeChartEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.JFreeChartEntity,getChart --> chart,org.jfree.chart.entity.JFreeChartEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.JFreeChartEntity,equals --> chart,org.jfree.chart.entity.JFreeChartEntity,READ);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,<init>$3 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,toString --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,equals --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,equals --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,equals --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,equals --> equals,org.jfree.chart.JFreeChart,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,hashCode --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,hashCode --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,clone --> clone,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,writeObject --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.JFreeChartEntity,readObject --> setArea,org.jfree.chart.entity.ChartEntity,);
EndClass 27
StartClass 28
Class(org.jfree.chart.JFreeChart$1,N,N,NA);
Method(<init>,void,Public,N,N);
Method(isCompatibleValue,boolean,Public,N,N);
Parameter(<init>,int,);
Parameter(isCompatibleValue,java.lang.Object,);
EndClass 28
StartClass 29
Class(org.jfree.chart.block.LengthConstraintType,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(NONE,org.jfree.chart.block.LengthConstraintType,Public,Y,Y,);
Attribute(RANGE,org.jfree.chart.block.LengthConstraintType,Public,Y,Y,);
Attribute(FIXED,org.jfree.chart.block.LengthConstraintType,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.block.LengthConstraintType);
Call(METHOD,org.jfree.chart.block.LengthConstraintType,equals --> toString,org.jfree.chart.block.LengthConstraintType,);
Call(METHOD,org.jfree.chart.block.LengthConstraintType,readResolve --> equals,org.jfree.chart.block.LengthConstraintType,);
Call(METHOD,org.jfree.chart.block.LengthConstraintType,<clinit> --> <init>,org.jfree.chart.block.LengthConstraintType,);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,<init> --> name,org.jfree.chart.block.LengthConstraintType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,toString --> name,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,equals --> name,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,hashCode --> name,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,readResolve --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,readResolve --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,readResolve --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,<clinit> --> NONE,org.jfree.chart.block.LengthConstraintType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,<clinit> --> RANGE,org.jfree.chart.block.LengthConstraintType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LengthConstraintType,<clinit> --> FIXED,org.jfree.chart.block.LengthConstraintType,WRITE);
EndClass 29
StartClass 30
Class(org.jfree.chart.JFreeChartInfo,N,N,NA);
Method(<init>,void,Public,N,N);
Method(getLogo,java.awt.Image,Public,N,N);
Call(METHOD,org.jfree.chart.JFreeChartInfo,<init> --> getBundle,org.jfree.chart.util.ResourceBundleWrapper,);
EndClass 30
StartClass 31
Class(org.jfree.chart.block.BlockFrame,Y,Y,Public);
Method(getInsets,org.jfree.ui.RectangleInsets,Public,N,Y);
Method(draw,void,Public,N,Y);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
EndClass 31
StartClass 32
Class(org.jfree.data.Range,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(lower,double,Private,N,N,);
Attribute(upper,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getLowerBound,double,Public,N,N);
Method(getUpperBound,double,Public,N,N);
Method(getLength,double,Public,N,N);
Method(getCentralValue,double,Public,N,N);
Method(contains,boolean,Public,N,N);
Method(intersects,boolean,Public,N,N);
Method(intersects$2,boolean,Public,N,N);
Method(constrain,double,Public,N,N);
Method(combine,org.jfree.data.Range,Public,Y,N);
Method(combineIgnoringNaN,org.jfree.data.Range,Public,Y,N);
Method(min,double,Private,Y,N);
Method(max,double,Private,Y,N);
Method(expandToInclude,org.jfree.data.Range,Public,Y,N);
Method(expand,org.jfree.data.Range,Public,Y,N);
Method(shift,org.jfree.data.Range,Public,Y,N);
Method(shift$2,org.jfree.data.Range,Public,Y,N);
Method(shiftWithNoZeroCrossing,double,Private,Y,N);
Method(scale,org.jfree.data.Range,Public,Y,N);
Method(equals,boolean,Public,N,N);
Method(isNaNRange,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,double,);
Parameter(<init>,double,);
Parameter(contains,double,);
Parameter(intersects,double,);
Parameter(intersects,double,);
Parameter(intersects$2,org.jfree.data.Range,);
Parameter(constrain,double,);
Parameter(combine,org.jfree.data.Range,);
Parameter(combine,org.jfree.data.Range,);
Parameter(combineIgnoringNaN,org.jfree.data.Range,);
Parameter(combineIgnoringNaN,org.jfree.data.Range,);
Parameter(min,double,);
Parameter(min,double,);
Parameter(max,double,);
Parameter(max,double,);
Parameter(expandToInclude,org.jfree.data.Range,);
Parameter(expandToInclude,double,);
Parameter(expand,org.jfree.data.Range,);
Parameter(expand,double,);
Parameter(expand,double,);
Parameter(shift,org.jfree.data.Range,);
Parameter(shift,double,);
Parameter(shift$2,org.jfree.data.Range,);
Parameter(shift$2,double,);
Parameter(shift$2,boolean,);
Parameter(shiftWithNoZeroCrossing,double,);
Parameter(shiftWithNoZeroCrossing,double,);
Parameter(scale,org.jfree.data.Range,);
Parameter(scale,double,);
Parameter(equals,java.lang.Object,);
Call(METHOD,org.jfree.data.Range,intersects$2 --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,intersects$2 --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,intersects$2 --> intersects,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,constrain --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combine --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combine --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combine --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> isNaNRange,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> min,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> max,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,combineIgnoringNaN --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expandToInclude --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expandToInclude --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expandToInclude --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expand --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expand --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expand --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,expand --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,shift --> shift$2,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,shift$2 --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,shift$2 --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,shift$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,shift$2 --> shiftWithNoZeroCrossing,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,scale --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,scale --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.Range,scale --> <init>,org.jfree.data.Range,);
Call(ATTRIBUTE,org.jfree.data.Range,<init> --> lower,org.jfree.data.Range,WRITE);
Call(ATTRIBUTE,org.jfree.data.Range,<init> --> upper,org.jfree.data.Range,WRITE);
Call(ATTRIBUTE,org.jfree.data.Range,getLowerBound --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,getUpperBound --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,getLength --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,getLength --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,getCentralValue --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,getCentralValue --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,contains --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,contains --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,intersects --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,intersects --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,constrain --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,constrain --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,equals --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,equals --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,isNaNRange --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,isNaNRange --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,hashCode --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,hashCode --> upper,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,toString --> lower,org.jfree.data.Range,READ);
Call(ATTRIBUTE,org.jfree.data.Range,toString --> upper,org.jfree.data.Range,READ);
Call(METHOD,org.jfree.data.Range,expand --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.Range,shift$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.Range,scale --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 32
StartClass 33
Class(org.jfree.chart.LegendItemCollection,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(items,java.util.List,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(add,void,Public,N,N);
Method(addAll,void,Public,N,N);
Method(get,org.jfree.chart.LegendItem,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(add,org.jfree.chart.LegendItem,);
Parameter(addAll,org.jfree.chart.LegendItemCollection,);
Parameter(get,int,);
Parameter(equals,java.lang.Object,);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,<init> --> items,org.jfree.chart.LegendItemCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,add --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,addAll --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,get --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,getItemCount --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,iterator --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,equals --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,clone --> items,org.jfree.chart.LegendItemCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItemCollection,clone --> items,org.jfree.chart.LegendItemCollection,WRITE);
EndClass 33
StartClass 34
Class(org.jfree.chart.block.AbstractBlock,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(id,java.lang.String,Private,N,N,);
Attribute(margin,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(frame,org.jfree.chart.block.BlockFrame,Private,N,N,);
Attribute(padding,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(width,double,Private,N,N,);
Attribute(height,double,Private,N,N,);
Attribute(bounds,java.awt.geom.Rectangle2D,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(getID,java.lang.String,Public,N,N);
Method(setID,void,Public,N,N);
Method(getWidth,double,Public,N,N);
Method(setWidth,void,Public,N,N);
Method(getHeight,double,Public,N,N);
Method(setHeight,void,Public,N,N);
Method(getMargin,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setMargin,void,Public,N,N);
Method(setMargin$2,void,Public,N,N);
Method(getBorder,org.jfree.chart.block.BlockBorder,Public,N,N);
Method(setBorder,void,Public,N,N);
Method(setBorder$2,void,Public,N,N);
Method(getFrame,org.jfree.chart.block.BlockFrame,Public,N,N);
Method(setFrame,void,Public,N,N);
Method(getPadding,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setPadding,void,Public,N,N);
Method(setPadding$2,void,Public,N,N);
Method(getContentXOffset,double,Public,N,N);
Method(getContentYOffset,double,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrange$2,org.jfree.ui.Size2D,Public,N,N);
Method(getBounds,java.awt.geom.Rectangle2D,Public,N,N);
Method(setBounds,void,Public,N,N);
Method(trimToContentWidth,double,Protected,N,N);
Method(trimToContentHeight,double,Protected,N,N);
Method(toContentConstraint,org.jfree.chart.block.RectangleConstraint,Protected,N,N);
Method(trimToContentWidth$2,org.jfree.data.Range,Private,N,N);
Method(trimToContentHeight$2,org.jfree.data.Range,Private,N,N);
Method(calculateTotalWidth,double,Protected,N,N);
Method(calculateTotalHeight,double,Protected,N,N);
Method(trimMargin,java.awt.geom.Rectangle2D,Protected,N,N);
Method(trimBorder,java.awt.geom.Rectangle2D,Protected,N,N);
Method(trimPadding,java.awt.geom.Rectangle2D,Protected,N,N);
Method(drawBorder,void,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(setID,java.lang.String,);
Parameter(setWidth,double,);
Parameter(setHeight,double,);
Parameter(setMargin,org.jfree.ui.RectangleInsets,);
Parameter(setMargin$2,double,);
Parameter(setMargin$2,double,);
Parameter(setMargin$2,double,);
Parameter(setMargin$2,double,);
Parameter(setBorder,org.jfree.chart.block.BlockBorder,);
Parameter(setBorder$2,double,);
Parameter(setBorder$2,double,);
Parameter(setBorder$2,double,);
Parameter(setBorder$2,double,);
Parameter(setFrame,org.jfree.chart.block.BlockFrame,);
Parameter(setPadding,org.jfree.ui.RectangleInsets,);
Parameter(setPadding$2,double,);
Parameter(setPadding$2,double,);
Parameter(setPadding$2,double,);
Parameter(setPadding$2,double,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange$2,java.awt.Graphics2D,);
Parameter(arrange$2,org.jfree.chart.block.RectangleConstraint,);
Parameter(setBounds,java.awt.geom.Rectangle2D,);
Parameter(trimToContentWidth,double,);
Parameter(trimToContentHeight,double,);
Parameter(toContentConstraint,org.jfree.chart.block.RectangleConstraint,);
Parameter(trimToContentWidth$2,org.jfree.data.Range,);
Parameter(trimToContentHeight$2,org.jfree.data.Range,);
Parameter(calculateTotalWidth,double,);
Parameter(calculateTotalHeight,double,);
Parameter(trimMargin,java.awt.geom.Rectangle2D,);
Parameter(trimBorder,java.awt.geom.Rectangle2D,);
Parameter(trimPadding,java.awt.geom.Rectangle2D,);
Parameter(drawBorder,java.awt.Graphics2D,);
Parameter(drawBorder,java.awt.geom.Rectangle2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.jfree.chart.title.TextTitle);
SubClass(org.jfree.chart.title.LegendTitle);
SubClass(org.jfree.chart.title.Title);
SubClass(org.jfree.chart.title.LegendItemBlockContainer);
SubClass(org.jfree.chart.block.BlockContainer);
SubClass(org.jfree.chart.title.LegendGraphic);
SubClass(org.jfree.chart.block.LabelBlock);
Composition(org.jfree.chart.block.BlockFrame);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setMargin$2 --> setMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setBorder --> setFrame,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setBorder$2 --> setFrame,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setPadding$2 --> setPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,arrange --> arrange$2,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,arrange$2 --> getWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,arrange$2 --> getHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> trimToContentWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> trimToContentHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> trimToContentWidth$2,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> trimToContentHeight$2,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentWidth$2 --> trimToContentWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentHeight$2 --> trimToContentHeight,org.jfree.chart.block.AbstractBlock,);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> id,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> width,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> height,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> bounds,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> margin,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> frame,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> padding,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getID --> id,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setID --> id,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getWidth --> width,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setWidth --> width,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getHeight --> height,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setHeight --> height,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getMargin --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setMargin --> margin,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getBorder --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getFrame --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setFrame --> frame,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getPadding --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setPadding --> padding,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentXOffset --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentXOffset --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentXOffset --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentYOffset --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentYOffset --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getContentYOffset --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,getBounds --> bounds,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,setBounds --> bounds,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentWidth --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentWidth --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentWidth --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentHeight --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentHeight --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimToContentHeight --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalWidth --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalWidth --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalWidth --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalHeight --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalHeight --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,calculateTotalHeight --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimMargin --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimBorder --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,trimPadding --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,drawBorder --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> id,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> bounds,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> margin,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> padding,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> height,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,equals --> width,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,clone --> bounds,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,clone --> frame,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,clone --> bounds,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,clone --> frame,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,writeObject --> bounds,org.jfree.chart.block.AbstractBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,readObject --> bounds,org.jfree.chart.block.AbstractBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,<init> --> NONE,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,arrange --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.AbstractBlock,toContentConstraint --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setMargin --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setBorder$2 --> <init>$3,org.jfree.chart.block.BlockBorder,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setFrame --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setPadding --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,getContentXOffset --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,getContentYOffset --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,arrange$2 --> calculateConstrainedSize,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,setBounds --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentWidth --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentHeight --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,toContentConstraint --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentWidth$2 --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentWidth$2 --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentWidth$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentHeight$2 --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentHeight$2 --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimToContentHeight$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,calculateTotalWidth --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,calculateTotalHeight --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,trimBorder --> getInsets,org.jfree.chart.block.BlockFrame,);
Call(METHOD,org.jfree.chart.block.AbstractBlock,drawBorder --> draw,org.jfree.chart.block.BlockFrame,);
EndClass 34
StartClass 35
Class(org.jfree.chart.block.Block,Y,Y,Public);
Method(getID,java.lang.String,Public,N,Y);
Method(setID,void,Public,N,Y);
Method(arrange,org.jfree.ui.Size2D,Public,N,Y);
Method(arrange$2,org.jfree.ui.Size2D,Public,N,Y);
Method(getBounds,java.awt.geom.Rectangle2D,Public,N,Y);
Method(setBounds,void,Public,N,Y);
Method(draw,java.lang.Object,Public,N,Y);
Parameter(setID,java.lang.String,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange$2,java.awt.Graphics2D,);
Parameter(arrange$2,org.jfree.chart.block.RectangleConstraint,);
Parameter(setBounds,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.lang.Object,);
EndClass 35
StartClass 36
Class(org.jfree.chart.block.EntityBlockParams,Y,Y,Public);
Method(getGenerateEntities,boolean,Public,N,Y);
EndClass 36
StartClass 37
Class(org.jfree.chart.plot.ValueAxisPlot,Y,Y,Public);
Method(getDataRange,org.jfree.data.Range,Public,N,Y);
Parameter(getDataRange,org.jfree.chart.axis.ValueAxis,);
EndClass 37
StartClass 38
Class(org.jfree.chart.plot.Pannable,Y,Y,Public);
Method(getOrientation,org.jfree.chart.plot.PlotOrientation,Public,N,Y);
Method(isDomainPannable,boolean,Public,N,Y);
Method(isRangePannable,boolean,Public,N,Y);
Method(panDomainAxes,void,Public,N,Y);
Method(panRangeAxes,void,Public,N,Y);
Parameter(panDomainAxes,double,);
Parameter(panDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panDomainAxes,java.awt.geom.Point2D,);
Parameter(panRangeAxes,double,);
Parameter(panRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(panRangeAxes,java.awt.geom.Point2D,);
EndClass 38
StartClass 39
Class(org.jfree.chart.plot.Zoomable,Y,Y,Public);
Method(isDomainZoomable,boolean,Public,N,Y);
Method(isRangeZoomable,boolean,Public,N,Y);
Method(getOrientation,org.jfree.chart.plot.PlotOrientation,Public,N,Y);
Method(zoomDomainAxes,void,Public,N,Y);
Method(zoomDomainAxes$2,void,Public,N,Y);
Method(zoomDomainAxes$3,void,Public,N,Y);
Method(zoomRangeAxes,void,Public,N,Y);
Method(zoomRangeAxes$2,void,Public,N,Y);
Method(zoomRangeAxes$3,void,Public,N,Y);
Parameter(zoomDomainAxes,double,);
Parameter(zoomDomainAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$2,double,);
Parameter(zoomDomainAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$2,java.awt.geom.Point2D,);
Parameter(zoomDomainAxes$2,boolean,);
Parameter(zoomDomainAxes$3,double,);
Parameter(zoomDomainAxes$3,double,);
Parameter(zoomDomainAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomDomainAxes$3,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes,double,);
Parameter(zoomRangeAxes,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,double,);
Parameter(zoomRangeAxes$2,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$2,java.awt.geom.Point2D,);
Parameter(zoomRangeAxes$2,boolean,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,double,);
Parameter(zoomRangeAxes$3,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(zoomRangeAxes$3,java.awt.geom.Point2D,);
EndClass 39
StartClass 40
Class(org.jfree.chart.event.RendererChangeListener,Y,Y,Public);
Method(rendererChanged,void,Public,N,Y);
Parameter(rendererChanged,org.jfree.chart.event.RendererChangeEvent,);
EndClass 40
StartClass 41
Class(org.jfree.chart.plot.PlotOrientation,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(HORIZONTAL,org.jfree.chart.plot.PlotOrientation,Public,Y,Y,);
Attribute(VERTICAL,org.jfree.chart.plot.PlotOrientation,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(isHorizontal,boolean,Public,N,N);
Method(isVertical,boolean,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.plot.PlotOrientation);
Call(METHOD,org.jfree.chart.plot.PlotOrientation,isHorizontal --> equals,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.PlotOrientation,isVertical --> equals,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.PlotOrientation,equals --> toString,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.PlotOrientation,readResolve --> equals,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.plot.PlotOrientation,<clinit> --> <init>,org.jfree.chart.plot.PlotOrientation,);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,<init> --> name,org.jfree.chart.plot.PlotOrientation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,isHorizontal --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,isVertical --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,toString --> name,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,equals --> name,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,hashCode --> name,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,readResolve --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,readResolve --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,<clinit> --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.PlotOrientation,<clinit> --> VERTICAL,org.jfree.chart.plot.PlotOrientation,WRITE);
EndClass 41
StartClass 42
Class(org.jfree.chart.axis.AxisSpace,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(top,double,Private,N,N,);
Attribute(bottom,double,Private,N,N,);
Attribute(left,double,Private,N,N,);
Attribute(right,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTop,double,Public,N,N);
Method(setTop,void,Public,N,N);
Method(getBottom,double,Public,N,N);
Method(setBottom,void,Public,N,N);
Method(getLeft,double,Public,N,N);
Method(setLeft,void,Public,N,N);
Method(getRight,double,Public,N,N);
Method(setRight,void,Public,N,N);
Method(add,void,Public,N,N);
Method(ensureAtLeast,void,Public,N,N);
Method(ensureAtLeast$2,void,Public,N,N);
Method(shrink,java.awt.geom.Rectangle2D,Public,N,N);
Method(expand,java.awt.geom.Rectangle2D,Public,N,N);
Method(reserved,java.awt.geom.Rectangle2D,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(setTop,double,);
Parameter(setBottom,double,);
Parameter(setLeft,double,);
Parameter(setRight,double,);
Parameter(add,double,);
Parameter(add,org.jfree.ui.RectangleEdge,);
Parameter(ensureAtLeast,org.jfree.chart.axis.AxisSpace,);
Parameter(ensureAtLeast$2,double,);
Parameter(ensureAtLeast$2,org.jfree.ui.RectangleEdge,);
Parameter(shrink,java.awt.geom.Rectangle2D,);
Parameter(shrink,java.awt.geom.Rectangle2D,);
Parameter(expand,java.awt.geom.Rectangle2D,);
Parameter(expand,java.awt.geom.Rectangle2D,);
Parameter(reserved,java.awt.geom.Rectangle2D,);
Parameter(reserved,org.jfree.ui.RectangleEdge,);
Parameter(equals,java.lang.Object,);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,<init> --> top,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,<init> --> bottom,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,<init> --> left,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,<init> --> right,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,getTop --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,setTop --> top,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,getBottom --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,setBottom --> bottom,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,getLeft --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,setLeft --> left,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,getRight --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,setRight --> right,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> top,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> bottom,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> left,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,add --> right,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> top,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> bottom,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> left,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast --> right,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> top,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> bottom,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> left,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,ensureAtLeast$2 --> right,org.jfree.chart.axis.AxisSpace,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,shrink --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,shrink --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,shrink --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,shrink --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,expand --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,expand --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,expand --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,expand --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,reserved --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,reserved --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,reserved --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,reserved --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,equals --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,equals --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,equals --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,equals --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,hashCode --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,hashCode --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,hashCode --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,hashCode --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,toString --> left,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,toString --> right,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,toString --> top,org.jfree.chart.axis.AxisSpace,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisSpace,toString --> bottom,org.jfree.chart.axis.AxisSpace,READ);
Call(METHOD,org.jfree.chart.axis.AxisSpace,add --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 42
StartClass 43
Class(org.jfree.chart.plot.DatasetRenderingOrder,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(FORWARD,org.jfree.chart.plot.DatasetRenderingOrder,Public,Y,Y,);
Attribute(REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.plot.DatasetRenderingOrder);
Call(METHOD,org.jfree.chart.plot.DatasetRenderingOrder,equals --> toString,org.jfree.chart.plot.DatasetRenderingOrder,);
Call(METHOD,org.jfree.chart.plot.DatasetRenderingOrder,readResolve --> equals,org.jfree.chart.plot.DatasetRenderingOrder,);
Call(METHOD,org.jfree.chart.plot.DatasetRenderingOrder,<clinit> --> <init>,org.jfree.chart.plot.DatasetRenderingOrder,);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,<init> --> name,org.jfree.chart.plot.DatasetRenderingOrder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,toString --> name,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,equals --> name,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,hashCode --> name,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,readResolve --> FORWARD,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,readResolve --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,<clinit> --> FORWARD,org.jfree.chart.plot.DatasetRenderingOrder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DatasetRenderingOrder,<clinit> --> REVERSE,org.jfree.chart.plot.DatasetRenderingOrder,WRITE);
EndClass 43
StartClass 44
Class(org.jfree.chart.plot.SeriesRenderingOrder,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(FORWARD,org.jfree.chart.plot.SeriesRenderingOrder,Public,Y,Y,);
Attribute(REVERSE,org.jfree.chart.plot.SeriesRenderingOrder,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.plot.SeriesRenderingOrder);
Call(METHOD,org.jfree.chart.plot.SeriesRenderingOrder,equals --> toString,org.jfree.chart.plot.SeriesRenderingOrder,);
Call(METHOD,org.jfree.chart.plot.SeriesRenderingOrder,readResolve --> equals,org.jfree.chart.plot.SeriesRenderingOrder,);
Call(METHOD,org.jfree.chart.plot.SeriesRenderingOrder,<clinit> --> <init>,org.jfree.chart.plot.SeriesRenderingOrder,);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,<init> --> name,org.jfree.chart.plot.SeriesRenderingOrder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,toString --> name,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,equals --> name,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,hashCode --> name,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,readResolve --> FORWARD,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,readResolve --> REVERSE,org.jfree.chart.plot.SeriesRenderingOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,<clinit> --> FORWARD,org.jfree.chart.plot.SeriesRenderingOrder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.SeriesRenderingOrder,<clinit> --> REVERSE,org.jfree.chart.plot.SeriesRenderingOrder,WRITE);
EndClass 44
StartClass 45
Class(org.jfree.chart.util.ShadowGenerator,Y,Y,Public);
Method(createDropShadow,java.awt.image.BufferedImage,Public,N,Y);
Method(calculateOffsetX,int,Public,N,Y);
Method(calculateOffsetY,int,Public,N,Y);
Parameter(createDropShadow,java.awt.image.BufferedImage,);
EndClass 45
StartClass 46
Class(org.jfree.data.xy.XYDataset,Y,Y,Public);
Method(getDomainOrder,org.jfree.data.DomainOrder,Public,N,Y);
Method(getItemCount,int,Public,N,Y);
Method(getX,java.lang.Number,Public,N,Y);
Method(getXValue,double,Public,N,Y);
Method(getY,java.lang.Number,Public,N,Y);
Method(getYValue,double,Public,N,Y);
Parameter(getItemCount,int,);
Parameter(getX,int,);
Parameter(getX,int,);
Parameter(getXValue,int,);
Parameter(getXValue,int,);
Parameter(getY,int,);
Parameter(getY,int,);
Parameter(getYValue,int,);
Parameter(getYValue,int,);
Realization(org.jfree.data.general.SeriesDataset);
EndClass 46
StartClass 47
Class(org.jfree.chart.axis.ValueAxis,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_RANGE,org.jfree.data.Range,Public,Y,Y,);
Attribute(DEFAULT_AUTO_RANGE,boolean,Public,Y,Y,);
Attribute(DEFAULT_INVERTED,boolean,Public,Y,Y,);
Attribute(DEFAULT_AUTO_RANGE_MINIMUM_SIZE,double,Public,Y,Y,);
Attribute(DEFAULT_LOWER_MARGIN,double,Public,Y,Y,);
Attribute(DEFAULT_UPPER_MARGIN,double,Public,Y,Y,);
Attribute(DEFAULT_LOWER_BOUND,double,Public,Y,Y,);
Attribute(DEFAULT_UPPER_BOUND,double,Public,Y,Y,);
Attribute(DEFAULT_AUTO_TICK_UNIT_SELECTION,boolean,Public,Y,Y,);
Attribute(MAXIMUM_TICK_COUNT,int,Public,Y,Y,);
Attribute(positiveArrowVisible,boolean,Private,N,N,);
Attribute(negativeArrowVisible,boolean,Private,N,N,);
Attribute(upArrow,java.awt.Shape,Private,N,N,);
Attribute(downArrow,java.awt.Shape,Private,N,N,);
Attribute(leftArrow,java.awt.Shape,Private,N,N,);
Attribute(rightArrow,java.awt.Shape,Private,N,N,);
Attribute(inverted,boolean,Private,N,N,);
Attribute(range,org.jfree.data.Range,Private,N,N,);
Attribute(autoRange,boolean,Private,N,N,);
Attribute(autoRangeMinimumSize,double,Private,N,N,);
Attribute(defaultAutoRange,org.jfree.data.Range,Private,N,N,);
Attribute(upperMargin,double,Private,N,N,);
Attribute(lowerMargin,double,Private,N,N,);
Attribute(fixedAutoRange,double,Private,N,N,);
Attribute(autoTickUnitSelection,boolean,Private,N,N,);
Attribute(standardTickUnits,org.jfree.chart.axis.TickUnitSource,Private,N,N,);
Attribute(autoTickIndex,int,Private,N,N,);
Attribute(minorTickCount,int,Private,N,N,);
Attribute(verticalTickLabels,boolean,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(isVerticalTickLabels,boolean,Public,N,N);
Method(setVerticalTickLabels,void,Public,N,N);
Method(isPositiveArrowVisible,boolean,Public,N,N);
Method(setPositiveArrowVisible,void,Public,N,N);
Method(isNegativeArrowVisible,boolean,Public,N,N);
Method(setNegativeArrowVisible,void,Public,N,N);
Method(getUpArrow,java.awt.Shape,Public,N,N);
Method(setUpArrow,void,Public,N,N);
Method(getDownArrow,java.awt.Shape,Public,N,N);
Method(setDownArrow,void,Public,N,N);
Method(getLeftArrow,java.awt.Shape,Public,N,N);
Method(setLeftArrow,void,Public,N,N);
Method(getRightArrow,java.awt.Shape,Public,N,N);
Method(setRightArrow,void,Public,N,N);
Method(drawAxisLine,void,Protected,N,N);
Method(calculateAnchorPoint,float[],Protected,N,N);
Method(drawTickMarksAndLabels,org.jfree.chart.axis.AxisState,Protected,N,N);
Method(reserveSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(findMaximumTickLabelHeight,double,Protected,N,N);
Method(findMaximumTickLabelWidth,double,Protected,N,N);
Method(isInverted,boolean,Public,N,N);
Method(setInverted,void,Public,N,N);
Method(isAutoRange,boolean,Public,N,N);
Method(setAutoRange,void,Public,N,N);
Method(setAutoRange$2,void,Protected,N,N);
Method(getAutoRangeMinimumSize,double,Public,N,N);
Method(setAutoRangeMinimumSize,void,Public,N,N);
Method(setAutoRangeMinimumSize$2,void,Public,N,N);
Method(getDefaultAutoRange,org.jfree.data.Range,Public,N,N);
Method(setDefaultAutoRange,void,Public,N,N);
Method(getLowerMargin,double,Public,N,N);
Method(setLowerMargin,void,Public,N,N);
Method(getUpperMargin,double,Public,N,N);
Method(setUpperMargin,void,Public,N,N);
Method(getFixedAutoRange,double,Public,N,N);
Method(setFixedAutoRange,void,Public,N,N);
Method(getLowerBound,double,Public,N,N);
Method(setLowerBound,void,Public,N,N);
Method(getUpperBound,double,Public,N,N);
Method(setUpperBound,void,Public,N,N);
Method(getRange,org.jfree.data.Range,Public,N,N);
Method(setRange,void,Public,N,N);
Method(setRange$2,void,Public,N,N);
Method(setRange$3,void,Public,N,N);
Method(setRangeWithMargins,void,Public,N,N);
Method(setRangeWithMargins$2,void,Public,N,N);
Method(setRangeWithMargins$3,void,Public,N,N);
Method(setRangeAboutValue,void,Public,N,N);
Method(isAutoTickUnitSelection,boolean,Public,N,N);
Method(setAutoTickUnitSelection,void,Public,N,N);
Method(setAutoTickUnitSelection$2,void,Public,N,N);
Method(getStandardTickUnits,org.jfree.chart.axis.TickUnitSource,Public,N,N);
Method(setStandardTickUnits,void,Public,N,N);
Method(getMinorTickCount,int,Public,N,N);
Method(setMinorTickCount,void,Public,N,N);
Method(valueToJava2D,double,Public,N,Y);
Method(lengthToJava2D,double,Public,N,N);
Method(java2DToValue,double,Public,N,Y);
Method(autoAdjustRange,void,Protected,N,Y);
Method(centerRange,void,Public,N,N);
Method(resizeRange,void,Public,N,N);
Method(resizeRange$2,void,Public,N,N);
Method(resizeRange2,void,Public,N,N);
Method(zoomRange,void,Public,N,N);
Method(pan,void,Public,N,N);
Method(getAutoTickIndex,int,Protected,N,N);
Method(setAutoTickIndex,void,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,org.jfree.chart.axis.TickUnitSource,);
Parameter(setVerticalTickLabels,boolean,);
Parameter(setPositiveArrowVisible,boolean,);
Parameter(setNegativeArrowVisible,boolean,);
Parameter(setUpArrow,java.awt.Shape,);
Parameter(setDownArrow,java.awt.Shape,);
Parameter(setLeftArrow,java.awt.Shape,);
Parameter(setRightArrow,java.awt.Shape,);
Parameter(drawAxisLine,java.awt.Graphics2D,);
Parameter(drawAxisLine,double,);
Parameter(drawAxisLine,java.awt.geom.Rectangle2D,);
Parameter(drawAxisLine,org.jfree.ui.RectangleEdge,);
Parameter(calculateAnchorPoint,org.jfree.chart.axis.ValueTick,);
Parameter(calculateAnchorPoint,double,);
Parameter(calculateAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateAnchorPoint,org.jfree.ui.RectangleEdge,);
Parameter(drawTickMarksAndLabels,java.awt.Graphics2D,);
Parameter(drawTickMarksAndLabels,double,);
Parameter(drawTickMarksAndLabels,java.awt.geom.Rectangle2D,);
Parameter(drawTickMarksAndLabels,java.awt.geom.Rectangle2D,);
Parameter(drawTickMarksAndLabels,org.jfree.ui.RectangleEdge,);
Parameter(reserveSpace,java.awt.Graphics2D,);
Parameter(reserveSpace,org.jfree.chart.plot.Plot,);
Parameter(reserveSpace,java.awt.geom.Rectangle2D,);
Parameter(reserveSpace,org.jfree.ui.RectangleEdge,);
Parameter(reserveSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(findMaximumTickLabelHeight,java.util.List,);
Parameter(findMaximumTickLabelHeight,java.awt.Graphics2D,);
Parameter(findMaximumTickLabelHeight,java.awt.geom.Rectangle2D,);
Parameter(findMaximumTickLabelHeight,boolean,);
Parameter(findMaximumTickLabelWidth,java.util.List,);
Parameter(findMaximumTickLabelWidth,java.awt.Graphics2D,);
Parameter(findMaximumTickLabelWidth,java.awt.geom.Rectangle2D,);
Parameter(findMaximumTickLabelWidth,boolean,);
Parameter(setInverted,boolean,);
Parameter(setAutoRange,boolean,);
Parameter(setAutoRange$2,boolean,);
Parameter(setAutoRange$2,boolean,);
Parameter(setAutoRangeMinimumSize,double,);
Parameter(setAutoRangeMinimumSize$2,double,);
Parameter(setAutoRangeMinimumSize$2,boolean,);
Parameter(setDefaultAutoRange,org.jfree.data.Range,);
Parameter(setLowerMargin,double,);
Parameter(setUpperMargin,double,);
Parameter(setFixedAutoRange,double,);
Parameter(setLowerBound,double,);
Parameter(setUpperBound,double,);
Parameter(setRange,org.jfree.data.Range,);
Parameter(setRange$2,org.jfree.data.Range,);
Parameter(setRange$2,boolean,);
Parameter(setRange$2,boolean,);
Parameter(setRange$3,double,);
Parameter(setRange$3,double,);
Parameter(setRangeWithMargins,org.jfree.data.Range,);
Parameter(setRangeWithMargins$2,org.jfree.data.Range,);
Parameter(setRangeWithMargins$2,boolean,);
Parameter(setRangeWithMargins$2,boolean,);
Parameter(setRangeWithMargins$3,double,);
Parameter(setRangeWithMargins$3,double,);
Parameter(setRangeAboutValue,double,);
Parameter(setRangeAboutValue,double,);
Parameter(setAutoTickUnitSelection,boolean,);
Parameter(setAutoTickUnitSelection$2,boolean,);
Parameter(setAutoTickUnitSelection$2,boolean,);
Parameter(setStandardTickUnits,org.jfree.chart.axis.TickUnitSource,);
Parameter(setMinorTickCount,int,);
Parameter(valueToJava2D,double,);
Parameter(valueToJava2D,java.awt.geom.Rectangle2D,);
Parameter(valueToJava2D,org.jfree.ui.RectangleEdge,);
Parameter(lengthToJava2D,double,);
Parameter(lengthToJava2D,java.awt.geom.Rectangle2D,);
Parameter(lengthToJava2D,org.jfree.ui.RectangleEdge,);
Parameter(java2DToValue,double,);
Parameter(java2DToValue,java.awt.geom.Rectangle2D,);
Parameter(java2DToValue,org.jfree.ui.RectangleEdge,);
Parameter(centerRange,double,);
Parameter(resizeRange,double,);
Parameter(resizeRange$2,double,);
Parameter(resizeRange$2,double,);
Parameter(resizeRange2,double,);
Parameter(resizeRange2,double,);
Parameter(zoomRange,double,);
Parameter(zoomRange,double,);
Parameter(pan,double,);
Parameter(setAutoTickIndex,int,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.axis.Axis);
Generalization(org.jfree.chart.axis.Axis);
Composition(org.jfree.data.Range);
Composition(org.jfree.chart.axis.TickUnitSource);
Call(METHOD,org.jfree.chart.axis.ValueAxis,calculateAnchorPoint --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> drawAxisLine,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> calculateAnchorPoint,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> isVerticalTickLabels,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> findMaximumTickLabelWidth,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> findMaximumTickLabelHeight,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> isVerticalTickLabels,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> findMaximumTickLabelHeight,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> findMaximumTickLabelWidth,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRange --> setAutoRange$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRange$2 --> autoAdjustRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize --> setAutoRangeMinimumSize$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize$2 --> autoAdjustRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerMargin --> isAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerMargin --> autoAdjustRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperMargin --> isAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperMargin --> autoAdjustRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setFixedAutoRange --> isAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setFixedAutoRange --> autoAdjustRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerBound --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperBound --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperBound --> setRange$3,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange --> setRange$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange$3 --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins --> setRangeWithMargins$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$2 --> getLowerMargin,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$2 --> getUpperMargin,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$2 --> setRange$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$3 --> setRangeWithMargins,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeAboutValue --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoTickUnitSelection --> setAutoTickUnitSelection$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,lengthToJava2D --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,centerRange --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange --> resizeRange$2,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange$2 --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange$2 --> setAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange2 --> getLowerBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange2 --> getUpperBound,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange2 --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange2 --> setAutoRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,zoomRange --> isInverted,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,zoomRange --> setRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,pan --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,pan --> setRange$3,org.jfree.chart.axis.ValueAxis,);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> DEFAULT_RANGE,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> positiveArrowVisible,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> negativeArrowVisible,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> range,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> autoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> defaultAutoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> inverted,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> autoRangeMinimumSize,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> lowerMargin,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> upperMargin,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> fixedAutoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> autoTickUnitSelection,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> standardTickUnits,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> upArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> downArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> rightArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> leftArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> verticalTickLabels,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<init> --> minorTickCount,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isVerticalTickLabels --> verticalTickLabels,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setVerticalTickLabels --> verticalTickLabels,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setVerticalTickLabels --> verticalTickLabels,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isPositiveArrowVisible --> positiveArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setPositiveArrowVisible --> positiveArrowVisible,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isNegativeArrowVisible --> negativeArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setNegativeArrowVisible --> negativeArrowVisible,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getUpArrow --> upArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setUpArrow --> upArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getDownArrow --> downArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setDownArrow --> downArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getLeftArrow --> leftArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setLeftArrow --> leftArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getRightArrow --> rightArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setRightArrow --> rightArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> positiveArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> inverted,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> negativeArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> rightArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> upArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> leftArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawAxisLine --> downArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isInverted --> inverted,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setInverted --> inverted,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setInverted --> inverted,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isAutoRange --> autoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoRange$2 --> autoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoRange$2 --> autoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getAutoRangeMinimumSize --> autoRangeMinimumSize,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize$2 --> autoRangeMinimumSize,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize$2 --> autoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize$2 --> autoRangeMinimumSize,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getDefaultAutoRange --> defaultAutoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setDefaultAutoRange --> defaultAutoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getLowerMargin --> lowerMargin,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setLowerMargin --> lowerMargin,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getUpperMargin --> upperMargin,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setUpperMargin --> upperMargin,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getFixedAutoRange --> fixedAutoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setFixedAutoRange --> fixedAutoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getLowerBound --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setLowerBound --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getUpperBound --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setUpperBound --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getRange --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setRange$2 --> autoRange,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setRange$2 --> range,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,isAutoTickUnitSelection --> autoTickUnitSelection,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoTickUnitSelection$2 --> autoTickUnitSelection,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoTickUnitSelection$2 --> autoTickUnitSelection,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getStandardTickUnits --> standardTickUnits,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setStandardTickUnits --> standardTickUnits,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getMinorTickCount --> minorTickCount,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setMinorTickCount --> minorTickCount,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,centerRange --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,resizeRange --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,resizeRange$2 --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,zoomRange --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,pan --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,getAutoTickIndex --> autoTickIndex,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,setAutoTickIndex --> autoTickIndex,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> positiveArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> negativeArrowVisible,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> inverted,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> autoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> range,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> autoRangeMinimumSize,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> defaultAutoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> upperMargin,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> lowerMargin,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> fixedAutoRange,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> autoTickUnitSelection,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> standardTickUnits,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> verticalTickLabels,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,equals --> minorTickCount,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,writeObject --> upArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,writeObject --> downArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,writeObject --> leftArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,writeObject --> rightArrow,org.jfree.chart.axis.ValueAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,readObject --> upArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,readObject --> downArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,readObject --> leftArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,readObject --> rightArrow,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,<clinit> --> DEFAULT_RANGE,org.jfree.chart.axis.ValueAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> MINOR,org.jfree.chart.axis.TickType,READ);
Call(METHOD,org.jfree.chart.axis.ValueAxis,<init> --> <init>,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setVerticalTickLabels --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setPositiveArrowVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setNegativeArrowVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpArrow --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpArrow --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setDownArrow --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setDownArrow --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLeftArrow --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLeftArrow --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRightArrow --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRightArrow --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawAxisLine --> getAxisLinePaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawAxisLine --> getAxisLineStroke,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,calculateAnchorPoint --> getTickLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,calculateAnchorPoint --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> <init>$2,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> isAxisLineVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> refreshTicks,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> setTicks,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> isTickLabelsVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickLabelPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getAttributedLabel,org.jfree.chart.axis.LogTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTextAnchor,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getAngle,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getRotationAnchor,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> drawRotatedString$4,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getText,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> isTickMarksVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickType,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> equals,org.jfree.chart.axis.TickType,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> isMinorTickMarksVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getMinorTickMarkOutsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickMarkOutsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getMinorTickMarkInsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickMarkInsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getValue,org.jfree.chart.axis.ValueTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickMarkStroke,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> getTickMarkPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,drawTickMarksAndLabels --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> isVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> getFixedDimension,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> add,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> isTickLabelsVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> <init>,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> refreshTicks,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,reserveSpace --> getLabelEnclosure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelHeight --> getTickLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelHeight --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelHeight --> getAttributedLabel,org.jfree.chart.axis.LogTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelHeight --> getTextBounds,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelHeight --> getText,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelWidth --> getTickLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelWidth --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelWidth --> getAttributedLabel,org.jfree.chart.axis.LogTick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelWidth --> getTextBounds,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,findMaximumTickLabelWidth --> getText,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setInverted --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRange$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoRangeMinimumSize$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setDefaultAutoRange --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setDefaultAutoRange --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerMargin --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperMargin --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setFixedAutoRange --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,getLowerBound --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerBound --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setLowerBound --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,getUpperBound --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperBound --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setUpperBound --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange$2 --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRange$3 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$2 --> expand,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeWithMargins$3 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setRangeAboutValue --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setAutoTickUnitSelection$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setStandardTickUnits --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,setMinorTickCount --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,centerRange --> getCentralValue,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,centerRange --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,centerRange --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,centerRange --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange --> getCentralValue,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange$2 --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,resizeRange2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,zoomRange --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,zoomRange --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,zoomRange --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,pan --> getLength,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,pan --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,pan --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,equals --> equals,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,equals --> equals,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,clone --> clone,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.ValueAxis,<clinit> --> <init>,org.jfree.data.Range,);
EndClass 47
StartClass 48
Class(org.jfree.chart.renderer.xy.XYItemRenderer,Y,Y,Public);
Method(getPlot,org.jfree.chart.plot.XYPlot,Public,N,Y);
Method(setPlot,void,Public,N,Y);
Method(getPassCount,int,Public,N,Y);
Method(findDomainBounds,org.jfree.data.Range,Public,N,Y);
Method(findRangeBounds,org.jfree.data.Range,Public,N,Y);
Method(addChangeListener,void,Public,N,Y);
Method(removeChangeListener,void,Public,N,Y);
Method(getItemVisible,boolean,Public,N,Y);
Method(isSeriesVisible,boolean,Public,N,Y);
Method(getSeriesVisible,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisible,void,Public,N,Y);
Method(setSeriesVisible$2,void,Public,N,Y);
Method(getBaseSeriesVisible,boolean,Public,N,Y);
Method(setBaseSeriesVisible,void,Public,N,Y);
Method(setBaseSeriesVisible$2,void,Public,N,Y);
Method(isSeriesVisibleInLegend,boolean,Public,N,Y);
Method(getSeriesVisibleInLegend,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisibleInLegend,void,Public,N,Y);
Method(setSeriesVisibleInLegend$2,void,Public,N,Y);
Method(getBaseSeriesVisibleInLegend,boolean,Public,N,Y);
Method(setBaseSeriesVisibleInLegend,void,Public,N,Y);
Method(setBaseSeriesVisibleInLegend$2,void,Public,N,Y);
Method(getItemPaint,java.awt.Paint,Public,N,Y);
Method(getSeriesPaint,java.awt.Paint,Public,N,Y);
Method(setSeriesPaint,void,Public,N,Y);
Method(getBasePaint,java.awt.Paint,Public,N,Y);
Method(setBasePaint,void,Public,N,Y);
Method(getItemOutlinePaint,java.awt.Paint,Public,N,Y);
Method(getSeriesOutlinePaint,java.awt.Paint,Public,N,Y);
Method(setSeriesOutlinePaint,void,Public,N,Y);
Method(getBaseOutlinePaint,java.awt.Paint,Public,N,Y);
Method(setBaseOutlinePaint,void,Public,N,Y);
Method(getItemStroke,java.awt.Stroke,Public,N,Y);
Method(getSeriesStroke,java.awt.Stroke,Public,N,Y);
Method(setSeriesStroke,void,Public,N,Y);
Method(getBaseStroke,java.awt.Stroke,Public,N,Y);
Method(setBaseStroke,void,Public,N,Y);
Method(getItemOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(getSeriesOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(setSeriesOutlineStroke,void,Public,N,Y);
Method(getBaseOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(setBaseOutlineStroke,void,Public,N,Y);
Method(getItemShape,java.awt.Shape,Public,N,Y);
Method(getSeriesShape,java.awt.Shape,Public,N,Y);
Method(setSeriesShape,void,Public,N,Y);
Method(getBaseShape,java.awt.Shape,Public,N,Y);
Method(setBaseShape,void,Public,N,Y);
Method(getLegendItem,org.jfree.chart.LegendItem,Public,N,Y);
Method(getLegendItemLabelGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Public,N,Y);
Method(setLegendItemLabelGenerator,void,Public,N,Y);
Method(getToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,Y);
Method(getSeriesToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,Y);
Method(setSeriesToolTipGenerator,void,Public,N,Y);
Method(getBaseToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,Y);
Method(setBaseToolTipGenerator,void,Public,N,Y);
Method(getURLGenerator,org.jfree.chart.urls.XYURLGenerator,Public,N,Y);
Method(setURLGenerator,void,Public,N,Y);
Method(isItemLabelVisible,boolean,Public,N,Y);
Method(isSeriesItemLabelsVisible,boolean,Public,N,Y);
Method(setSeriesItemLabelsVisible,void,Public,N,Y);
Method(setSeriesItemLabelsVisible$2,void,Public,N,Y);
Method(setSeriesItemLabelsVisible$3,void,Public,N,Y);
Method(getBaseItemLabelsVisible,java.lang.Boolean,Public,N,Y);
Method(setBaseItemLabelsVisible,void,Public,N,Y);
Method(setBaseItemLabelsVisible$2,void,Public,N,Y);
Method(setBaseItemLabelsVisible$3,void,Public,N,Y);
Method(getItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,Y);
Method(getSeriesItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,Y);
Method(setSeriesItemLabelGenerator,void,Public,N,Y);
Method(getBaseItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,Y);
Method(setBaseItemLabelGenerator,void,Public,N,Y);
Method(getItemLabelFont,java.awt.Font,Public,N,Y);
Method(getSeriesItemLabelFont,java.awt.Font,Public,N,Y);
Method(setSeriesItemLabelFont,void,Public,N,Y);
Method(getBaseItemLabelFont,java.awt.Font,Public,N,Y);
Method(setBaseItemLabelFont,void,Public,N,Y);
Method(getItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(getSeriesItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(setSeriesItemLabelPaint,void,Public,N,Y);
Method(getBaseItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(setBaseItemLabelPaint,void,Public,N,Y);
Method(getPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(getSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setSeriesPositiveItemLabelPosition,void,Public,N,Y);
Method(setSeriesPositiveItemLabelPosition$2,void,Public,N,Y);
Method(getBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setBasePositiveItemLabelPosition,void,Public,N,Y);
Method(setBasePositiveItemLabelPosition$2,void,Public,N,Y);
Method(getNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(getSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setSeriesNegativeItemLabelPosition,void,Public,N,Y);
Method(setSeriesNegativeItemLabelPosition$2,void,Public,N,Y);
Method(getBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setBaseNegativeItemLabelPosition,void,Public,N,Y);
Method(setBaseNegativeItemLabelPosition$2,void,Public,N,Y);
Method(addAnnotation,void,Public,N,Y);
Method(addAnnotation$2,void,Public,N,Y);
Method(removeAnnotation,boolean,Public,N,Y);
Method(removeAnnotations,void,Public,N,Y);
Method(drawAnnotations,void,Public,N,Y);
Method(initialise,org.jfree.chart.renderer.xy.XYItemRendererState,Public,N,Y);
Method(drawItem,void,Public,N,Y);
Method(fillDomainGridBand,void,Public,N,Y);
Method(fillRangeGridBand,void,Public,N,Y);
Method(drawDomainGridLine,void,Public,N,Y);
Method(drawRangeLine,void,Public,N,Y);
Method(drawDomainMarker,void,Public,N,Y);
Method(drawRangeMarker,void,Public,N,Y);
Method(getSeriesVisible$2,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisible$3,void,Public,N,Y);
Method(setSeriesVisible$4,void,Public,N,Y);
Method(getSeriesVisibleInLegend$2,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisibleInLegend$3,void,Public,N,Y);
Method(setSeriesVisibleInLegend$4,void,Public,N,Y);
Method(setPaint,void,Public,N,Y);
Method(setOutlinePaint,void,Public,N,Y);
Method(setStroke,void,Public,N,Y);
Method(setOutlineStroke,void,Public,N,Y);
Method(setShape,void,Public,N,Y);
Method(setItemLabelsVisible,void,Public,N,Y);
Method(setItemLabelsVisible$2,void,Public,N,Y);
Method(setItemLabelsVisible$3,void,Public,N,Y);
Method(setItemLabelGenerator,void,Public,N,Y);
Method(setToolTipGenerator,void,Public,N,Y);
Method(getItemLabelFont$2,java.awt.Font,Public,N,Y);
Method(setItemLabelFont,void,Public,N,Y);
Method(getItemLabelPaint$2,java.awt.Paint,Public,N,Y);
Method(setItemLabelPaint,void,Public,N,Y);
Method(getPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setPositiveItemLabelPosition,void,Public,N,Y);
Method(setPositiveItemLabelPosition$2,void,Public,N,Y);
Method(getNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setNegativeItemLabelPosition,void,Public,N,Y);
Method(setNegativeItemLabelPosition$2,void,Public,N,Y);
Parameter(setPlot,org.jfree.chart.plot.XYPlot,);
Parameter(findDomainBounds,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds,org.jfree.data.xy.XYDataset,);
Parameter(addChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(getItemVisible,int,);
Parameter(getItemVisible,int,);
Parameter(isSeriesVisible,int,);
Parameter(getSeriesVisible,int,);
Parameter(setSeriesVisible,int,);
Parameter(setSeriesVisible,java.lang.Boolean,);
Parameter(setSeriesVisible$2,int,);
Parameter(setSeriesVisible$2,java.lang.Boolean,);
Parameter(setSeriesVisible$2,boolean,);
Parameter(setBaseSeriesVisible,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(isSeriesVisibleInLegend,int,);
Parameter(getSeriesVisibleInLegend,int,);
Parameter(setSeriesVisibleInLegend,int,);
Parameter(setSeriesVisibleInLegend,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,int,);
Parameter(setSeriesVisibleInLegend$2,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,boolean,);
Parameter(setBaseSeriesVisibleInLegend,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(getItemPaint,int,);
Parameter(getItemPaint,int,);
Parameter(getSeriesPaint,int,);
Parameter(setSeriesPaint,int,);
Parameter(setSeriesPaint,java.awt.Paint,);
Parameter(setBasePaint,java.awt.Paint,);
Parameter(getItemOutlinePaint,int,);
Parameter(getItemOutlinePaint,int,);
Parameter(getSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,java.awt.Paint,);
Parameter(setBaseOutlinePaint,java.awt.Paint,);
Parameter(getItemStroke,int,);
Parameter(getItemStroke,int,);
Parameter(getSeriesStroke,int,);
Parameter(setSeriesStroke,int,);
Parameter(setSeriesStroke,java.awt.Stroke,);
Parameter(setBaseStroke,java.awt.Stroke,);
Parameter(getItemOutlineStroke,int,);
Parameter(getItemOutlineStroke,int,);
Parameter(getSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,java.awt.Stroke,);
Parameter(setBaseOutlineStroke,java.awt.Stroke,);
Parameter(getItemShape,int,);
Parameter(getItemShape,int,);
Parameter(getSeriesShape,int,);
Parameter(setSeriesShape,int,);
Parameter(setSeriesShape,java.awt.Shape,);
Parameter(setBaseShape,java.awt.Shape,);
Parameter(getLegendItem,int,);
Parameter(getLegendItem,int,);
Parameter(setLegendItemLabelGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,);
Parameter(getToolTipGenerator,int,);
Parameter(getToolTipGenerator,int,);
Parameter(getSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(setBaseToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(setURLGenerator,org.jfree.chart.urls.XYURLGenerator,);
Parameter(isItemLabelVisible,int,);
Parameter(isItemLabelVisible,int,);
Parameter(isSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,boolean,);
Parameter(setSeriesItemLabelsVisible$2,int,);
Parameter(setSeriesItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,int,);
Parameter(setSeriesItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,boolean,);
Parameter(setBaseItemLabelsVisible,boolean,);
Parameter(setBaseItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,boolean,);
Parameter(getItemLabelGenerator,int,);
Parameter(getItemLabelGenerator,int,);
Parameter(getSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(setBaseItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(getItemLabelFont,int,);
Parameter(getItemLabelFont,int,);
Parameter(getSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,java.awt.Font,);
Parameter(setBaseItemLabelFont,java.awt.Font,);
Parameter(getItemLabelPaint,int,);
Parameter(getItemLabelPaint,int,);
Parameter(getSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,java.awt.Paint,);
Parameter(setBaseItemLabelPaint,java.awt.Paint,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(getSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,int,);
Parameter(setSeriesPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,boolean,);
Parameter(setBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,boolean,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(getSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,int,);
Parameter(setSeriesNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,boolean,);
Parameter(setBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,boolean,);
Parameter(addAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,org.jfree.ui.Layer,);
Parameter(removeAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(drawAnnotations,java.awt.Graphics2D,);
Parameter(drawAnnotations,java.awt.geom.Rectangle2D,);
Parameter(drawAnnotations,org.jfree.chart.axis.ValueAxis,);
Parameter(drawAnnotations,org.jfree.chart.axis.ValueAxis,);
Parameter(drawAnnotations,org.jfree.ui.Layer,);
Parameter(drawAnnotations,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(initialise,java.awt.Graphics2D,);
Parameter(initialise,java.awt.geom.Rectangle2D,);
Parameter(initialise,org.jfree.chart.plot.XYPlot,);
Parameter(initialise,org.jfree.data.xy.XYDataset,);
Parameter(initialise,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(drawItem,java.awt.Graphics2D,);
Parameter(drawItem,org.jfree.chart.renderer.xy.XYItemRendererState,);
Parameter(drawItem,java.awt.geom.Rectangle2D,);
Parameter(drawItem,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(drawItem,org.jfree.chart.plot.XYPlot,);
Parameter(drawItem,org.jfree.chart.axis.ValueAxis,);
Parameter(drawItem,org.jfree.chart.axis.ValueAxis,);
Parameter(drawItem,org.jfree.data.xy.XYDataset,);
Parameter(drawItem,int,);
Parameter(drawItem,int,);
Parameter(drawItem,org.jfree.chart.plot.CrosshairState,);
Parameter(drawItem,int,);
Parameter(fillDomainGridBand,java.awt.Graphics2D,);
Parameter(fillDomainGridBand,org.jfree.chart.plot.XYPlot,);
Parameter(fillDomainGridBand,org.jfree.chart.axis.ValueAxis,);
Parameter(fillDomainGridBand,java.awt.geom.Rectangle2D,);
Parameter(fillDomainGridBand,double,);
Parameter(fillDomainGridBand,double,);
Parameter(fillRangeGridBand,java.awt.Graphics2D,);
Parameter(fillRangeGridBand,org.jfree.chart.plot.XYPlot,);
Parameter(fillRangeGridBand,org.jfree.chart.axis.ValueAxis,);
Parameter(fillRangeGridBand,java.awt.geom.Rectangle2D,);
Parameter(fillRangeGridBand,double,);
Parameter(fillRangeGridBand,double,);
Parameter(drawDomainGridLine,java.awt.Graphics2D,);
Parameter(drawDomainGridLine,org.jfree.chart.plot.XYPlot,);
Parameter(drawDomainGridLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainGridLine,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridLine,double,);
Parameter(drawRangeLine,java.awt.Graphics2D,);
Parameter(drawRangeLine,org.jfree.chart.plot.XYPlot,);
Parameter(drawRangeLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeLine,java.awt.geom.Rectangle2D,);
Parameter(drawRangeLine,double,);
Parameter(drawRangeLine,java.awt.Paint,);
Parameter(drawRangeLine,java.awt.Stroke,);
Parameter(drawDomainMarker,java.awt.Graphics2D,);
Parameter(drawDomainMarker,org.jfree.chart.plot.XYPlot,);
Parameter(drawDomainMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainMarker,org.jfree.chart.plot.Marker,);
Parameter(drawDomainMarker,java.awt.geom.Rectangle2D,);
Parameter(drawRangeMarker,java.awt.Graphics2D,);
Parameter(drawRangeMarker,org.jfree.chart.plot.XYPlot,);
Parameter(drawRangeMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(drawRangeMarker,java.awt.geom.Rectangle2D,);
Parameter(setSeriesVisible$3,java.lang.Boolean,);
Parameter(setSeriesVisible$4,java.lang.Boolean,);
Parameter(setSeriesVisible$4,boolean,);
Parameter(setSeriesVisibleInLegend$3,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,boolean,);
Parameter(setPaint,java.awt.Paint,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setStroke,java.awt.Stroke,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setShape,java.awt.Shape,);
Parameter(setItemLabelsVisible,boolean,);
Parameter(setItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,boolean,);
Parameter(setItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(setToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(setItemLabelFont,java.awt.Font,);
Parameter(setItemLabelPaint,java.awt.Paint,);
Parameter(setPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,boolean,);
Parameter(setNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,boolean,);
Realization(org.jfree.chart.LegendItemSource);
EndClass 48
StartClass 49
Class(org.jfree.chart.axis.AxisLocation,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,Public,Y,Y,);
Attribute(TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,Public,Y,Y,);
Attribute(BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,Public,Y,Y,);
Attribute(BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(getOpposite,org.jfree.chart.axis.AxisLocation,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(getOpposite$2,org.jfree.chart.axis.AxisLocation,Public,Y,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Parameter(getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Composition(org.jfree.chart.axis.AxisLocation);
Call(METHOD,org.jfree.chart.axis.AxisLocation,getOpposite --> getOpposite$2,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.axis.AxisLocation,equals --> toString,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.axis.AxisLocation,readResolve --> equals,org.jfree.chart.axis.AxisLocation,);
Call(METHOD,org.jfree.chart.axis.AxisLocation,<clinit> --> <init>,org.jfree.chart.axis.AxisLocation,);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,<init> --> name,org.jfree.chart.axis.AxisLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,toString --> name,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,equals --> name,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,hashCode --> name,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,getOpposite$2 --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,getOpposite$2 --> BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,getOpposite$2 --> TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,getOpposite$2 --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,readResolve --> TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,readResolve --> BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,readResolve --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,readResolve --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,<clinit> --> TOP_OR_LEFT,org.jfree.chart.axis.AxisLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,<clinit> --> TOP_OR_RIGHT,org.jfree.chart.axis.AxisLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,<clinit> --> BOTTOM_OR_LEFT,org.jfree.chart.axis.AxisLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLocation,<clinit> --> BOTTOM_OR_RIGHT,org.jfree.chart.axis.AxisLocation,WRITE);
Call(METHOD,org.jfree.chart.axis.AxisLocation,getOpposite$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 49
StartClass 50
Class(org.jfree.chart.plot.Marker,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Attribute(stroke,java.awt.Stroke,Private,N,N,);
Attribute(outlinePaint,java.awt.Paint,Private,N,N,);
Attribute(outlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(alpha,float,Private,N,N,);
Attribute(label,java.lang.String,Private,N,N,);
Attribute(labelFont,java.awt.Font,Private,N,N,);
Attribute(labelPaint,java.awt.Paint,Private,N,N,);
Attribute(labelBackgroundColor,java.awt.Color,Private,N,N,);
Attribute(labelAnchor,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(labelTextAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(labelOffset,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(labelOffsetType,org.jfree.ui.LengthAdjustmentType,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(<init>$2,void,Protected,N,N);
Method(<init>$3,void,Protected,N,N);
Method(getPaint,java.awt.Paint,Public,N,N);
Method(setPaint,void,Public,N,N);
Method(getStroke,java.awt.Stroke,Public,N,N);
Method(setStroke,void,Public,N,N);
Method(getOutlinePaint,java.awt.Paint,Public,N,N);
Method(setOutlinePaint,void,Public,N,N);
Method(getOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setOutlineStroke,void,Public,N,N);
Method(getAlpha,float,Public,N,N);
Method(setAlpha,void,Public,N,N);
Method(getLabel,java.lang.String,Public,N,N);
Method(setLabel,void,Public,N,N);
Method(getLabelFont,java.awt.Font,Public,N,N);
Method(setLabelFont,void,Public,N,N);
Method(getLabelPaint,java.awt.Paint,Public,N,N);
Method(setLabelPaint,void,Public,N,N);
Method(getLabelBackgroundColor,java.awt.Color,Public,N,N);
Method(setLabelBackgroundColor,void,Public,N,N);
Method(getLabelAnchor,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setLabelAnchor,void,Public,N,N);
Method(getLabelOffset,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setLabelOffset,void,Public,N,N);
Method(getLabelOffsetType,org.jfree.ui.LengthAdjustmentType,Public,N,N);
Method(setLabelOffsetType,void,Public,N,N);
Method(getLabelTextAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(setLabelTextAnchor,void,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(notifyListeners,void,Public,N,N);
Method(getListeners,java.util.EventListener[],Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,float,);
Parameter(setPaint,java.awt.Paint,);
Parameter(setStroke,java.awt.Stroke,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setAlpha,float,);
Parameter(setLabel,java.lang.String,);
Parameter(setLabelFont,java.awt.Font,);
Parameter(setLabelPaint,java.awt.Paint,);
Parameter(setLabelBackgroundColor,java.awt.Color,);
Parameter(setLabelAnchor,org.jfree.ui.RectangleAnchor,);
Parameter(setLabelOffset,org.jfree.ui.RectangleInsets,);
Parameter(setLabelOffsetType,org.jfree.ui.LengthAdjustmentType,);
Parameter(setLabelTextAnchor,org.jfree.ui.TextAnchor,);
Parameter(addChangeListener,org.jfree.chart.event.MarkerChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.MarkerChangeListener,);
Parameter(notifyListeners,org.jfree.chart.event.MarkerChangeEvent,);
Parameter(getListeners,java.lang.Class,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.jfree.chart.plot.CategoryMarker);
SubClass(org.jfree.chart.plot.ValueMarker);
SubClass(org.jfree.chart.plot.IntervalMarker);
Call(METHOD,org.jfree.chart.plot.Marker,<init> --> <init>$2,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,<init>$2 --> <init>$3,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setPaint --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setStroke --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setOutlinePaint --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setOutlineStroke --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setAlpha --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabel --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelFont --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelPaint --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelAnchor --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffset --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffsetType --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelTextAnchor --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> label,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> paint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> stroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> outlinePaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> outlineStroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> alpha,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelFont,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelPaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelBackgroundColor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelAnchor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelOffset,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelOffsetType,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> labelTextAnchor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,<init>$3 --> listenerList,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getPaint --> paint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setPaint --> paint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getStroke --> stroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setStroke --> stroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getOutlinePaint --> outlinePaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setOutlinePaint --> outlinePaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getOutlineStroke --> outlineStroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setOutlineStroke --> outlineStroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getAlpha --> alpha,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setAlpha --> alpha,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabel --> label,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabel --> label,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelFont --> labelFont,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelFont --> labelFont,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelPaint --> labelPaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelPaint --> labelPaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelBackgroundColor --> labelBackgroundColor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelBackgroundColor --> labelBackgroundColor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelAnchor --> labelAnchor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelAnchor --> labelAnchor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelOffset --> labelOffset,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelOffset --> labelOffset,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelOffsetType --> labelOffsetType,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelOffsetType --> labelOffsetType,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getLabelTextAnchor --> labelTextAnchor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,setLabelTextAnchor --> labelTextAnchor,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,addChangeListener --> listenerList,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,removeChangeListener --> listenerList,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,notifyListeners --> listenerList,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,getListeners --> listenerList,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> paint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> stroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> outlinePaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> outlineStroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> alpha,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> label,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelFont,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelPaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelBackgroundColor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelAnchor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelTextAnchor,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelOffset,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,equals --> labelOffsetType,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,writeObject --> paint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,writeObject --> stroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,writeObject --> outlinePaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,writeObject --> outlineStroke,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,writeObject --> labelPaint,org.jfree.chart.plot.Marker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> paint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> stroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> outlinePaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> outlineStroke,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> labelPaint,org.jfree.chart.plot.Marker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.Marker,readObject --> listenerList,org.jfree.chart.plot.Marker,WRITE);
Call(METHOD,org.jfree.chart.plot.Marker,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setPaint --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setStroke --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setOutlinePaint --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setOutlineStroke --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setAlpha --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabel --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelFont --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelPaint --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelBackgroundColor --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelAnchor --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelAnchor --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffset --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffset --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffsetType --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelOffsetType --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelTextAnchor --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.Marker,setLabelTextAnchor --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.Marker,notifyListeners --> markerChanged,org.jfree.chart.event.MarkerChangeListener,);
EndClass 50
StartClass 51
Class(org.jfree.chart.annotations.XYAnnotation,Y,Y,Public);
Method(draw,void,Public,N,Y);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,org.jfree.chart.plot.XYPlot,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,org.jfree.chart.axis.ValueAxis,);
Parameter(draw,org.jfree.chart.axis.ValueAxis,);
Parameter(draw,int,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Realization(org.jfree.chart.annotations.Annotation);
EndClass 51
StartClass 52
Class(org.jfree.chart.plot.CrosshairState,N,N,Public);
Attribute(calculateDistanceInDataSpace,boolean,Private,N,N,);
Attribute(anchorX,double,Private,N,N,);
Attribute(anchorY,double,Private,N,N,);
Attribute(anchor,java.awt.geom.Point2D,Private,N,N,);
Attribute(crosshairX,double,Private,N,N,);
Attribute(crosshairY,double,Private,N,N,);
Attribute(datasetIndex,int,Private,N,N,);
Attribute(domainAxisIndex,int,Private,N,N,);
Attribute(rangeAxisIndex,int,Private,N,N,);
Attribute(distance,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getCrosshairDistance,double,Public,N,N);
Method(setCrosshairDistance,void,Public,N,N);
Method(updateCrosshairPoint,void,Public,N,N);
Method(updateCrosshairPoint$2,void,Public,N,N);
Method(updateCrosshairX,void,Public,N,N);
Method(updateCrosshairX$2,void,Public,N,N);
Method(updateCrosshairY,void,Public,N,N);
Method(updateCrosshairY$2,void,Public,N,N);
Method(getAnchor,java.awt.geom.Point2D,Public,N,N);
Method(setAnchor,void,Public,N,N);
Method(getAnchorX,double,Public,N,N);
Method(setAnchorX,void,Public,N,N);
Method(getAnchorY,double,Public,N,N);
Method(setAnchorY,void,Public,N,N);
Method(getCrosshairX,double,Public,N,N);
Method(setCrosshairX,void,Public,N,N);
Method(getCrosshairY,double,Public,N,N);
Method(setCrosshairY,void,Public,N,N);
Method(getDatasetIndex,int,Public,N,N);
Method(setDatasetIndex,void,Public,N,N);
Method(getDomainAxisIndex,int,Public,N,N);
Method(getRangeAxisIndex,int,Public,N,N);
Parameter(<init>$2,boolean,);
Parameter(setCrosshairDistance,double,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(updateCrosshairPoint$2,double,);
Parameter(updateCrosshairPoint$2,double,);
Parameter(updateCrosshairPoint$2,int,);
Parameter(updateCrosshairPoint$2,int,);
Parameter(updateCrosshairPoint$2,double,);
Parameter(updateCrosshairPoint$2,double,);
Parameter(updateCrosshairPoint$2,org.jfree.chart.plot.PlotOrientation,);
Parameter(updateCrosshairX,double,);
Parameter(updateCrosshairX$2,double,);
Parameter(updateCrosshairX$2,int,);
Parameter(updateCrosshairY,double,);
Parameter(updateCrosshairY$2,double,);
Parameter(updateCrosshairY$2,int,);
Parameter(setAnchor,java.awt.geom.Point2D,);
Parameter(setAnchorX,double,);
Parameter(setAnchorY,double,);
Parameter(setCrosshairX,double,);
Parameter(setCrosshairY,double,);
Parameter(setDatasetIndex,int,);
SubClass(org.jfree.chart.plot.CategoryCrosshairState);
Call(METHOD,org.jfree.chart.plot.CrosshairState,<init> --> <init>$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint --> updateCrosshairPoint$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CrosshairState,updateCrosshairX --> updateCrosshairX$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CrosshairState,updateCrosshairY --> updateCrosshairY$2,org.jfree.chart.plot.CrosshairState,);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,<init>$2 --> calculateDistanceInDataSpace,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getCrosshairDistance --> distance,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setCrosshairDistance --> distance,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> anchor,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> calculateDistanceInDataSpace,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> anchorX,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> anchorY,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> distance,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> crosshairX,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> crosshairY,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> domainAxisIndex,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> rangeAxisIndex,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> distance,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairX$2 --> anchorX,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairX$2 --> distance,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairX$2 --> crosshairX,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairX$2 --> domainAxisIndex,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairX$2 --> distance,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairY$2 --> anchorY,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairY$2 --> distance,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairY$2 --> crosshairY,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairY$2 --> rangeAxisIndex,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairY$2 --> distance,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getAnchor --> anchor,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setAnchor --> anchor,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getAnchorX --> anchorX,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setAnchorX --> anchorX,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getAnchorY --> anchorY,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setAnchorY --> anchorY,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getCrosshairX --> crosshairX,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setCrosshairX --> crosshairX,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getCrosshairY --> crosshairY,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setCrosshairY --> crosshairY,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getDatasetIndex --> datasetIndex,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,setDatasetIndex --> datasetIndex,org.jfree.chart.plot.CrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getDomainAxisIndex --> domainAxisIndex,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,getRangeAxisIndex --> rangeAxisIndex,org.jfree.chart.plot.CrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CrosshairState,updateCrosshairPoint$2 --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
EndClass 52
StartClass 53
Class(org.jfree.chart.event.AnnotationChangeEvent,N,N,Public);
Attribute(annotation,org.jfree.chart.annotations.Annotation,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getAnnotation,org.jfree.chart.annotations.Annotation,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,org.jfree.chart.annotations.Annotation,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Composition(org.jfree.chart.annotations.Annotation);
Call(ATTRIBUTE,org.jfree.chart.event.AnnotationChangeEvent,<init> --> annotation,org.jfree.chart.event.AnnotationChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.AnnotationChangeEvent,getAnnotation --> annotation,org.jfree.chart.event.AnnotationChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.AnnotationChangeEvent,<init> --> <init>,org.jfree.chart.event.ChartChangeEvent,);
Call(METHOD,org.jfree.chart.event.AnnotationChangeEvent,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 53
StartClass 54
Class(org.jfree.data.general.DatasetChangeEvent,N,N,Public);
Attribute(dataset,org.jfree.data.general.Dataset,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDataset,org.jfree.data.general.Dataset,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,org.jfree.data.general.Dataset,);
Composition(org.jfree.data.general.Dataset);
Call(ATTRIBUTE,org.jfree.data.general.DatasetChangeEvent,<init> --> dataset,org.jfree.data.general.DatasetChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.DatasetChangeEvent,getDataset --> dataset,org.jfree.data.general.DatasetChangeEvent,READ);
EndClass 54
StartClass 55
Class(org.jfree.chart.event.RendererChangeEvent,N,N,Public);
Attribute(renderer,java.lang.Object,Private,N,N,);
Attribute(seriesVisibilityChanged,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getRenderer,java.lang.Object,Public,N,N);
Method(getSeriesVisibilityChanged,boolean,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>$2,java.lang.Object,);
Parameter(<init>$2,boolean,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Call(METHOD,org.jfree.chart.event.RendererChangeEvent,<init> --> <init>$2,org.jfree.chart.event.RendererChangeEvent,);
Call(ATTRIBUTE,org.jfree.chart.event.RendererChangeEvent,<init>$2 --> renderer,org.jfree.chart.event.RendererChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.RendererChangeEvent,<init>$2 --> seriesVisibilityChanged,org.jfree.chart.event.RendererChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.RendererChangeEvent,getRenderer --> renderer,org.jfree.chart.event.RendererChangeEvent,READ);
Call(ATTRIBUTE,org.jfree.chart.event.RendererChangeEvent,getSeriesVisibilityChanged --> seriesVisibilityChanged,org.jfree.chart.event.RendererChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.RendererChangeEvent,<init>$2 --> <init>,org.jfree.chart.event.ChartChangeEvent,);
EndClass 55
StartClass 56
Class(org.jfree.chart.renderer.xy.AbstractXYItemRenderer,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(plot,org.jfree.chart.plot.XYPlot,Private,N,N,);
Attribute(itemLabelGeneratorMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.XYItemLabelGenerator);
Attribute(baseItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Private,N,N,);
Attribute(toolTipGeneratorMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.XYToolTipGenerator);
Attribute(baseToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Private,N,N,);
Attribute(urlGenerator,org.jfree.chart.urls.XYURLGenerator,Private,N,N,);
Attribute(backgroundAnnotations,java.util.List,Private,N,N,);
Attribute(foregroundAnnotations,java.util.List,Private,N,N,);
Attribute(legendItemLabelGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Private,N,N,);
Attribute(legendItemToolTipGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Private,N,N,);
Attribute(legendItemURLGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Private,N,N,);
Attribute(itemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Private,N,N,);
Attribute(toolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(getPassCount,int,Public,N,N);
Method(getPlot,org.jfree.chart.plot.XYPlot,Public,N,N);
Method(setPlot,void,Public,N,N);
Method(initialise,org.jfree.chart.renderer.xy.XYItemRendererState,Public,N,N);
Method(getItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,N);
Method(getSeriesItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,N);
Method(setSeriesItemLabelGenerator,void,Public,N,N);
Method(getBaseItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,N);
Method(setBaseItemLabelGenerator,void,Public,N,N);
Method(getToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,N);
Method(getSeriesToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,N);
Method(setSeriesToolTipGenerator,void,Public,N,N);
Method(getBaseToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,Public,N,N);
Method(setBaseToolTipGenerator,void,Public,N,N);
Method(getURLGenerator,org.jfree.chart.urls.XYURLGenerator,Public,N,N);
Method(setURLGenerator,void,Public,N,N);
Method(addAnnotation,void,Public,N,N);
Method(addAnnotation$2,void,Public,N,N);
Method(removeAnnotation,boolean,Public,N,N);
Method(removeAnnotations,void,Public,N,N);
Method(annotationChanged,void,Public,N,N);
Method(getAnnotations,java.util.Collection,Public,N,N);
Method(getLegendItemLabelGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Public,N,N);
Method(setLegendItemLabelGenerator,void,Public,N,N);
Method(getLegendItemToolTipGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Public,N,N);
Method(setLegendItemToolTipGenerator,void,Public,N,N);
Method(getLegendItemURLGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,Public,N,N);
Method(setLegendItemURLGenerator,void,Public,N,N);
Method(findDomainBounds,org.jfree.data.Range,Public,N,N);
Method(findDomainBounds$2,org.jfree.data.Range,Protected,N,N);
Method(findRangeBounds,org.jfree.data.Range,Public,N,N);
Method(findRangeBounds$2,org.jfree.data.Range,Protected,N,N);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(getLegendItem,org.jfree.chart.LegendItem,Public,N,N);
Method(fillDomainGridBand,void,Public,N,N);
Method(fillRangeGridBand,void,Public,N,N);
Method(drawDomainGridLine,void,Public,N,N);
Method(drawDomainLine,void,Public,N,N);
Method(drawRangeLine,void,Public,N,N);
Method(drawDomainMarker,void,Public,N,N);
Method(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Point2D,Protected,N,N);
Method(drawRangeMarker,void,Public,N,N);
Method(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Point2D,Private,N,N);
Method(clone,java.lang.Object,Protected,N,N);
Method(equals,boolean,Public,N,N);
Method(getDrawingSupplier,org.jfree.chart.plot.DrawingSupplier,Public,N,N);
Method(updateCrosshairValues,void,Protected,N,N);
Method(drawItemLabel,void,Protected,N,N);
Method(drawAnnotations,void,Public,N,N);
Method(addEntity,void,Protected,N,N);
Method(isPointInRect,boolean,Public,Y,N);
Method(moveTo,void,Protected,Y,N);
Method(lineTo,void,Protected,Y,N);
Method(getItemLabelGenerator$2,org.jfree.chart.labels.XYItemLabelGenerator,Public,N,N);
Method(setItemLabelGenerator,void,Public,N,N);
Method(getToolTipGenerator$2,org.jfree.chart.labels.XYToolTipGenerator,Public,N,N);
Method(setToolTipGenerator,void,Public,N,N);
Method(updateCrosshairValues$2,void,Protected,N,N);
Parameter(setPlot,org.jfree.chart.plot.XYPlot,);
Parameter(initialise,java.awt.Graphics2D,);
Parameter(initialise,java.awt.geom.Rectangle2D,);
Parameter(initialise,org.jfree.chart.plot.XYPlot,);
Parameter(initialise,org.jfree.data.xy.XYDataset,);
Parameter(initialise,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getItemLabelGenerator,int,);
Parameter(getItemLabelGenerator,int,);
Parameter(getSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(setBaseItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(getToolTipGenerator,int,);
Parameter(getToolTipGenerator,int,);
Parameter(getSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(setBaseToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(setURLGenerator,org.jfree.chart.urls.XYURLGenerator,);
Parameter(addAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,org.jfree.chart.annotations.XYAnnotation,);
Parameter(addAnnotation$2,org.jfree.ui.Layer,);
Parameter(removeAnnotation,org.jfree.chart.annotations.XYAnnotation,);
Parameter(annotationChanged,org.jfree.chart.event.AnnotationChangeEvent,);
Parameter(setLegendItemLabelGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,);
Parameter(setLegendItemToolTipGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,);
Parameter(setLegendItemURLGenerator,org.jfree.chart.labels.XYSeriesLabelGenerator,);
Parameter(findDomainBounds,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds$2,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds$2,boolean,);
Parameter(findRangeBounds,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds$2,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds$2,boolean,);
Parameter(getLegendItem,int,);
Parameter(getLegendItem,int,);
Parameter(fillDomainGridBand,java.awt.Graphics2D,);
Parameter(fillDomainGridBand,org.jfree.chart.plot.XYPlot,);
Parameter(fillDomainGridBand,org.jfree.chart.axis.ValueAxis,);
Parameter(fillDomainGridBand,java.awt.geom.Rectangle2D,);
Parameter(fillDomainGridBand,double,);
Parameter(fillDomainGridBand,double,);
Parameter(fillRangeGridBand,java.awt.Graphics2D,);
Parameter(fillRangeGridBand,org.jfree.chart.plot.XYPlot,);
Parameter(fillRangeGridBand,org.jfree.chart.axis.ValueAxis,);
Parameter(fillRangeGridBand,java.awt.geom.Rectangle2D,);
Parameter(fillRangeGridBand,double,);
Parameter(fillRangeGridBand,double,);
Parameter(drawDomainGridLine,java.awt.Graphics2D,);
Parameter(drawDomainGridLine,org.jfree.chart.plot.XYPlot,);
Parameter(drawDomainGridLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainGridLine,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridLine,double,);
Parameter(drawDomainLine,java.awt.Graphics2D,);
Parameter(drawDomainLine,org.jfree.chart.plot.XYPlot,);
Parameter(drawDomainLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainLine,java.awt.geom.Rectangle2D,);
Parameter(drawDomainLine,double,);
Parameter(drawDomainLine,java.awt.Paint,);
Parameter(drawDomainLine,java.awt.Stroke,);
Parameter(drawRangeLine,java.awt.Graphics2D,);
Parameter(drawRangeLine,org.jfree.chart.plot.XYPlot,);
Parameter(drawRangeLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeLine,java.awt.geom.Rectangle2D,);
Parameter(drawRangeLine,double,);
Parameter(drawRangeLine,java.awt.Paint,);
Parameter(drawRangeLine,java.awt.Stroke,);
Parameter(drawDomainMarker,java.awt.Graphics2D,);
Parameter(drawDomainMarker,org.jfree.chart.plot.XYPlot,);
Parameter(drawDomainMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawDomainMarker,org.jfree.chart.plot.Marker,);
Parameter(drawDomainMarker,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.Graphics2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.RectangleInsets,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.LengthAdjustmentType,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.RectangleAnchor,);
Parameter(drawRangeMarker,java.awt.Graphics2D,);
Parameter(drawRangeMarker,org.jfree.chart.plot.XYPlot,);
Parameter(drawRangeMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(drawRangeMarker,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.Graphics2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.RectangleInsets,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.LengthAdjustmentType,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.RectangleAnchor,);
Parameter(equals,java.lang.Object,);
Parameter(updateCrosshairValues,org.jfree.chart.plot.CrosshairState,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,int,);
Parameter(updateCrosshairValues,int,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawItemLabel,java.awt.Graphics2D,);
Parameter(drawItemLabel,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawItemLabel,org.jfree.data.xy.XYDataset,);
Parameter(drawItemLabel,int,);
Parameter(drawItemLabel,int,);
Parameter(drawItemLabel,double,);
Parameter(drawItemLabel,double,);
Parameter(drawItemLabel,boolean,);
Parameter(drawAnnotations,java.awt.Graphics2D,);
Parameter(drawAnnotations,java.awt.geom.Rectangle2D,);
Parameter(drawAnnotations,org.jfree.chart.axis.ValueAxis,);
Parameter(drawAnnotations,org.jfree.chart.axis.ValueAxis,);
Parameter(drawAnnotations,org.jfree.ui.Layer,);
Parameter(drawAnnotations,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(addEntity,org.jfree.chart.entity.EntityCollection,);
Parameter(addEntity,java.awt.Shape,);
Parameter(addEntity,org.jfree.data.xy.XYDataset,);
Parameter(addEntity,int,);
Parameter(addEntity,int,);
Parameter(addEntity,double,);
Parameter(addEntity,double,);
Parameter(isPointInRect,java.awt.geom.Rectangle2D,);
Parameter(isPointInRect,double,);
Parameter(isPointInRect,double,);
Parameter(moveTo,java.awt.geom.GeneralPath,);
Parameter(moveTo,double,);
Parameter(moveTo,double,);
Parameter(lineTo,java.awt.geom.GeneralPath,);
Parameter(lineTo,double,);
Parameter(lineTo,double,);
Parameter(setItemLabelGenerator,org.jfree.chart.labels.XYItemLabelGenerator,);
Parameter(setToolTipGenerator,org.jfree.chart.labels.XYToolTipGenerator,);
Parameter(updateCrosshairValues$2,org.jfree.chart.plot.CrosshairState,);
Parameter(updateCrosshairValues$2,double,);
Parameter(updateCrosshairValues$2,double,);
Parameter(updateCrosshairValues$2,double,);
Parameter(updateCrosshairValues$2,double,);
Parameter(updateCrosshairValues$2,org.jfree.chart.plot.PlotOrientation,);
SuperClass(org.jfree.chart.renderer.AbstractRenderer);
Generalization(org.jfree.chart.renderer.AbstractRenderer);
Realization(org.jfree.chart.renderer.xy.XYItemRenderer);
Realization(org.jfree.chart.event.AnnotationChangeListener);
Composition(org.jfree.chart.plot.XYPlot);
Composition(org.jfree.chart.labels.XYItemLabelGenerator);
Composition(org.jfree.chart.labels.XYToolTipGenerator);
Composition(org.jfree.chart.urls.XYURLGenerator);
Composition(org.jfree.chart.labels.XYSeriesLabelGenerator);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation --> addAnnotation$2,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds --> findDomainBounds$2,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds --> findRangeBounds$2,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getPlot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> getLegendItem,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getPlot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getLegendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getLegendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> calculateDomainMarkerTextAnchorPoint,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> calculateRangeMarkerTextAnchorPoint,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getDrawingSupplier --> getPlot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getPlot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues$2 --> updateCrosshairValues,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> urlGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getPlot --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setPlot --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getItemLabelGenerator --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getItemLabelGenerator --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getSeriesItemLabelGenerator --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setSeriesItemLabelGenerator --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getBaseItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setBaseItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getToolTipGenerator --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getToolTipGenerator --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getSeriesToolTipGenerator --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setSeriesToolTipGenerator --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getBaseToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setBaseToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getURLGenerator --> urlGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setURLGenerator --> urlGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation$2 --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation$2 --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotation --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotation --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotations --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotations --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getAnnotations --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getAnnotations --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItemLabelGenerator --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemLabelGenerator --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItemToolTipGenerator --> legendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemToolTipGenerator --> legendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItemURLGenerator --> legendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemURLGenerator --> legendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> legendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> itemLabelGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> baseItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> toolTipGeneratorMap,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> baseToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> urlGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> legendItemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> legendItemToolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> legendItemURLGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawAnnotations --> foregroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawAnnotations --> backgroundAnnotations,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawAnnotations --> plot,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getItemLabelGenerator$2 --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setItemLabelGenerator --> itemLabelGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getToolTipGenerator$2 --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setToolTipGenerator --> toolTipGenerator,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillDomainGridBand --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillRangeGridBand --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> DEFAULT_OUTLINE_PAINT,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> DEFAULT_OUTLINE_STROKE,org.jfree.chart.plot.Plot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,calculateDomainMarkerTextAnchorPoint --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,calculateDomainMarkerTextAnchorPoint --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,calculateRangeMarkerTextAnchorPoint --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,calculateRangeMarkerTextAnchorPoint --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> <init>,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,<init> --> <init>$2,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,initialise --> <init>,org.jfree.chart.renderer.xy.XYItemRendererState,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setSeriesItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setBaseItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setSeriesToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setBaseToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation$2 --> addChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addAnnotation$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotation --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotation --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotations --> removeChangeListener,org.jfree.chart.annotations.Annotation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,removeAnnotations --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,annotationChanged --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemLabelGenerator --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setLegendItemURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> getDataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> getSeriesKey,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> findDomainBounds$3,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findDomainBounds$2 --> findDomainBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getDataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getSeriesKey,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getIndexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getDomainAxisForDataset,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> findRangeBounds$6,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,findRangeBounds$2 --> findRangeBounds$5,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> <init>,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> getIndexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> isSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItems --> add,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getDataset$2,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> generateLabel,org.jfree.chart.labels.XYSeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupLegendShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> <init>$2,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setToolTipText,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setURLText,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setLabelFont,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setLabelPaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getSeriesKey,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setSeriesKey,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setSeriesIndex,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setDataset,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setDatasetIndex,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> getTreatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setLineVisible,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setLine,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setLinePaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setShapeVisible,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> lookupSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setOutlinePaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getLegendItem --> setOutlineStroke,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillDomainGridBand --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillDomainGridBand --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillDomainGridBand --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillDomainGridBand --> getDomainTickBandPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillRangeGridBand --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillRangeGridBand --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillRangeGridBand --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,fillRangeGridBand --> getRangeTickBandPaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> getDomainGridlinePaint,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainGridLine --> getDomainGridlineStroke,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> isHorizontal,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainLine --> isVertical,org.jfree.chart.plot.PlotOrientation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getValue,org.jfree.chart.plot.ValueMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getDomainAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getAlpha,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabel,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelFont,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelOffset,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelTextAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getStartValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getEndValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> intersects,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getGradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getOutlinePaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getOutlineStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawDomainMarker --> getLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getValue,org.jfree.chart.plot.ValueMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getRangeAxisEdge,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getAlpha,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabel,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelFont,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelOffset,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelTextAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getStartValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getEndValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> intersects,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getGradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getOutlinePaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getOutlineStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawRangeMarker --> getLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> clone,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,clone --> cloneMapValues,org.jfree.chart.util.CloneUtils,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,equals --> equals,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,getDrawingSupplier --> getDrawingSupplier,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> isDomainCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> isRangeCrosshairLockedOnData,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> updateCrosshairPoint$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> updateCrosshairX$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,updateCrosshairValues --> updateCrosshairY$2,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> generateLabel,org.jfree.chart.labels.XYItemLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getPositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getItemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> calculateLabelAnchorPoint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getTextAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getAngle,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawItemLabel --> getRotationAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawAnnotations --> getIndexOf,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,drawAnnotations --> draw,org.jfree.chart.annotations.XYAnnotation,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getItemCreateEntity,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getDefaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> getOrientation,org.jfree.chart.plot.XYPlot,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> generateToolTip,org.jfree.chart.labels.XYToolTipGenerator,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> generateURL,org.jfree.chart.urls.XYURLGenerator,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> <init>,org.jfree.chart.entity.XYItemEntity,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,addEntity --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.xy.AbstractXYItemRenderer,setToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
EndClass 56
StartClass 57
Class(org.jfree.chart.axis.AxisState,N,N,Public);
Attribute(cursor,double,Private,N,N,);
Attribute(ticks,java.util.List,Private,N,N,);
Attribute(max,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getCursor,double,Public,N,N);
Method(setCursor,void,Public,N,N);
Method(moveCursor,void,Public,N,N);
Method(cursorUp,void,Public,N,N);
Method(cursorDown,void,Public,N,N);
Method(cursorLeft,void,Public,N,N);
Method(cursorRight,void,Public,N,N);
Method(getTicks,java.util.List,Public,N,N);
Method(setTicks,void,Public,N,N);
Method(getMax,double,Public,N,N);
Method(setMax,void,Public,N,N);
Parameter(<init>$2,double,);
Parameter(setCursor,double,);
Parameter(moveCursor,double,);
Parameter(moveCursor,org.jfree.ui.RectangleEdge,);
Parameter(cursorUp,double,);
Parameter(cursorDown,double,);
Parameter(cursorLeft,double,);
Parameter(cursorRight,double,);
Parameter(setTicks,java.util.List,);
Parameter(setMax,double,);
Call(METHOD,org.jfree.chart.axis.AxisState,<init> --> <init>$2,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.AxisState,moveCursor --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.AxisState,moveCursor --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.AxisState,moveCursor --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.AxisState,moveCursor --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,<init>$2 --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,<init>$2 --> ticks,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,getCursor --> cursor,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,setCursor --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorUp --> cursor,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorUp --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorDown --> cursor,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorDown --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorLeft --> cursor,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorLeft --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorRight --> cursor,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,cursorRight --> cursor,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,getTicks --> ticks,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,setTicks --> ticks,org.jfree.chart.axis.AxisState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,getMax --> max,org.jfree.chart.axis.AxisState,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisState,setMax --> max,org.jfree.chart.axis.AxisState,WRITE);
EndClass 57
StartClass 58
Class(org.jfree.chart.axis.AxisCollection,N,N,Public);
Attribute(axesAtTop,java.util.List,Private,N,N,);
Attribute(axesAtBottom,java.util.List,Private,N,N,);
Attribute(axesAtLeft,java.util.List,Private,N,N,);
Attribute(axesAtRight,java.util.List,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getAxesAtTop,java.util.List,Public,N,N);
Method(getAxesAtBottom,java.util.List,Public,N,N);
Method(getAxesAtLeft,java.util.List,Public,N,N);
Method(getAxesAtRight,java.util.List,Public,N,N);
Method(add,void,Public,N,N);
Parameter(add,org.jfree.chart.axis.Axis,);
Parameter(add,org.jfree.ui.RectangleEdge,);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,<init> --> axesAtTop,org.jfree.chart.axis.AxisCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,<init> --> axesAtBottom,org.jfree.chart.axis.AxisCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,<init> --> axesAtLeft,org.jfree.chart.axis.AxisCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,<init> --> axesAtRight,org.jfree.chart.axis.AxisCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,getAxesAtTop --> axesAtTop,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,getAxesAtBottom --> axesAtBottom,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,getAxesAtLeft --> axesAtLeft,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,getAxesAtRight --> axesAtRight,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,add --> axesAtTop,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,add --> axesAtBottom,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,add --> axesAtLeft,org.jfree.chart.axis.AxisCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisCollection,add --> axesAtRight,org.jfree.chart.axis.AxisCollection,READ);
Call(METHOD,org.jfree.chart.axis.AxisCollection,add --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 58
StartClass 59
Class(org.jfree.chart.event.MarkerChangeListener,Y,Y,Public);
Method(markerChanged,void,Public,N,Y);
Parameter(markerChanged,org.jfree.chart.event.MarkerChangeEvent,);
EndClass 59
StartClass 60
Class(org.jfree.chart.LegendItem,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(dataset,org.jfree.data.general.Dataset,Private,N,N,);
Attribute(seriesKey,java.lang.Comparable,Private,N,N,);
Attribute(datasetIndex,int,Private,N,N,);
Attribute(series,int,Private,N,N,);
Attribute(label,java.lang.String,Private,N,N,);
Attribute(labelFont,java.awt.Font,Private,N,N,);
Attribute(labelPaint,java.awt.Paint,Private,N,N,);
Attribute(attributedLabel,java.text.AttributedString,Private,N,N,);
Attribute(description,java.lang.String,Private,N,N,);
Attribute(toolTipText,java.lang.String,Private,N,N,);
Attribute(urlText,java.lang.String,Private,N,N,);
Attribute(shapeVisible,boolean,Private,N,N,);
Attribute(shape,java.awt.Shape,Private,N,N,);
Attribute(shapeFilled,boolean,Private,N,N,);
Attribute(fillPaint,java.awt.Paint,Private,N,N,);
Attribute(fillPaintTransformer,org.jfree.ui.GradientPaintTransformer,Private,N,N,);
Attribute(shapeOutlineVisible,boolean,Private,N,N,);
Attribute(outlinePaint,java.awt.Paint,Private,N,N,);
Attribute(outlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(lineVisible,boolean,Private,N,N,);
Attribute(line,java.awt.Shape,Private,N,N,);
Attribute(lineStroke,java.awt.Stroke,Private,N,N,);
Attribute(linePaint,java.awt.Paint,Private,N,N,);
Attribute(UNUSED_SHAPE,java.awt.Shape,Private,Y,Y,);
Attribute(UNUSED_STROKE,java.awt.Stroke,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(<init>$7,void,Public,N,N);
Method(<init>$8,void,Public,N,N);
Method(<init>$9,void,Public,N,N);
Method(<init>$10,void,Public,N,N);
Method(characterIteratorToString,java.lang.String,Private,N,N);
Method(getDataset,org.jfree.data.general.Dataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(getDatasetIndex,int,Public,N,N);
Method(setDatasetIndex,void,Public,N,N);
Method(getSeriesKey,java.lang.Comparable,Public,N,N);
Method(setSeriesKey,void,Public,N,N);
Method(getSeriesIndex,int,Public,N,N);
Method(setSeriesIndex,void,Public,N,N);
Method(getLabel,java.lang.String,Public,N,N);
Method(getLabelFont,java.awt.Font,Public,N,N);
Method(setLabelFont,void,Public,N,N);
Method(getLabelPaint,java.awt.Paint,Public,N,N);
Method(setLabelPaint,void,Public,N,N);
Method(getAttributedLabel,java.text.AttributedString,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(setDescription,void,Public,N,N);
Method(getToolTipText,java.lang.String,Public,N,N);
Method(setToolTipText,void,Public,N,N);
Method(getURLText,java.lang.String,Public,N,N);
Method(setURLText,void,Public,N,N);
Method(isShapeVisible,boolean,Public,N,N);
Method(setShapeVisible,void,Public,N,N);
Method(getShape,java.awt.Shape,Public,N,N);
Method(setShape,void,Public,N,N);
Method(isShapeFilled,boolean,Public,N,N);
Method(getFillPaint,java.awt.Paint,Public,N,N);
Method(setFillPaint,void,Public,N,N);
Method(isShapeOutlineVisible,boolean,Public,N,N);
Method(getLineStroke,java.awt.Stroke,Public,N,N);
Method(setLineStroke,void,Public,N,N);
Method(getLinePaint,java.awt.Paint,Public,N,N);
Method(setLinePaint,void,Public,N,N);
Method(getOutlinePaint,java.awt.Paint,Public,N,N);
Method(setOutlinePaint,void,Public,N,N);
Method(getOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setOutlineStroke,void,Public,N,N);
Method(isLineVisible,boolean,Public,N,N);
Method(setLineVisible,void,Public,N,N);
Method(getLine,java.awt.Shape,Public,N,N);
Method(setLine,void,Public,N,N);
Method(getFillPaintTransformer,org.jfree.ui.GradientPaintTransformer,Public,N,N);
Method(setFillPaintTransformer,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.awt.Shape,);
Parameter(<init>$4,java.awt.Paint,);
Parameter(<init>$4,java.awt.Stroke,);
Parameter(<init>$4,java.awt.Paint,);
Parameter(<init>$5,java.lang.String,);
Parameter(<init>$5,java.lang.String,);
Parameter(<init>$5,java.lang.String,);
Parameter(<init>$5,java.lang.String,);
Parameter(<init>$5,java.awt.Shape,);
Parameter(<init>$5,java.awt.Stroke,);
Parameter(<init>$5,java.awt.Paint,);
Parameter(<init>$6,java.lang.String,);
Parameter(<init>$6,java.lang.String,);
Parameter(<init>$6,java.lang.String,);
Parameter(<init>$6,java.lang.String,);
Parameter(<init>$6,boolean,);
Parameter(<init>$6,java.awt.Shape,);
Parameter(<init>$6,boolean,);
Parameter(<init>$6,java.awt.Paint,);
Parameter(<init>$6,boolean,);
Parameter(<init>$6,java.awt.Paint,);
Parameter(<init>$6,java.awt.Stroke,);
Parameter(<init>$6,boolean,);
Parameter(<init>$6,java.awt.Shape,);
Parameter(<init>$6,java.awt.Stroke,);
Parameter(<init>$6,java.awt.Paint,);
Parameter(<init>$7,java.text.AttributedString,);
Parameter(<init>$7,java.lang.String,);
Parameter(<init>$7,java.lang.String,);
Parameter(<init>$7,java.lang.String,);
Parameter(<init>$7,java.awt.Shape,);
Parameter(<init>$7,java.awt.Paint,);
Parameter(<init>$8,java.text.AttributedString,);
Parameter(<init>$8,java.lang.String,);
Parameter(<init>$8,java.lang.String,);
Parameter(<init>$8,java.lang.String,);
Parameter(<init>$8,java.awt.Shape,);
Parameter(<init>$8,java.awt.Paint,);
Parameter(<init>$8,java.awt.Stroke,);
Parameter(<init>$8,java.awt.Paint,);
Parameter(<init>$9,java.text.AttributedString,);
Parameter(<init>$9,java.lang.String,);
Parameter(<init>$9,java.lang.String,);
Parameter(<init>$9,java.lang.String,);
Parameter(<init>$9,java.awt.Shape,);
Parameter(<init>$9,java.awt.Stroke,);
Parameter(<init>$9,java.awt.Paint,);
Parameter(<init>$10,java.text.AttributedString,);
Parameter(<init>$10,java.lang.String,);
Parameter(<init>$10,java.lang.String,);
Parameter(<init>$10,java.lang.String,);
Parameter(<init>$10,boolean,);
Parameter(<init>$10,java.awt.Shape,);
Parameter(<init>$10,boolean,);
Parameter(<init>$10,java.awt.Paint,);
Parameter(<init>$10,boolean,);
Parameter(<init>$10,java.awt.Paint,);
Parameter(<init>$10,java.awt.Stroke,);
Parameter(<init>$10,boolean,);
Parameter(<init>$10,java.awt.Shape,);
Parameter(<init>$10,java.awt.Stroke,);
Parameter(<init>$10,java.awt.Paint,);
Parameter(characterIteratorToString,java.text.CharacterIterator,);
Parameter(setDataset,org.jfree.data.general.Dataset,);
Parameter(setDatasetIndex,int,);
Parameter(setSeriesKey,java.lang.Comparable,);
Parameter(setSeriesIndex,int,);
Parameter(setLabelFont,java.awt.Font,);
Parameter(setLabelPaint,java.awt.Paint,);
Parameter(setDescription,java.lang.String,);
Parameter(setToolTipText,java.lang.String,);
Parameter(setURLText,java.lang.String,);
Parameter(setShapeVisible,boolean,);
Parameter(setShape,java.awt.Shape,);
Parameter(setFillPaint,java.awt.Paint,);
Parameter(setLineStroke,java.awt.Stroke,);
Parameter(setLinePaint,java.awt.Paint,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setLineVisible,boolean,);
Parameter(setLine,java.awt.Shape,);
Parameter(setFillPaintTransformer,org.jfree.ui.GradientPaintTransformer,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Composition(org.jfree.data.general.Dataset);
Call(METHOD,org.jfree.chart.LegendItem,<init> --> <init>$2,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$2 --> <init>$3,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$3 --> <init>$6,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$4 --> <init>$6,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$5 --> <init>$6,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$7 --> <init>$10,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$8 --> <init>$10,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$9 --> <init>$10,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$10 --> characterIteratorToString,org.jfree.chart.LegendItem,);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$3 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$3 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$4 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$4 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$5 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$5 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> label,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> labelPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> attributedLabel,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> description,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> shapeVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> shape,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> shapeFilled,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> fillPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> fillPaintTransformer,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> shapeOutlineVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> outlinePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> outlineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> lineVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> line,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> lineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> linePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> toolTipText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$6 --> urlText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$7 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$7 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$8 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$8 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$9 --> UNUSED_SHAPE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$9 --> UNUSED_STROKE,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> label,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> attributedLabel,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> description,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> shapeVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> shape,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> shapeFilled,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> fillPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> fillPaintTransformer,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> shapeOutlineVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> outlinePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> outlineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> lineVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> line,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> lineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> linePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> toolTipText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<init>$10 --> urlText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getDataset --> dataset,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setDataset --> dataset,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getDatasetIndex --> datasetIndex,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setDatasetIndex --> datasetIndex,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getSeriesKey --> seriesKey,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setSeriesKey --> seriesKey,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getSeriesIndex --> series,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setSeriesIndex --> series,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLabel --> label,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLabelFont --> labelFont,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLabelFont --> labelFont,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLabelPaint --> labelPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLabelPaint --> labelPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getAttributedLabel --> attributedLabel,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getDescription --> description,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setDescription --> description,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getToolTipText --> toolTipText,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setToolTipText --> toolTipText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getURLText --> urlText,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setURLText --> urlText,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,isShapeVisible --> shapeVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setShapeVisible --> shapeVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getShape --> shape,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setShape --> shape,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,isShapeFilled --> shapeFilled,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getFillPaint --> fillPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setFillPaint --> fillPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,isShapeOutlineVisible --> shapeOutlineVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLineStroke --> lineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLineStroke --> lineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLinePaint --> linePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLinePaint --> linePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getOutlinePaint --> outlinePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setOutlinePaint --> outlinePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getOutlineStroke --> outlineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setOutlineStroke --> outlineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,isLineVisible --> lineVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLineVisible --> lineVisible,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getLine --> line,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setLine --> line,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,getFillPaintTransformer --> fillPaintTransformer,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,setFillPaintTransformer --> fillPaintTransformer,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> datasetIndex,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> series,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> label,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> attributedLabel,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> description,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> shapeVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> shape,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> shapeFilled,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> fillPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> fillPaintTransformer,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> shapeOutlineVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> outlineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> outlinePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> lineVisible,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> line,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> lineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> linePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> labelFont,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,equals --> labelPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> seriesKey,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> shape,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> fillPaintTransformer,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> line,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> seriesKey,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> shape,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> fillPaintTransformer,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,clone --> line,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> attributedLabel,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> shape,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> fillPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> outlineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> outlinePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> line,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> lineStroke,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> linePaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,writeObject --> labelPaint,org.jfree.chart.LegendItem,READ);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> attributedLabel,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> shape,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> fillPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> outlineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> outlinePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> line,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> lineStroke,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> linePaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,readObject --> labelPaint,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<clinit> --> UNUSED_SHAPE,org.jfree.chart.LegendItem,WRITE);
Call(ATTRIBUTE,org.jfree.chart.LegendItem,<clinit> --> UNUSED_STROKE,org.jfree.chart.LegendItem,WRITE);
Call(METHOD,org.jfree.chart.LegendItem,<init>$6 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,<init>$10 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setShape --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setFillPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setLineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setLinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setOutlinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setOutlineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setLine --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.LegendItem,setFillPaintTransformer --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 60
StartClass 61
Class(org.jfree.chart.axis.Axis,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_AXIS_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_AXIS_LABEL_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_AXIS_LABEL_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_AXIS_LABEL_INSETS,org.jfree.ui.RectangleInsets,Public,Y,Y,);
Attribute(DEFAULT_AXIS_LINE_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_AXIS_LINE_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_TICK_LABELS_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_TICK_LABEL_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_TICK_LABEL_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_TICK_LABEL_INSETS,org.jfree.ui.RectangleInsets,Public,Y,Y,);
Attribute(DEFAULT_TICK_MARKS_VISIBLE,boolean,Public,Y,Y,);
Attribute(DEFAULT_TICK_MARK_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_TICK_MARK_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_TICK_MARK_INSIDE_LENGTH,float,Public,Y,Y,);
Attribute(DEFAULT_TICK_MARK_OUTSIDE_LENGTH,float,Public,Y,Y,);
Attribute(visible,boolean,Private,N,N,);
Attribute(label,java.lang.String,Private,N,N,);
Attribute(attributedLabel,java.text.AttributedString,Private,N,N,);
Attribute(labelFont,java.awt.Font,Private,N,N,);
Attribute(labelPaint,java.awt.Paint,Private,N,N,);
Attribute(labelInsets,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(labelAngle,double,Private,N,N,);
Attribute(labelLocation,org.jfree.chart.axis.AxisLabelLocation,Private,N,N,);
Attribute(axisLineVisible,boolean,Private,N,N,);
Attribute(axisLineStroke,java.awt.Stroke,Private,N,N,);
Attribute(axisLinePaint,java.awt.Paint,Private,N,N,);
Attribute(tickLabelsVisible,boolean,Private,N,N,);
Attribute(tickLabelFont,java.awt.Font,Private,N,N,);
Attribute(tickLabelPaint,java.awt.Paint,Private,N,N,);
Attribute(tickLabelInsets,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(tickMarksVisible,boolean,Private,N,N,);
Attribute(tickMarkInsideLength,float,Private,N,N,);
Attribute(tickMarkOutsideLength,float,Private,N,N,);
Attribute(minorTickMarksVisible,boolean,Private,N,N,);
Attribute(minorTickMarkInsideLength,float,Private,N,N,);
Attribute(minorTickMarkOutsideLength,float,Private,N,N,);
Attribute(tickMarkStroke,java.awt.Stroke,Private,N,N,);
Attribute(tickMarkPaint,java.awt.Paint,Private,N,N,);
Attribute(fixedDimension,double,Private,N,N,);
Attribute(plot,org.jfree.chart.plot.Plot,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(isVisible,boolean,Public,N,N);
Method(setVisible,void,Public,N,N);
Method(getLabel,java.lang.String,Public,N,N);
Method(setLabel,void,Public,N,N);
Method(getAttributedLabel,java.text.AttributedString,Public,N,N);
Method(setAttributedLabel,void,Public,N,N);
Method(setAttributedLabel$2,void,Public,N,N);
Method(createAttributedLabel,java.text.AttributedString,Public,N,N);
Method(getLabelFont,java.awt.Font,Public,N,N);
Method(setLabelFont,void,Public,N,N);
Method(getLabelPaint,java.awt.Paint,Public,N,N);
Method(setLabelPaint,void,Public,N,N);
Method(getLabelInsets,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setLabelInsets,void,Public,N,N);
Method(setLabelInsets$2,void,Public,N,N);
Method(getLabelAngle,double,Public,N,N);
Method(setLabelAngle,void,Public,N,N);
Method(getLabelLocation,org.jfree.chart.axis.AxisLabelLocation,Public,N,N);
Method(setLabelLocation,void,Public,N,N);
Method(isAxisLineVisible,boolean,Public,N,N);
Method(setAxisLineVisible,void,Public,N,N);
Method(getAxisLinePaint,java.awt.Paint,Public,N,N);
Method(setAxisLinePaint,void,Public,N,N);
Method(getAxisLineStroke,java.awt.Stroke,Public,N,N);
Method(setAxisLineStroke,void,Public,N,N);
Method(isTickLabelsVisible,boolean,Public,N,N);
Method(setTickLabelsVisible,void,Public,N,N);
Method(isMinorTickMarksVisible,boolean,Public,N,N);
Method(setMinorTickMarksVisible,void,Public,N,N);
Method(getTickLabelFont,java.awt.Font,Public,N,N);
Method(setTickLabelFont,void,Public,N,N);
Method(getTickLabelPaint,java.awt.Paint,Public,N,N);
Method(setTickLabelPaint,void,Public,N,N);
Method(getTickLabelInsets,org.jfree.ui.RectangleInsets,Public,N,N);
Method(setTickLabelInsets,void,Public,N,N);
Method(isTickMarksVisible,boolean,Public,N,N);
Method(setTickMarksVisible,void,Public,N,N);
Method(getTickMarkInsideLength,float,Public,N,N);
Method(setTickMarkInsideLength,void,Public,N,N);
Method(getTickMarkOutsideLength,float,Public,N,N);
Method(setTickMarkOutsideLength,void,Public,N,N);
Method(getTickMarkStroke,java.awt.Stroke,Public,N,N);
Method(setTickMarkStroke,void,Public,N,N);
Method(getTickMarkPaint,java.awt.Paint,Public,N,N);
Method(setTickMarkPaint,void,Public,N,N);
Method(getMinorTickMarkInsideLength,float,Public,N,N);
Method(setMinorTickMarkInsideLength,void,Public,N,N);
Method(getMinorTickMarkOutsideLength,float,Public,N,N);
Method(setMinorTickMarkOutsideLength,void,Public,N,N);
Method(getPlot,org.jfree.chart.plot.Plot,Public,N,N);
Method(setPlot,void,Public,N,N);
Method(getFixedDimension,double,Public,N,N);
Method(setFixedDimension,void,Public,N,N);
Method(configure,void,Public,N,Y);
Method(reserveSpace,org.jfree.chart.axis.AxisSpace,Public,N,Y);
Method(draw,org.jfree.chart.axis.AxisState,Public,N,Y);
Method(refreshTicks,java.util.List,Public,N,Y);
Method(createAndAddEntity,void,Protected,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(hasListener,boolean,Public,N,N);
Method(notifyListeners,void,Protected,N,N);
Method(fireChangeEvent,void,Protected,N,N);
Method(getLabelEnclosure,java.awt.geom.Rectangle2D,Protected,N,N);
Method(labelLocationX,double,Protected,N,N);
Method(labelLocationY,double,Protected,N,N);
Method(labelAnchorH,org.jfree.ui.TextAnchor,Protected,N,N);
Method(labelAnchorV,org.jfree.ui.TextAnchor,Protected,N,N);
Method(drawLabel,org.jfree.chart.axis.AxisState,Protected,N,N);
Method(drawAttributedLabel,org.jfree.chart.axis.AxisState,Protected,N,N);
Method(drawAxisLine,void,Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(setVisible,boolean,);
Parameter(setLabel,java.lang.String,);
Parameter(setAttributedLabel,java.lang.String,);
Parameter(setAttributedLabel$2,java.text.AttributedString,);
Parameter(createAttributedLabel,java.lang.String,);
Parameter(setLabelFont,java.awt.Font,);
Parameter(setLabelPaint,java.awt.Paint,);
Parameter(setLabelInsets,org.jfree.ui.RectangleInsets,);
Parameter(setLabelInsets$2,org.jfree.ui.RectangleInsets,);
Parameter(setLabelInsets$2,boolean,);
Parameter(setLabelAngle,double,);
Parameter(setLabelLocation,org.jfree.chart.axis.AxisLabelLocation,);
Parameter(setAxisLineVisible,boolean,);
Parameter(setAxisLinePaint,java.awt.Paint,);
Parameter(setAxisLineStroke,java.awt.Stroke,);
Parameter(setTickLabelsVisible,boolean,);
Parameter(setMinorTickMarksVisible,boolean,);
Parameter(setTickLabelFont,java.awt.Font,);
Parameter(setTickLabelPaint,java.awt.Paint,);
Parameter(setTickLabelInsets,org.jfree.ui.RectangleInsets,);
Parameter(setTickMarksVisible,boolean,);
Parameter(setTickMarkInsideLength,float,);
Parameter(setTickMarkOutsideLength,float,);
Parameter(setTickMarkStroke,java.awt.Stroke,);
Parameter(setTickMarkPaint,java.awt.Paint,);
Parameter(setMinorTickMarkInsideLength,float,);
Parameter(setMinorTickMarkOutsideLength,float,);
Parameter(setPlot,org.jfree.chart.plot.Plot,);
Parameter(setFixedDimension,double,);
Parameter(reserveSpace,java.awt.Graphics2D,);
Parameter(reserveSpace,org.jfree.chart.plot.Plot,);
Parameter(reserveSpace,java.awt.geom.Rectangle2D,);
Parameter(reserveSpace,org.jfree.ui.RectangleEdge,);
Parameter(reserveSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,double,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,org.jfree.ui.RectangleEdge,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(refreshTicks,java.awt.Graphics2D,);
Parameter(refreshTicks,org.jfree.chart.axis.AxisState,);
Parameter(refreshTicks,java.awt.geom.Rectangle2D,);
Parameter(refreshTicks,org.jfree.ui.RectangleEdge,);
Parameter(createAndAddEntity,double,);
Parameter(createAndAddEntity,org.jfree.chart.axis.AxisState,);
Parameter(createAndAddEntity,java.awt.geom.Rectangle2D,);
Parameter(createAndAddEntity,org.jfree.ui.RectangleEdge,);
Parameter(createAndAddEntity,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(addChangeListener,org.jfree.chart.event.AxisChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.AxisChangeListener,);
Parameter(hasListener,java.util.EventListener,);
Parameter(notifyListeners,org.jfree.chart.event.AxisChangeEvent,);
Parameter(getLabelEnclosure,java.awt.Graphics2D,);
Parameter(getLabelEnclosure,org.jfree.ui.RectangleEdge,);
Parameter(labelLocationX,org.jfree.chart.axis.AxisLabelLocation,);
Parameter(labelLocationX,java.awt.geom.Rectangle2D,);
Parameter(labelLocationY,org.jfree.chart.axis.AxisLabelLocation,);
Parameter(labelLocationY,java.awt.geom.Rectangle2D,);
Parameter(labelAnchorH,org.jfree.chart.axis.AxisLabelLocation,);
Parameter(labelAnchorV,org.jfree.chart.axis.AxisLabelLocation,);
Parameter(drawLabel,java.lang.String,);
Parameter(drawLabel,java.awt.Graphics2D,);
Parameter(drawLabel,java.awt.geom.Rectangle2D,);
Parameter(drawLabel,java.awt.geom.Rectangle2D,);
Parameter(drawLabel,org.jfree.ui.RectangleEdge,);
Parameter(drawLabel,org.jfree.chart.axis.AxisState,);
Parameter(drawAttributedLabel,java.text.AttributedString,);
Parameter(drawAttributedLabel,java.awt.Graphics2D,);
Parameter(drawAttributedLabel,java.awt.geom.Rectangle2D,);
Parameter(drawAttributedLabel,java.awt.geom.Rectangle2D,);
Parameter(drawAttributedLabel,org.jfree.ui.RectangleEdge,);
Parameter(drawAttributedLabel,org.jfree.chart.axis.AxisState,);
Parameter(drawAxisLine,java.awt.Graphics2D,);
Parameter(drawAxisLine,double,);
Parameter(drawAxisLine,java.awt.geom.Rectangle2D,);
Parameter(drawAxisLine,org.jfree.ui.RectangleEdge,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.jfree.chart.axis.ValueAxis);
SubClass(org.jfree.chart.axis.CategoryAxis);
Composition(org.jfree.chart.axis.AxisLabelLocation);
Composition(org.jfree.chart.plot.Plot);
Call(METHOD,org.jfree.chart.axis.Axis,setVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabel --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAttributedLabel --> createAttributedLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAttributedLabel --> setAttributedLabel$2,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAttributedLabel$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelFont --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelPaint --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelInsets --> setLabelInsets$2,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelInsets$2 --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelAngle --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelLocation --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAxisLineVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAxisLinePaint --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setAxisLineStroke --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelsVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setMinorTickMarksVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelFont --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelPaint --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelInsets --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarksVisible --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkInsideLength --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkOutsideLength --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkStroke --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkPaint --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setMinorTickMarkInsideLength --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setMinorTickMarkOutsideLength --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,setPlot --> configure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,fireChangeEvent --> notifyListeners,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,getLabelEnclosure --> getLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,getLabelEnclosure --> getLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,getLabelEnclosure --> getLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,getLabelEnclosure --> getLabelAngle,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> getLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> getLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> getLabelPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> getLabelAngle,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> labelLocationX,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> labelAnchorH,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> labelLocationY,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> labelAnchorV,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> getLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> getLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> getLabelPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> getLabelAngle,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> labelLocationX,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> labelAnchorH,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> labelLocationY,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> labelAnchorV,org.jfree.chart.axis.Axis,);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_AXIS_LABEL_FONT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_AXIS_LABEL_PAINT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_AXIS_LABEL_INSETS,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_AXIS_LINE_PAINT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_AXIS_LINE_STROKE,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_TICK_LABEL_FONT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_TICK_LABEL_PAINT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_TICK_LABEL_INSETS,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_TICK_MARK_STROKE,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> DEFAULT_TICK_MARK_PAINT,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> label,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> visible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> labelFont,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> labelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> labelInsets,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> labelAngle,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> labelLocation,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> axisLineVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> axisLinePaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> axisLineStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickLabelsVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickLabelFont,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickLabelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickLabelInsets,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickMarksVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickMarkStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickMarkPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickMarkInsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> tickMarkOutsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> minorTickMarksVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> minorTickMarkInsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> minorTickMarkOutsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> plot,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> listenerList,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,isVisible --> visible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setVisible --> visible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setVisible --> visible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabel --> label,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabel --> label,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getAttributedLabel --> attributedLabel,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setAttributedLabel$2 --> attributedLabel,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,createAttributedLabel --> labelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelFont --> labelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelFont --> labelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelFont --> labelFont,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelPaint --> labelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelPaint --> labelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelInsets --> labelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelInsets$2 --> labelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelInsets$2 --> labelInsets,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelAngle --> labelAngle,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelAngle --> labelAngle,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelLocation --> labelLocation,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setLabelLocation --> labelLocation,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,isAxisLineVisible --> axisLineVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setAxisLineVisible --> axisLineVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getAxisLinePaint --> axisLinePaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setAxisLinePaint --> axisLinePaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getAxisLineStroke --> axisLineStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setAxisLineStroke --> axisLineStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,isTickLabelsVisible --> tickLabelsVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelsVisible --> tickLabelsVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelsVisible --> tickLabelsVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,isMinorTickMarksVisible --> minorTickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setMinorTickMarksVisible --> minorTickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setMinorTickMarksVisible --> minorTickMarksVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickLabelFont --> tickLabelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelFont --> tickLabelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelFont --> tickLabelFont,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickLabelPaint --> tickLabelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelPaint --> tickLabelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickLabelInsets --> tickLabelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelInsets --> tickLabelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickLabelInsets --> tickLabelInsets,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,isTickMarksVisible --> tickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarksVisible --> tickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarksVisible --> tickMarksVisible,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickMarkInsideLength --> tickMarkInsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarkInsideLength --> tickMarkInsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickMarkOutsideLength --> tickMarkOutsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarkOutsideLength --> tickMarkOutsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickMarkStroke --> tickMarkStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarkStroke --> tickMarkStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarkStroke --> tickMarkStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getTickMarkPaint --> tickMarkPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setTickMarkPaint --> tickMarkPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getMinorTickMarkInsideLength --> minorTickMarkInsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setMinorTickMarkInsideLength --> minorTickMarkInsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getMinorTickMarkOutsideLength --> minorTickMarkOutsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setMinorTickMarkOutsideLength --> minorTickMarkOutsideLength,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getPlot --> plot,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setPlot --> plot,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getFixedDimension --> fixedDimension,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,setFixedDimension --> fixedDimension,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,addChangeListener --> listenerList,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,removeChangeListener --> listenerList,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,hasListener --> listenerList,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,notifyListeners --> listenerList,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,getLabelEnclosure --> attributedLabel,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,drawLabel --> labelLocation,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,drawAttributedLabel --> attributedLabel,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,drawAttributedLabel --> labelLocation,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,drawAxisLine --> axisLinePaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,drawAxisLine --> axisLineStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,clone --> plot,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,clone --> listenerList,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> visible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> label,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> attributedLabel,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> labelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> labelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> labelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> labelAngle,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> labelLocation,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> axisLineVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> axisLineStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> axisLinePaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickLabelsVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickLabelFont,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickLabelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickLabelInsets,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickMarkInsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickMarkOutsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickMarkPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> tickMarkStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> minorTickMarksVisible,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> minorTickMarkInsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> minorTickMarkOutsideLength,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,equals --> fixedDimension,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,hashCode --> label,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> attributedLabel,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> labelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> tickLabelPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> axisLineStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> axisLinePaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> tickMarkStroke,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,writeObject --> tickMarkPaint,org.jfree.chart.axis.Axis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> attributedLabel,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> labelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> tickLabelPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> axisLineStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> axisLinePaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> tickMarkStroke,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> tickMarkPaint,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,readObject --> listenerList,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_AXIS_LABEL_FONT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_AXIS_LABEL_PAINT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_AXIS_LABEL_INSETS,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_AXIS_LINE_PAINT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_AXIS_LINE_STROKE,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_TICK_LABEL_FONT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_TICK_LABEL_PAINT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_TICK_LABEL_INSETS,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_TICK_MARK_STROKE,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<clinit> --> DEFAULT_TICK_MARK_PAINT,org.jfree.chart.axis.Axis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,<init> --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationX --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationX --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationX --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationY --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationY --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelLocationY --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorH --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorH --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorH --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorV --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorV --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Axis,labelAnchorV --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelInsets$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setLabelLocation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setAxisLinePaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setAxisLineStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickLabelInsets --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkStroke --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,setTickMarkPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,createAndAddEntity --> getOwner,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.axis.Axis,createAndAddEntity --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,createAndAddEntity --> getEntityCollection,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.axis.Axis,createAndAddEntity --> <init>,org.jfree.chart.entity.AxisEntity,);
Call(METHOD,org.jfree.chart.axis.Axis,createAndAddEntity --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.axis.Axis,notifyListeners --> axisChanged,org.jfree.chart.event.AxisChangeListener,);
Call(METHOD,org.jfree.chart.axis.Axis,fireChangeEvent --> <init>,org.jfree.chart.event.AxisChangeEvent,);
Call(METHOD,org.jfree.chart.axis.Axis,labelLocationX --> equals,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.Axis,labelLocationY --> equals,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.Axis,labelAnchorH --> equals,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.Axis,labelAnchorV --> equals,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawLabel --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> drawRotatedString$4,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,drawAttributedLabel --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.Axis,equals --> equals,org.jfree.chart.axis.AxisLabelLocation,);
EndClass 61
StartClass 62
Class(org.jfree.data.general.DatasetUtilities,N,N,Public);
Method(<init>,void,Private,N,N);
Method(calculatePieDatasetTotal,double,Public,Y,N);
Method(createPieDatasetForRow,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createPieDatasetForRow$2,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createPieDatasetForColumn,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createPieDatasetForColumn$2,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createConsolidatedPieDataset,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createConsolidatedPieDataset$2,org.jfree.data.general.PieDataset,Public,Y,N);
Method(createCategoryDataset,org.jfree.data.category.CategoryDataset,Public,Y,N);
Method(createCategoryDataset$2,org.jfree.data.category.CategoryDataset,Public,Y,N);
Method(createCategoryDataset$3,org.jfree.data.category.CategoryDataset,Public,Y,N);
Method(createCategoryDataset$4,org.jfree.data.category.CategoryDataset,Public,Y,N);
Method(sampleFunction2D,org.jfree.data.xy.XYDataset,Public,Y,N);
Method(sampleFunction2DToSeries,org.jfree.data.xy.XYSeries,Public,Y,N);
Method(isEmptyOrNull,boolean,Public,Y,N);
Method(isEmptyOrNull$2,boolean,Public,Y,N);
Method(isEmptyOrNull$3,boolean,Public,Y,N);
Method(findDomainBounds,org.jfree.data.Range,Public,Y,N);
Method(findDomainBounds$2,org.jfree.data.Range,Public,Y,N);
Method(findDomainBounds$3,org.jfree.data.Range,Public,Y,N);
Method(iterateDomainBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateDomainBounds$2,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds$2,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds$3,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds$4,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds$5,org.jfree.data.Range,Public,Y,N);
Method(findRangeBounds$6,org.jfree.data.Range,Public,Y,N);
Method(iterateCategoryRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateRangeBounds$2,org.jfree.data.Range,Public,Y,N);
Method(iterateToFindRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateXYRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateRangeBounds$3,org.jfree.data.Range,Public,Y,N);
Method(iterateRangeBounds$4,org.jfree.data.Range,Public,Y,N);
Method(findZBounds,org.jfree.data.Range,Public,Y,N);
Method(findZBounds$2,org.jfree.data.Range,Public,Y,N);
Method(findZBounds$3,org.jfree.data.Range,Public,Y,N);
Method(iterateZBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateZBounds$2,org.jfree.data.Range,Public,Y,N);
Method(iterateToFindDomainBounds,org.jfree.data.Range,Public,Y,N);
Method(iterateToFindRangeBounds$2,org.jfree.data.Range,Public,Y,N);
Method(iterateToFindZBounds,org.jfree.data.Range,Public,Y,N);
Method(findMinimumDomainValue,java.lang.Number,Public,Y,N);
Method(findMaximumDomainValue,java.lang.Number,Public,Y,N);
Method(findMinimumRangeValue,java.lang.Number,Public,Y,N);
Method(findMinimumRangeValue$2,java.lang.Number,Public,Y,N);
Method(findMaximumRangeValue,java.lang.Number,Public,Y,N);
Method(findMaximumRangeValue$2,java.lang.Number,Public,Y,N);
Method(findStackedRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(findStackedRangeBounds$2,org.jfree.data.Range,Public,Y,N);
Method(findStackedRangeBounds$3,org.jfree.data.Range,Public,Y,N);
Method(findMinimumStackedRangeValue,java.lang.Number,Public,Y,N);
Method(findMaximumStackedRangeValue,java.lang.Number,Public,Y,N);
Method(findStackedRangeBounds$4,org.jfree.data.Range,Public,Y,N);
Method(findStackedRangeBounds$5,org.jfree.data.Range,Public,Y,N);
Method(calculateStackTotal,double,Public,Y,N);
Method(findCumulativeRangeBounds,org.jfree.data.Range,Public,Y,N);
Method(findYValue,double,Public,Y,N);
Method(findItemIndicesForX,int[],Public,Y,N);
Parameter(calculatePieDatasetTotal,org.jfree.data.general.PieDataset,);
Parameter(createPieDatasetForRow,org.jfree.data.category.CategoryDataset,);
Parameter(createPieDatasetForRow,java.lang.Comparable,);
Parameter(createPieDatasetForRow$2,org.jfree.data.category.CategoryDataset,);
Parameter(createPieDatasetForRow$2,int,);
Parameter(createPieDatasetForColumn,org.jfree.data.category.CategoryDataset,);
Parameter(createPieDatasetForColumn,java.lang.Comparable,);
Parameter(createPieDatasetForColumn$2,org.jfree.data.category.CategoryDataset,);
Parameter(createPieDatasetForColumn$2,int,);
Parameter(createConsolidatedPieDataset,org.jfree.data.general.PieDataset,);
Parameter(createConsolidatedPieDataset,java.lang.Comparable,);
Parameter(createConsolidatedPieDataset,double,);
Parameter(createConsolidatedPieDataset$2,org.jfree.data.general.PieDataset,);
Parameter(createConsolidatedPieDataset$2,java.lang.Comparable,);
Parameter(createConsolidatedPieDataset$2,double,);
Parameter(createConsolidatedPieDataset$2,int,);
Parameter(createCategoryDataset,java.lang.String,);
Parameter(createCategoryDataset,java.lang.String,);
Parameter(createCategoryDataset,double[][],);
Parameter(createCategoryDataset$2,java.lang.String,);
Parameter(createCategoryDataset$2,java.lang.String,);
Parameter(createCategoryDataset$2,java.lang.Number[][],);
Parameter(createCategoryDataset$3,java.lang.Comparable[],);
Parameter(createCategoryDataset$3,java.lang.Comparable[],);
Parameter(createCategoryDataset$3,double[][],);
Parameter(createCategoryDataset$4,java.lang.Comparable,);
Parameter(createCategoryDataset$4,org.jfree.data.KeyedValues,);
Parameter(sampleFunction2D,org.jfree.data.function.Function2D,);
Parameter(sampleFunction2D,double,);
Parameter(sampleFunction2D,double,);
Parameter(sampleFunction2D,int,);
Parameter(sampleFunction2D,java.lang.Comparable,);
Parameter(sampleFunction2DToSeries,org.jfree.data.function.Function2D,);
Parameter(sampleFunction2DToSeries,double,);
Parameter(sampleFunction2DToSeries,double,);
Parameter(sampleFunction2DToSeries,int,);
Parameter(sampleFunction2DToSeries,java.lang.Comparable,);
Parameter(isEmptyOrNull,org.jfree.data.general.PieDataset,);
Parameter(isEmptyOrNull$2,org.jfree.data.category.CategoryDataset,);
Parameter(isEmptyOrNull$3,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds$2,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds$2,boolean,);
Parameter(findDomainBounds$3,org.jfree.data.xy.XYDataset,);
Parameter(findDomainBounds$3,java.util.List,);
Parameter(findDomainBounds$3,boolean,);
Parameter(iterateDomainBounds,org.jfree.data.xy.XYDataset,);
Parameter(iterateDomainBounds$2,org.jfree.data.xy.XYDataset,);
Parameter(iterateDomainBounds$2,boolean,);
Parameter(findRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(findRangeBounds$2,org.jfree.data.category.CategoryDataset,);
Parameter(findRangeBounds$2,boolean,);
Parameter(findRangeBounds$3,org.jfree.data.category.CategoryDataset,);
Parameter(findRangeBounds$3,java.util.List,);
Parameter(findRangeBounds$3,boolean,);
Parameter(findRangeBounds$4,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds$5,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds$5,boolean,);
Parameter(findRangeBounds$6,org.jfree.data.xy.XYDataset,);
Parameter(findRangeBounds$6,java.util.List,);
Parameter(findRangeBounds$6,org.jfree.data.Range,);
Parameter(findRangeBounds$6,boolean,);
Parameter(iterateCategoryRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(iterateCategoryRangeBounds,boolean,);
Parameter(iterateRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(iterateRangeBounds$2,org.jfree.data.category.CategoryDataset,);
Parameter(iterateRangeBounds$2,boolean,);
Parameter(iterateToFindRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(iterateToFindRangeBounds,java.util.List,);
Parameter(iterateToFindRangeBounds,boolean,);
Parameter(iterateXYRangeBounds,org.jfree.data.xy.XYDataset,);
Parameter(iterateRangeBounds$3,org.jfree.data.xy.XYDataset,);
Parameter(iterateRangeBounds$4,org.jfree.data.xy.XYDataset,);
Parameter(iterateRangeBounds$4,boolean,);
Parameter(findZBounds,org.jfree.data.xy.XYZDataset,);
Parameter(findZBounds$2,org.jfree.data.xy.XYZDataset,);
Parameter(findZBounds$2,boolean,);
Parameter(findZBounds$3,org.jfree.data.xy.XYZDataset,);
Parameter(findZBounds$3,java.util.List,);
Parameter(findZBounds$3,org.jfree.data.Range,);
Parameter(findZBounds$3,boolean,);
Parameter(iterateZBounds,org.jfree.data.xy.XYZDataset,);
Parameter(iterateZBounds$2,org.jfree.data.xy.XYZDataset,);
Parameter(iterateZBounds$2,boolean,);
Parameter(iterateToFindDomainBounds,org.jfree.data.xy.XYDataset,);
Parameter(iterateToFindDomainBounds,java.util.List,);
Parameter(iterateToFindDomainBounds,boolean,);
Parameter(iterateToFindRangeBounds$2,org.jfree.data.xy.XYDataset,);
Parameter(iterateToFindRangeBounds$2,java.util.List,);
Parameter(iterateToFindRangeBounds$2,org.jfree.data.Range,);
Parameter(iterateToFindRangeBounds$2,boolean,);
Parameter(iterateToFindZBounds,org.jfree.data.xy.XYZDataset,);
Parameter(iterateToFindZBounds,java.util.List,);
Parameter(iterateToFindZBounds,org.jfree.data.Range,);
Parameter(iterateToFindZBounds,boolean,);
Parameter(findMinimumDomainValue,org.jfree.data.xy.XYDataset,);
Parameter(findMaximumDomainValue,org.jfree.data.xy.XYDataset,);
Parameter(findMinimumRangeValue,org.jfree.data.category.CategoryDataset,);
Parameter(findMinimumRangeValue$2,org.jfree.data.xy.XYDataset,);
Parameter(findMaximumRangeValue,org.jfree.data.category.CategoryDataset,);
Parameter(findMaximumRangeValue$2,org.jfree.data.xy.XYDataset,);
Parameter(findStackedRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(findStackedRangeBounds$2,org.jfree.data.category.CategoryDataset,);
Parameter(findStackedRangeBounds$2,double,);
Parameter(findStackedRangeBounds$3,org.jfree.data.category.CategoryDataset,);
Parameter(findStackedRangeBounds$3,org.jfree.data.KeyToGroupMap,);
Parameter(findMinimumStackedRangeValue,org.jfree.data.category.CategoryDataset,);
Parameter(findMaximumStackedRangeValue,org.jfree.data.category.CategoryDataset,);
Parameter(findStackedRangeBounds$4,org.jfree.data.xy.TableXYDataset,);
Parameter(findStackedRangeBounds$5,org.jfree.data.xy.TableXYDataset,);
Parameter(findStackedRangeBounds$5,double,);
Parameter(calculateStackTotal,org.jfree.data.xy.TableXYDataset,);
Parameter(calculateStackTotal,int,);
Parameter(findCumulativeRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(findYValue,org.jfree.data.xy.XYDataset,);
Parameter(findYValue,int,);
Parameter(findYValue,double,);
Parameter(findItemIndicesForX,org.jfree.data.xy.XYDataset,);
Parameter(findItemIndicesForX,int,);
Parameter(findItemIndicesForX,double,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow --> createPieDatasetForRow$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn --> createPieDatasetForColumn$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset --> createConsolidatedPieDataset$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> calculatePieDatasetTotal,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2D --> sampleFunction2DToSeries,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds --> findDomainBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$2 --> iterateDomainBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$3 --> iterateToFindDomainBounds,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds --> iterateDomainBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds --> findRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$2 --> iterateRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$3 --> iterateToFindRangeBounds,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$4 --> findRangeBounds$5,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$5 --> iterateRangeBounds$4,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$6 --> iterateToFindRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateCategoryRangeBounds --> iterateRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds --> iterateRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateXYRangeBounds --> iterateRangeBounds$3,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$3 --> iterateRangeBounds$4,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findZBounds --> findZBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findZBounds$2 --> iterateZBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findZBounds$3 --> iterateToFindZBounds,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateZBounds --> iterateZBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds --> findStackedRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$4 --> findStackedRangeBounds$5,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findYValue --> findItemIndicesForX,org.jfree.data.general.DatasetUtilities,);
Call(ATTRIBUTE,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> ASCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> DESCENDING,org.jfree.data.DomainOrder,READ);
Call(METHOD,org.jfree.data.general.DatasetUtilities,calculatePieDatasetTotal --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,calculatePieDatasetTotal --> getKeys,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,calculatePieDatasetTotal --> getValue,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow --> getRowIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow$2 --> <init>,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow$2 --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow$2 --> getColumnKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow$2 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForRow$2 --> setValue,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn --> getColumnIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn$2 --> <init>,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn$2 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn$2 --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn$2 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createPieDatasetForColumn$2 --> setValue,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> <init>,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> getKeys,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> getValue,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> setValue,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createConsolidatedPieDataset$2 --> setValue$2,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset --> <init>,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset --> addValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$2 --> <init>,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$2 --> addValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$3 --> <init>,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$3 --> addValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> <init>,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> getItemCount,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> getValue,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> getKey,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,createCategoryDataset$4 --> addValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2D --> <init>$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2DToSeries --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2DToSeries --> <init>,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2DToSeries --> getValue,org.jfree.data.function.Function2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,sampleFunction2DToSeries --> add$2,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull --> getItemCount,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull --> getValue,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull$2 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull$2 --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull$2 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull$3 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,isEmptyOrNull$3 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$2 --> getDomainBounds,org.jfree.data.DomainInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findDomainBounds$3 --> getDomainBounds,org.jfree.data.xy.XYDomainInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> getStartXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> getEndXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateDomainBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$2 --> getRangeBounds,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$3 --> getRangeBounds,org.jfree.data.category.CategoryRangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$5 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$5 --> getRangeBounds,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$6 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findRangeBounds$6 --> getRangeBounds,org.jfree.data.xy.XYRangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> getStartValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> getEndValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getRowIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getMinRegularValue,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getMaxRegularValue,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getStartValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getEndValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getValues,org.jfree.data.statistics.MultiValueCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getMeanValue,org.jfree.data.statistics.StatisticalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> getStdDevValue,org.jfree.data.statistics.StatisticalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getStartYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getEndYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getLowValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> getHighValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateRangeBounds$4 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findZBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findZBounds$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateZBounds$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateZBounds$2 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateZBounds$2 --> getZValue,org.jfree.data.xy.XYZDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateZBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> indexOf,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> getStartXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> getEndXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindDomainBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> indexOf,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getLowValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getHighValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getMinRegularValue,org.jfree.data.statistics.BoxAndWhiskerXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getMaxRegularValue,org.jfree.data.statistics.BoxAndWhiskerXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getStartYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getEndYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindRangeBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> indexOf,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> getZValue,org.jfree.data.xy.XYZDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,iterateToFindZBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> getDomainLowerBound,org.jfree.data.DomainInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> getStartXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumDomainValue --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> getDomainUpperBound,org.jfree.data.DomainInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> getEndXValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumDomainValue --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> getRangeLowerBound,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> getStartValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getRangeLowerBound,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getStartYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getLowValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumRangeValue$2 --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> getRangeUpperBound,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> getEndValue,org.jfree.data.category.IntervalCategoryDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getRangeUpperBound,org.jfree.data.RangeInfo,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getEndYValue,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getHighValue,org.jfree.data.xy.OHLCDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumRangeValue$2 --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$2 --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$2 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$2 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$2 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getGroup,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getGroupIndex,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getGroupCount,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$3 --> combine,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumStackedRangeValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumStackedRangeValue --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumStackedRangeValue --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMinimumStackedRangeValue --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumStackedRangeValue --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumStackedRangeValue --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumStackedRangeValue --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findMaximumStackedRangeValue --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$5 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$5 --> getItemCount,org.jfree.data.xy.TableXYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$5 --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$5 --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findStackedRangeBounds$5 --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,calculateStackTotal --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,calculateStackTotal --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findCumulativeRangeBounds --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findCumulativeRangeBounds --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findCumulativeRangeBounds --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findCumulativeRangeBounds --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findCumulativeRangeBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findYValue --> getYValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findYValue --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.general.DatasetUtilities,findItemIndicesForX --> getDomainOrder,org.jfree.data.xy.XYDataset,);
EndClass 62
StartClass 63
Class(org.jfree.chart.annotations.XYAnnotationBoundsInfo,Y,Y,Public);
Method(getIncludeInDataBounds,boolean,Public,N,Y);
Method(getXRange,org.jfree.data.Range,Public,N,Y);
Method(getYRange,org.jfree.data.Range,Public,N,Y);
EndClass 63
StartClass 64
Class(org.jfree.data.general.DatasetChangeListener,Y,Y,Public);
Method(datasetChanged,void,Public,N,Y);
Parameter(datasetChanged,org.jfree.data.general.DatasetChangeEvent,);
EndClass 64
StartClass 65
Class(org.jfree.chart.event.AnnotationChangeListener,Y,Y,Public);
Method(annotationChanged,void,Public,N,Y);
Parameter(annotationChanged,org.jfree.chart.event.AnnotationChangeEvent,);
EndClass 65
StartClass 66
Class(org.jfree.chart.event.ChartChangeEventType,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(GENERAL,org.jfree.chart.event.ChartChangeEventType,Public,Y,Y,);
Attribute(NEW_DATASET,org.jfree.chart.event.ChartChangeEventType,Public,Y,Y,);
Attribute(DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.event.ChartChangeEventType);
Call(METHOD,org.jfree.chart.event.ChartChangeEventType,equals --> toString,org.jfree.chart.event.ChartChangeEventType,);
Call(METHOD,org.jfree.chart.event.ChartChangeEventType,readResolve --> equals,org.jfree.chart.event.ChartChangeEventType,);
Call(METHOD,org.jfree.chart.event.ChartChangeEventType,<clinit> --> <init>,org.jfree.chart.event.ChartChangeEventType,);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,<init> --> name,org.jfree.chart.event.ChartChangeEventType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,toString --> name,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,equals --> name,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,hashCode --> name,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,readResolve --> GENERAL,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,readResolve --> NEW_DATASET,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,readResolve --> DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,READ);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,<clinit> --> GENERAL,org.jfree.chart.event.ChartChangeEventType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,<clinit> --> NEW_DATASET,org.jfree.chart.event.ChartChangeEventType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.ChartChangeEventType,<clinit> --> DATASET_UPDATED,org.jfree.chart.event.ChartChangeEventType,WRITE);
EndClass 66
StartClass 67
Class(org.jfree.chart.renderer.RendererUtilities,N,N,Public);
Method(<init>,void,Public,N,N);
Method(findLiveItemsLowerBound,int,Public,Y,N);
Method(findLiveItemsUpperBound,int,Public,Y,N);
Method(findLiveItems,int[],Public,Y,N);
Parameter(findLiveItemsLowerBound,org.jfree.data.xy.XYDataset,);
Parameter(findLiveItemsLowerBound,int,);
Parameter(findLiveItemsLowerBound,double,);
Parameter(findLiveItemsLowerBound,double,);
Parameter(findLiveItemsUpperBound,org.jfree.data.xy.XYDataset,);
Parameter(findLiveItemsUpperBound,int,);
Parameter(findLiveItemsUpperBound,double,);
Parameter(findLiveItemsUpperBound,double,);
Parameter(findLiveItems,org.jfree.data.xy.XYDataset,);
Parameter(findLiveItems,int,);
Parameter(findLiveItems,double,);
Parameter(findLiveItems,double,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItems --> findLiveItemsLowerBound,org.jfree.chart.renderer.RendererUtilities,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItems --> findLiveItemsUpperBound,org.jfree.chart.renderer.RendererUtilities,);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> ASCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> DESCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> ASCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> DESCENDING,org.jfree.data.DomainOrder,READ);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> getDomainOrder,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsLowerBound --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> getDomainOrder,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.chart.renderer.RendererUtilities,findLiveItemsUpperBound --> getXValue,org.jfree.data.xy.XYDataset,);
EndClass 67
StartClass 68
Class(org.jfree.chart.axis.TickType,N,N,Public);
Attribute(MAJOR,org.jfree.chart.axis.TickType,Public,Y,Y,);
Attribute(MINOR,org.jfree.chart.axis.TickType,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.TickType);
Call(METHOD,org.jfree.chart.axis.TickType,readResolve --> equals,org.jfree.chart.axis.TickType,);
Call(METHOD,org.jfree.chart.axis.TickType,<clinit> --> <init>,org.jfree.chart.axis.TickType,);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,<init> --> name,org.jfree.chart.axis.TickType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,toString --> name,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,equals --> name,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,readResolve --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,readResolve --> MINOR,org.jfree.chart.axis.TickType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,<clinit> --> MAJOR,org.jfree.chart.axis.TickType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.TickType,<clinit> --> MINOR,org.jfree.chart.axis.TickType,WRITE);
EndClass 68
StartClass 69
Class(org.jfree.data.general.Dataset,Y,Y,Public);
Method(addChangeListener,void,Public,N,Y);
Method(removeChangeListener,void,Public,N,Y);
Method(getGroup,org.jfree.data.general.DatasetGroup,Public,N,Y);
Method(setGroup,void,Public,N,Y);
Parameter(addChangeListener,org.jfree.data.general.DatasetChangeListener,);
Parameter(removeChangeListener,org.jfree.data.general.DatasetChangeListener,);
Parameter(setGroup,org.jfree.data.general.DatasetGroup,);
EndClass 69
StartClass 70
Class(org.jfree.chart.renderer.xy.XYItemRendererState,N,N,Public);
Attribute(firstItemIndex,int,Private,N,N,);
Attribute(lastItemIndex,int,Private,N,N,);
Attribute(workingLine,java.awt.geom.Line2D,Public,N,N,);
Attribute(processVisibleItemsOnly,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getProcessVisibleItemsOnly,boolean,Public,N,N);
Method(setProcessVisibleItemsOnly,void,Public,N,N);
Method(getFirstItemIndex,int,Public,N,N);
Method(getLastItemIndex,int,Public,N,N);
Method(startSeriesPass,void,Public,N,N);
Method(endSeriesPass,void,Public,N,N);
Parameter(<init>,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(setProcessVisibleItemsOnly,boolean,);
Parameter(startSeriesPass,org.jfree.data.xy.XYDataset,);
Parameter(startSeriesPass,int,);
Parameter(startSeriesPass,int,);
Parameter(startSeriesPass,int,);
Parameter(startSeriesPass,int,);
Parameter(startSeriesPass,int,);
Parameter(endSeriesPass,org.jfree.data.xy.XYDataset,);
Parameter(endSeriesPass,int,);
Parameter(endSeriesPass,int,);
Parameter(endSeriesPass,int,);
Parameter(endSeriesPass,int,);
Parameter(endSeriesPass,int,);
SuperClass(org.jfree.chart.renderer.RendererState);
Generalization(org.jfree.chart.renderer.RendererState);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,<init> --> workingLine,org.jfree.chart.renderer.xy.XYItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,<init> --> processVisibleItemsOnly,org.jfree.chart.renderer.xy.XYItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,getProcessVisibleItemsOnly --> processVisibleItemsOnly,org.jfree.chart.renderer.xy.XYItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,setProcessVisibleItemsOnly --> processVisibleItemsOnly,org.jfree.chart.renderer.xy.XYItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,getFirstItemIndex --> firstItemIndex,org.jfree.chart.renderer.xy.XYItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,getLastItemIndex --> lastItemIndex,org.jfree.chart.renderer.xy.XYItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,startSeriesPass --> firstItemIndex,org.jfree.chart.renderer.xy.XYItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.xy.XYItemRendererState,startSeriesPass --> lastItemIndex,org.jfree.chart.renderer.xy.XYItemRendererState,WRITE);
Call(METHOD,org.jfree.chart.renderer.xy.XYItemRendererState,<init> --> <init>,org.jfree.chart.renderer.RendererState,);
EndClass 70
StartClass 71
Class(org.jfree.chart.axis.ValueTick,N,Y,Public);
Attribute(value,double,Private,N,N,);
Attribute(tickType,org.jfree.chart.axis.TickType,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getValue,double,Public,N,N);
Method(getTickType,org.jfree.chart.axis.TickType,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>,double,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
Parameter(<init>,double,);
Parameter(<init>$2,org.jfree.chart.axis.TickType,);
Parameter(<init>$2,double,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,org.jfree.ui.TextAnchor,);
Parameter(<init>$2,org.jfree.ui.TextAnchor,);
Parameter(<init>$2,double,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.axis.Tick);
SubClass(org.jfree.chart.axis.LogTick);
Generalization(org.jfree.chart.axis.Tick);
Composition(org.jfree.chart.axis.TickType);
Call(METHOD,org.jfree.chart.axis.ValueTick,<init> --> <init>$2,org.jfree.chart.axis.ValueTick,);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,<init> --> value,org.jfree.chart.axis.ValueTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,<init>$2 --> value,org.jfree.chart.axis.ValueTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,<init>$2 --> tickType,org.jfree.chart.axis.ValueTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,getValue --> value,org.jfree.chart.axis.ValueTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,getTickType --> tickType,org.jfree.chart.axis.ValueTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,equals --> value,org.jfree.chart.axis.ValueTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,equals --> tickType,org.jfree.chart.axis.ValueTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.ValueTick,<init> --> MAJOR,org.jfree.chart.axis.TickType,READ);
Call(METHOD,org.jfree.chart.axis.ValueTick,<init>$2 --> <init>,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.ValueTick,equals --> equals,org.jfree.chart.axis.TickType,);
Call(METHOD,org.jfree.chart.axis.ValueTick,equals --> equals,org.jfree.chart.axis.Tick,);
EndClass 71
StartClass 72
Class(org.jfree.chart.util.CloneUtils,N,N,Public);
Method(<init>,void,Public,N,N);
Method(cloneList,java.util.List,Public,Y,N);
Method(cloneMapValues,java.util.Map,Public,Y,N);
Parameter(cloneList,java.util.List,);
Parameter(cloneMapValues,java.util.Map,);
Call(METHOD,org.jfree.chart.util.CloneUtils,cloneList --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.util.CloneUtils,cloneMapValues --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 72
StartClass 73
Class(org.jfree.chart.event.AxisChangeListener,Y,Y,Public);
Method(axisChanged,void,Public,N,Y);
Parameter(axisChanged,org.jfree.chart.event.AxisChangeEvent,);
EndClass 73
StartClass 74
Class(org.jfree.chart.util.ResourceBundleWrapper,N,N,Public);
Attribute(noCodeBaseClassLoader,java.net.URLClassLoader,Private,Y,N,);
Method(<init>,void,Private,N,N);
Method(removeCodeBase,void,Public,Y,N);
Method(getBundle,java.util.ResourceBundle,Public,Y,N);
Method(getBundle$2,java.util.ResourceBundle,Public,Y,N);
Method(getBundle$3,java.util.ResourceBundle,Public,Y,N);
Parameter(removeCodeBase,java.net.URL,);
Parameter(removeCodeBase,java.net.URLClassLoader,);
Parameter(getBundle,java.lang.String,);
Parameter(getBundle$2,java.lang.String,);
Parameter(getBundle$2,java.util.Locale,);
Parameter(getBundle$3,java.lang.String,);
Parameter(getBundle$3,java.util.Locale,);
Parameter(getBundle$3,java.lang.ClassLoader,);
Call(ATTRIBUTE,org.jfree.chart.util.ResourceBundleWrapper,removeCodeBase --> noCodeBaseClassLoader,org.jfree.chart.util.ResourceBundleWrapper,WRITE);
Call(ATTRIBUTE,org.jfree.chart.util.ResourceBundleWrapper,getBundle --> noCodeBaseClassLoader,org.jfree.chart.util.ResourceBundleWrapper,READ);
Call(ATTRIBUTE,org.jfree.chart.util.ResourceBundleWrapper,getBundle$2 --> noCodeBaseClassLoader,org.jfree.chart.util.ResourceBundleWrapper,READ);
EndClass 74
StartClass 75
Class(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,Y,Y,Public);
Method(generateToolTipFragment,java.lang.String,Public,N,Y);
Parameter(generateToolTipFragment,java.lang.String,);
EndClass 75
StartClass 76
Class(org.jfree.chart.imagemap.URLTagFragmentGenerator,Y,Y,Public);
Method(generateURLFragment,java.lang.String,Public,N,Y);
Parameter(generateURLFragment,java.lang.String,);
EndClass 76
StartClass 77
Class(org.jfree.chart.HashUtilities,N,N,Public);
Method(<init>,void,Public,N,N);
Method(hashCodeForPaint,int,Public,Y,N);
Method(hashCodeForDoubleArray,int,Public,Y,N);
Method(hashCode,int,Public,Y,N);
Method(hashCode$2,int,Public,Y,N);
Method(hashCode$3,int,Public,Y,N);
Method(hashCode$4,int,Public,Y,N);
Method(hashCode$5,int,Public,Y,N);
Method(hashCode$6,int,Public,Y,N);
Method(hashCode$7,int,Public,Y,N);
Method(hashCode$8,int,Public,Y,N);
Method(hashCode$9,int,Public,Y,N);
Method(hashCode$10,int,Public,Y,N);
Method(hashCode$11,int,Public,Y,N);
Parameter(hashCodeForPaint,java.awt.Paint,);
Parameter(hashCodeForDoubleArray,double[],);
Parameter(hashCode,int,);
Parameter(hashCode,boolean,);
Parameter(hashCode$2,int,);
Parameter(hashCode$2,int,);
Parameter(hashCode$3,int,);
Parameter(hashCode$3,double,);
Parameter(hashCode$4,int,);
Parameter(hashCode$4,java.awt.Paint,);
Parameter(hashCode$5,int,);
Parameter(hashCode$5,java.awt.Stroke,);
Parameter(hashCode$6,int,);
Parameter(hashCode$6,java.lang.String,);
Parameter(hashCode$7,int,);
Parameter(hashCode$7,java.lang.Comparable,);
Parameter(hashCode$8,int,);
Parameter(hashCode$8,java.lang.Object,);
Parameter(hashCode$9,int,);
Parameter(hashCode$9,org.jfree.util.BooleanList,);
Parameter(hashCode$10,int,);
Parameter(hashCode$10,org.jfree.util.PaintList,);
Parameter(hashCode$11,int,);
Parameter(hashCode$11,org.jfree.util.StrokeList,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$4 --> hashCodeForPaint,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$9 --> hashCode$2,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$9 --> hashCode$7,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$10 --> hashCode$2,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$10 --> hashCode$4,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$11 --> hashCode$2,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.HashUtilities,hashCode$11 --> hashCode$5,org.jfree.chart.HashUtilities,);
EndClass 77
StartClass 78
Class(org.jfree.chart.axis.CategoryAnchor,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(START,org.jfree.chart.axis.CategoryAnchor,Public,Y,Y,);
Attribute(MIDDLE,org.jfree.chart.axis.CategoryAnchor,Public,Y,Y,);
Attribute(END,org.jfree.chart.axis.CategoryAnchor,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.CategoryAnchor);
Call(METHOD,org.jfree.chart.axis.CategoryAnchor,equals --> toString,org.jfree.chart.axis.CategoryAnchor,);
Call(METHOD,org.jfree.chart.axis.CategoryAnchor,readResolve --> equals,org.jfree.chart.axis.CategoryAnchor,);
Call(METHOD,org.jfree.chart.axis.CategoryAnchor,<clinit> --> <init>,org.jfree.chart.axis.CategoryAnchor,);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,<init> --> name,org.jfree.chart.axis.CategoryAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,toString --> name,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,equals --> name,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,readResolve --> START,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,readResolve --> MIDDLE,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,readResolve --> END,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,<clinit> --> START,org.jfree.chart.axis.CategoryAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,<clinit> --> MIDDLE,org.jfree.chart.axis.CategoryAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAnchor,<clinit> --> END,org.jfree.chart.axis.CategoryAnchor,WRITE);
EndClass 78
StartClass 79
Class(org.jfree.data.category.CategoryDataset,Y,Y,Public);
Realization(org.jfree.data.KeyedValues2D);
Realization(org.jfree.data.general.Dataset);
EndClass 79
StartClass 80
Class(org.jfree.chart.axis.CategoryAxis,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_AXIS_MARGIN,double,Public,Y,Y,);
Attribute(DEFAULT_CATEGORY_MARGIN,double,Public,Y,Y,);
Attribute(lowerMargin,double,Private,N,N,);
Attribute(upperMargin,double,Private,N,N,);
Attribute(categoryMargin,double,Private,N,N,);
Attribute(maximumCategoryLabelLines,int,Private,N,N,);
Attribute(maximumCategoryLabelWidthRatio,float,Private,N,N,);
Attribute(categoryLabelPositionOffset,int,Private,N,N,);
Attribute(categoryLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,Private,N,N,);
Attribute(tickLabelFontMap,java.util.Map,Private,N,N,);
Attribute(tickLabelPaintMap,java.util.Map,Private,N,N,);
Attribute(categoryLabelToolTips,java.util.Map,Private,N,N,);
Attribute(categoryLabelURLs,java.util.Map,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getLowerMargin,double,Public,N,N);
Method(setLowerMargin,void,Public,N,N);
Method(getUpperMargin,double,Public,N,N);
Method(setUpperMargin,void,Public,N,N);
Method(getCategoryMargin,double,Public,N,N);
Method(setCategoryMargin,void,Public,N,N);
Method(getMaximumCategoryLabelLines,int,Public,N,N);
Method(setMaximumCategoryLabelLines,void,Public,N,N);
Method(getMaximumCategoryLabelWidthRatio,float,Public,N,N);
Method(setMaximumCategoryLabelWidthRatio,void,Public,N,N);
Method(getCategoryLabelPositionOffset,int,Public,N,N);
Method(setCategoryLabelPositionOffset,void,Public,N,N);
Method(getCategoryLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,Public,N,N);
Method(setCategoryLabelPositions,void,Public,N,N);
Method(getTickLabelFont,java.awt.Font,Public,N,N);
Method(setTickLabelFont,void,Public,N,N);
Method(getTickLabelPaint,java.awt.Paint,Public,N,N);
Method(setTickLabelPaint,void,Public,N,N);
Method(addCategoryLabelToolTip,void,Public,N,N);
Method(getCategoryLabelToolTip,java.lang.String,Public,N,N);
Method(removeCategoryLabelToolTip,void,Public,N,N);
Method(clearCategoryLabelToolTips,void,Public,N,N);
Method(addCategoryLabelURL,void,Public,N,N);
Method(getCategoryLabelURL,java.lang.String,Public,N,N);
Method(removeCategoryLabelURL,void,Public,N,N);
Method(clearCategoryLabelURLs,void,Public,N,N);
Method(getCategoryJava2DCoordinate,double,Public,N,N);
Method(getCategoryStart,double,Public,N,N);
Method(getCategoryMiddle,double,Public,N,N);
Method(getCategoryEnd,double,Public,N,N);
Method(getCategoryMiddle$2,double,Public,N,N);
Method(getCategorySeriesMiddle,double,Public,N,N);
Method(getCategorySeriesMiddle$2,double,Public,N,N);
Method(calculateCategorySize,double,Protected,N,N);
Method(calculateCategoryGapSize,double,Protected,N,N);
Method(reserveSpace,org.jfree.chart.axis.AxisSpace,Public,N,N);
Method(configure,void,Public,N,N);
Method(draw,org.jfree.chart.axis.AxisState,Public,N,N);
Method(drawCategoryLabels,org.jfree.chart.axis.AxisState,Protected,N,N);
Method(refreshTicks,java.util.List,Public,N,N);
Method(drawTickMarks,void,Public,N,N);
Method(createLabel,org.jfree.text.TextBlock,Protected,N,N);
Method(calculateTextBlockWidth,double,Protected,N,N);
Method(calculateTextBlockHeight,double,Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(readPaintMap,java.util.Map,Private,N,N);
Method(writePaintMap,void,Private,N,N);
Method(equalPaintMaps,boolean,Private,N,N);
Method(drawCategoryLabels$2,org.jfree.chart.axis.AxisState,Protected,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(setLowerMargin,double,);
Parameter(setUpperMargin,double,);
Parameter(setCategoryMargin,double,);
Parameter(setMaximumCategoryLabelLines,int,);
Parameter(setMaximumCategoryLabelWidthRatio,float,);
Parameter(setCategoryLabelPositionOffset,int,);
Parameter(setCategoryLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,);
Parameter(getTickLabelFont,java.lang.Comparable,);
Parameter(setTickLabelFont,java.lang.Comparable,);
Parameter(setTickLabelFont,java.awt.Font,);
Parameter(getTickLabelPaint,java.lang.Comparable,);
Parameter(setTickLabelPaint,java.lang.Comparable,);
Parameter(setTickLabelPaint,java.awt.Paint,);
Parameter(addCategoryLabelToolTip,java.lang.Comparable,);
Parameter(addCategoryLabelToolTip,java.lang.String,);
Parameter(getCategoryLabelToolTip,java.lang.Comparable,);
Parameter(removeCategoryLabelToolTip,java.lang.Comparable,);
Parameter(addCategoryLabelURL,java.lang.Comparable,);
Parameter(addCategoryLabelURL,java.lang.String,);
Parameter(getCategoryLabelURL,java.lang.Comparable,);
Parameter(removeCategoryLabelURL,java.lang.Comparable,);
Parameter(getCategoryJava2DCoordinate,org.jfree.chart.axis.CategoryAnchor,);
Parameter(getCategoryJava2DCoordinate,int,);
Parameter(getCategoryJava2DCoordinate,int,);
Parameter(getCategoryJava2DCoordinate,java.awt.geom.Rectangle2D,);
Parameter(getCategoryJava2DCoordinate,org.jfree.ui.RectangleEdge,);
Parameter(getCategoryStart,int,);
Parameter(getCategoryStart,int,);
Parameter(getCategoryStart,java.awt.geom.Rectangle2D,);
Parameter(getCategoryStart,org.jfree.ui.RectangleEdge,);
Parameter(getCategoryMiddle,int,);
Parameter(getCategoryMiddle,int,);
Parameter(getCategoryMiddle,java.awt.geom.Rectangle2D,);
Parameter(getCategoryMiddle,org.jfree.ui.RectangleEdge,);
Parameter(getCategoryEnd,int,);
Parameter(getCategoryEnd,int,);
Parameter(getCategoryEnd,java.awt.geom.Rectangle2D,);
Parameter(getCategoryEnd,org.jfree.ui.RectangleEdge,);
Parameter(getCategoryMiddle$2,java.lang.Comparable,);
Parameter(getCategoryMiddle$2,java.util.List,);
Parameter(getCategoryMiddle$2,java.awt.geom.Rectangle2D,);
Parameter(getCategoryMiddle$2,org.jfree.ui.RectangleEdge,);
Parameter(getCategorySeriesMiddle,java.lang.Comparable,);
Parameter(getCategorySeriesMiddle,java.lang.Comparable,);
Parameter(getCategorySeriesMiddle,org.jfree.data.category.CategoryDataset,);
Parameter(getCategorySeriesMiddle,double,);
Parameter(getCategorySeriesMiddle,java.awt.geom.Rectangle2D,);
Parameter(getCategorySeriesMiddle,org.jfree.ui.RectangleEdge,);
Parameter(getCategorySeriesMiddle$2,int,);
Parameter(getCategorySeriesMiddle$2,int,);
Parameter(getCategorySeriesMiddle$2,int,);
Parameter(getCategorySeriesMiddle$2,int,);
Parameter(getCategorySeriesMiddle$2,double,);
Parameter(getCategorySeriesMiddle$2,java.awt.geom.Rectangle2D,);
Parameter(getCategorySeriesMiddle$2,org.jfree.ui.RectangleEdge,);
Parameter(calculateCategorySize,int,);
Parameter(calculateCategorySize,java.awt.geom.Rectangle2D,);
Parameter(calculateCategorySize,org.jfree.ui.RectangleEdge,);
Parameter(calculateCategoryGapSize,int,);
Parameter(calculateCategoryGapSize,java.awt.geom.Rectangle2D,);
Parameter(calculateCategoryGapSize,org.jfree.ui.RectangleEdge,);
Parameter(reserveSpace,java.awt.Graphics2D,);
Parameter(reserveSpace,org.jfree.chart.plot.Plot,);
Parameter(reserveSpace,java.awt.geom.Rectangle2D,);
Parameter(reserveSpace,org.jfree.ui.RectangleEdge,);
Parameter(reserveSpace,org.jfree.chart.axis.AxisSpace,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,double,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,org.jfree.ui.RectangleEdge,);
Parameter(draw,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(drawCategoryLabels,java.awt.Graphics2D,);
Parameter(drawCategoryLabels,java.awt.geom.Rectangle2D,);
Parameter(drawCategoryLabels,java.awt.geom.Rectangle2D,);
Parameter(drawCategoryLabels,org.jfree.ui.RectangleEdge,);
Parameter(drawCategoryLabels,org.jfree.chart.axis.AxisState,);
Parameter(drawCategoryLabels,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(refreshTicks,java.awt.Graphics2D,);
Parameter(refreshTicks,org.jfree.chart.axis.AxisState,);
Parameter(refreshTicks,java.awt.geom.Rectangle2D,);
Parameter(refreshTicks,org.jfree.ui.RectangleEdge,);
Parameter(drawTickMarks,java.awt.Graphics2D,);
Parameter(drawTickMarks,double,);
Parameter(drawTickMarks,java.awt.geom.Rectangle2D,);
Parameter(drawTickMarks,org.jfree.ui.RectangleEdge,);
Parameter(drawTickMarks,org.jfree.chart.axis.AxisState,);
Parameter(createLabel,java.lang.Comparable,);
Parameter(createLabel,float,);
Parameter(createLabel,org.jfree.ui.RectangleEdge,);
Parameter(createLabel,java.awt.Graphics2D,);
Parameter(calculateTextBlockWidth,org.jfree.text.TextBlock,);
Parameter(calculateTextBlockWidth,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(calculateTextBlockWidth,java.awt.Graphics2D,);
Parameter(calculateTextBlockHeight,org.jfree.text.TextBlock,);
Parameter(calculateTextBlockHeight,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(calculateTextBlockHeight,java.awt.Graphics2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(readPaintMap,java.io.ObjectInputStream,);
Parameter(writePaintMap,java.util.Map,);
Parameter(writePaintMap,java.io.ObjectOutputStream,);
Parameter(equalPaintMaps,java.util.Map,);
Parameter(equalPaintMaps,java.util.Map,);
Parameter(drawCategoryLabels$2,java.awt.Graphics2D,);
Parameter(drawCategoryLabels$2,java.awt.geom.Rectangle2D,);
Parameter(drawCategoryLabels$2,org.jfree.ui.RectangleEdge,);
Parameter(drawCategoryLabels$2,org.jfree.chart.axis.AxisState,);
Parameter(drawCategoryLabels$2,org.jfree.chart.plot.PlotRenderingInfo,);
SuperClass(org.jfree.chart.axis.Axis);
Generalization(org.jfree.chart.axis.Axis);
Composition(org.jfree.chart.axis.CategoryLabelPositions);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,<init> --> <init>$2,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> getCategoryMiddle,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> getCategoryEnd,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryStart --> getLowerMargin,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryStart --> calculateCategorySize,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryStart --> calculateCategoryGapSize,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryMiddle --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryMiddle --> calculateCategorySize,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryEnd --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryEnd --> calculateCategorySize,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryMiddle$2 --> getCategoryMiddle,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getCategoryEnd,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle$2 --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle$2 --> getCategoryEnd,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateCategorySize --> getLowerMargin,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateCategorySize --> getUpperMargin,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateCategorySize --> getCategoryMargin,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateCategoryGapSize --> getCategoryMargin,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> refreshTicks,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> drawTickMarks,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> drawCategoryLabels,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> refreshTicks,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getTickLabelFont,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getTickLabelPaint,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategoryEnd,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategoryLabelToolTip,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategoryLabelURL,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> calculateCategorySize,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getTickLabelFont,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> createLabel,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> calculateTextBlockHeight,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> calculateTextBlockWidth,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getCategoryMiddle$2,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,createLabel --> getTickLabelFont,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,createLabel --> getTickLabelPaint,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,equals --> equalPaintMaps,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,writeObject --> writePaintMap,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,readObject --> readPaintMap,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels$2 --> drawCategoryLabels,org.jfree.chart.axis.CategoryAxis,);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> lowerMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> upperMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> categoryMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> maximumCategoryLabelLines,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> maximumCategoryLabelWidthRatio,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getLowerMargin --> lowerMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setLowerMargin --> lowerMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getUpperMargin --> upperMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setUpperMargin --> upperMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryMargin --> categoryMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setCategoryMargin --> categoryMargin,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getMaximumCategoryLabelLines --> maximumCategoryLabelLines,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setMaximumCategoryLabelLines --> maximumCategoryLabelLines,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getMaximumCategoryLabelWidthRatio --> maximumCategoryLabelWidthRatio,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setMaximumCategoryLabelWidthRatio --> maximumCategoryLabelWidthRatio,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryLabelPositionOffset --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setCategoryLabelPositionOffset --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryLabelPositions --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setCategoryLabelPositions --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getTickLabelFont --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setTickLabelFont --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getTickLabelPaint --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,setTickLabelPaint --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,addCategoryLabelToolTip --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryLabelToolTip --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelToolTip --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clearCategoryLabelToolTips --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,addCategoryLabelURL --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryLabelURL --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelURL --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clearCategoryLabelURLs --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,reserveSpace --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,refreshTicks --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,refreshTicks --> maximumCategoryLabelWidthRatio,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,createLabel --> maximumCategoryLabelLines,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,clone --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> lowerMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> upperMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> categoryMargin,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> maximumCategoryLabelWidthRatio,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> categoryLabelPositionOffset,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> categoryLabelPositions,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> categoryLabelToolTips,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> categoryLabelURLs,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> tickLabelFontMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,equals --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,writeObject --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,readObject --> tickLabelPaintMap,org.jfree.chart.axis.CategoryAxis,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,<init>$2 --> STANDARD,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> START,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> MIDDLE,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,getCategoryJava2DCoordinate --> END,org.jfree.chart.axis.CategoryAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryAxis,refreshTicks --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,<init>$2 --> <init>,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setLowerMargin --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setUpperMargin --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setCategoryMargin --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setMaximumCategoryLabelLines --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setMaximumCategoryLabelWidthRatio --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setCategoryLabelPositionOffset --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setCategoryLabelPositions --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setCategoryLabelPositions --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getTickLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getTickLabelFont --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setTickLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setTickLabelFont --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getTickLabelPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getTickLabelPaint --> getTickLabelPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setTickLabelPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,setTickLabelPaint --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,addCategoryLabelToolTip --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,addCategoryLabelToolTip --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryLabelToolTip --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelToolTip --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelToolTip --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,clearCategoryLabelToolTips --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,addCategoryLabelURL --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,addCategoryLabelURL --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryLabelURL --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelURL --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,removeCategoryLabelURL --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,clearCategoryLabelURLs --> fireChangeEvent,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategoryMiddle$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getColumnIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getRowIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,getCategorySeriesMiddle --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> <init>,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> isVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> isTickLabelsVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> getTickLabelFont,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> <init>,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> getMax,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> getLabelEnclosure,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,reserveSpace --> add,org.jfree.chart.axis.AxisSpace,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> isVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> <init>$2,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> isAxisLineVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> drawAxisLine,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> isTickMarksVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> createAndAddEntity,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> getAttributedLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> drawAttributedLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> getLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,draw --> drawLabel,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> isTickLabelsVisible,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> setTicks,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategory,org.jfree.chart.axis.CategoryTick,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCursor,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getMax,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getCategoryAnchor,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getLabel,org.jfree.chart.axis.CategoryTick,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getLabelAnchor,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getAngle,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getOwner,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> getEntityCollection,org.jfree.chart.ChartRenderingInfo,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> <init>,org.jfree.chart.entity.CategoryLabelEntity,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawCategoryLabels --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getCategoriesForAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getWidthRatio,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getWidthType,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getLabelAnchor,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getRotationAnchor,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> getAngle,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> <init>,org.jfree.chart.axis.CategoryTick,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,refreshTicks --> setMax,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getPlot,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getTickMarkInsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getTickMarkOutsideLength,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getCategoriesForAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getTickMarkPaint,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> getTickMarkStroke,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> cursorUp,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> cursorDown,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> cursorLeft,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,drawTickMarks --> cursorRight,org.jfree.chart.axis.AxisState,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateTextBlockWidth --> getTickLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateTextBlockWidth --> getAngle,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateTextBlockHeight --> getTickLabelInsets,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,calculateTextBlockHeight --> getAngle,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,clone --> clone,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,equals --> equals,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.axis.CategoryAxis,hashCode --> hashCode,org.jfree.chart.axis.Axis,);
EndClass 80
StartClass 81
Class(org.jfree.chart.renderer.category.CategoryItemRenderer,Y,Y,Public);
Method(getPassCount,int,Public,N,Y);
Method(getPlot,org.jfree.chart.plot.CategoryPlot,Public,N,Y);
Method(setPlot,void,Public,N,Y);
Method(addChangeListener,void,Public,N,Y);
Method(removeChangeListener,void,Public,N,Y);
Method(findRangeBounds,org.jfree.data.Range,Public,N,Y);
Method(initialise,org.jfree.chart.renderer.category.CategoryItemRendererState,Public,N,Y);
Method(getItemVisible,boolean,Public,N,Y);
Method(isSeriesVisible,boolean,Public,N,Y);
Method(getSeriesVisible,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisible,void,Public,N,Y);
Method(setSeriesVisible$2,void,Public,N,Y);
Method(getSeriesVisible$2,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisible$3,void,Public,N,Y);
Method(setSeriesVisible$4,void,Public,N,Y);
Method(getBaseSeriesVisible,boolean,Public,N,Y);
Method(setBaseSeriesVisible,void,Public,N,Y);
Method(setBaseSeriesVisible$2,void,Public,N,Y);
Method(isSeriesVisibleInLegend,boolean,Public,N,Y);
Method(getSeriesVisibleInLegend,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisibleInLegend,void,Public,N,Y);
Method(setSeriesVisibleInLegend$2,void,Public,N,Y);
Method(getSeriesVisibleInLegend$2,java.lang.Boolean,Public,N,Y);
Method(setSeriesVisibleInLegend$3,void,Public,N,Y);
Method(setSeriesVisibleInLegend$4,void,Public,N,Y);
Method(getBaseSeriesVisibleInLegend,boolean,Public,N,Y);
Method(setBaseSeriesVisibleInLegend,void,Public,N,Y);
Method(setBaseSeriesVisibleInLegend$2,void,Public,N,Y);
Method(getItemPaint,java.awt.Paint,Public,N,Y);
Method(setPaint,void,Public,N,Y);
Method(getSeriesPaint,java.awt.Paint,Public,N,Y);
Method(setSeriesPaint,void,Public,N,Y);
Method(getBasePaint,java.awt.Paint,Public,N,Y);
Method(setBasePaint,void,Public,N,Y);
Method(getItemOutlinePaint,java.awt.Paint,Public,N,Y);
Method(setOutlinePaint,void,Public,N,Y);
Method(getSeriesOutlinePaint,java.awt.Paint,Public,N,Y);
Method(setSeriesOutlinePaint,void,Public,N,Y);
Method(getBaseOutlinePaint,java.awt.Paint,Public,N,Y);
Method(setBaseOutlinePaint,void,Public,N,Y);
Method(getItemStroke,java.awt.Stroke,Public,N,Y);
Method(setStroke,void,Public,N,Y);
Method(getSeriesStroke,java.awt.Stroke,Public,N,Y);
Method(setSeriesStroke,void,Public,N,Y);
Method(getBaseStroke,java.awt.Stroke,Public,N,Y);
Method(setBaseStroke,void,Public,N,Y);
Method(getItemOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(setOutlineStroke,void,Public,N,Y);
Method(getSeriesOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(setSeriesOutlineStroke,void,Public,N,Y);
Method(getBaseOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(setBaseOutlineStroke,void,Public,N,Y);
Method(getItemShape,java.awt.Shape,Public,N,Y);
Method(setShape,void,Public,N,Y);
Method(getSeriesShape,java.awt.Shape,Public,N,Y);
Method(setSeriesShape,void,Public,N,Y);
Method(getBaseShape,java.awt.Shape,Public,N,Y);
Method(setBaseShape,void,Public,N,Y);
Method(isItemLabelVisible,boolean,Public,N,Y);
Method(setItemLabelsVisible,void,Public,N,Y);
Method(setItemLabelsVisible$2,void,Public,N,Y);
Method(setItemLabelsVisible$3,void,Public,N,Y);
Method(isSeriesItemLabelsVisible,boolean,Public,N,Y);
Method(setSeriesItemLabelsVisible,void,Public,N,Y);
Method(setSeriesItemLabelsVisible$2,void,Public,N,Y);
Method(setSeriesItemLabelsVisible$3,void,Public,N,Y);
Method(getBaseItemLabelsVisible,java.lang.Boolean,Public,N,Y);
Method(setBaseItemLabelsVisible,void,Public,N,Y);
Method(setBaseItemLabelsVisible$2,void,Public,N,Y);
Method(setBaseItemLabelsVisible$3,void,Public,N,Y);
Method(getItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,Y);
Method(setItemLabelGenerator,void,Public,N,Y);
Method(getSeriesItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,Y);
Method(setSeriesItemLabelGenerator,void,Public,N,Y);
Method(getBaseItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,Y);
Method(setBaseItemLabelGenerator,void,Public,N,Y);
Method(getToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,Y);
Method(getToolTipGenerator$2,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,Y);
Method(setToolTipGenerator,void,Public,N,Y);
Method(getSeriesToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,Y);
Method(setSeriesToolTipGenerator,void,Public,N,Y);
Method(getBaseToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,Y);
Method(setBaseToolTipGenerator,void,Public,N,Y);
Method(getItemLabelFont,java.awt.Font,Public,N,Y);
Method(getItemLabelFont$2,java.awt.Font,Public,N,Y);
Method(setItemLabelFont,void,Public,N,Y);
Method(getSeriesItemLabelFont,java.awt.Font,Public,N,Y);
Method(setSeriesItemLabelFont,void,Public,N,Y);
Method(getBaseItemLabelFont,java.awt.Font,Public,N,Y);
Method(setBaseItemLabelFont,void,Public,N,Y);
Method(getItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(getItemLabelPaint$2,java.awt.Paint,Public,N,Y);
Method(setItemLabelPaint,void,Public,N,Y);
Method(getSeriesItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(setSeriesItemLabelPaint,void,Public,N,Y);
Method(getBaseItemLabelPaint,java.awt.Paint,Public,N,Y);
Method(setBaseItemLabelPaint,void,Public,N,Y);
Method(getPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(getPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setPositiveItemLabelPosition,void,Public,N,Y);
Method(setPositiveItemLabelPosition$2,void,Public,N,Y);
Method(getSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setSeriesPositiveItemLabelPosition,void,Public,N,Y);
Method(setSeriesPositiveItemLabelPosition$2,void,Public,N,Y);
Method(getBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setBasePositiveItemLabelPosition,void,Public,N,Y);
Method(setBasePositiveItemLabelPosition$2,void,Public,N,Y);
Method(getNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(getNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setNegativeItemLabelPosition,void,Public,N,Y);
Method(setNegativeItemLabelPosition$2,void,Public,N,Y);
Method(getSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setSeriesNegativeItemLabelPosition,void,Public,N,Y);
Method(setSeriesNegativeItemLabelPosition$2,void,Public,N,Y);
Method(getBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,Y);
Method(setBaseNegativeItemLabelPosition,void,Public,N,Y);
Method(setBaseNegativeItemLabelPosition$2,void,Public,N,Y);
Method(getItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,Y);
Method(setItemURLGenerator,void,Public,N,Y);
Method(getSeriesItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,Y);
Method(setSeriesItemURLGenerator,void,Public,N,Y);
Method(getBaseItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,Y);
Method(setBaseItemURLGenerator,void,Public,N,Y);
Method(getLegendItem,org.jfree.chart.LegendItem,Public,N,Y);
Method(drawBackground,void,Public,N,Y);
Method(drawOutline,void,Public,N,Y);
Method(drawItem,void,Public,N,Y);
Method(drawDomainGridline,void,Public,N,Y);
Method(drawRangeGridline,void,Public,N,Y);
Method(drawDomainMarker,void,Public,N,Y);
Method(drawRangeMarker,void,Public,N,Y);
Method(getItemMiddle,double,Public,N,Y);
Parameter(setPlot,org.jfree.chart.plot.CategoryPlot,);
Parameter(addChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(findRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(initialise,java.awt.Graphics2D,);
Parameter(initialise,java.awt.geom.Rectangle2D,);
Parameter(initialise,org.jfree.chart.plot.CategoryPlot,);
Parameter(initialise,int,);
Parameter(initialise,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(getItemVisible,int,);
Parameter(getItemVisible,int,);
Parameter(isSeriesVisible,int,);
Parameter(setSeriesVisible,java.lang.Boolean,);
Parameter(setSeriesVisible$2,java.lang.Boolean,);
Parameter(setSeriesVisible$2,boolean,);
Parameter(getSeriesVisible$2,int,);
Parameter(setSeriesVisible$3,int,);
Parameter(setSeriesVisible$3,java.lang.Boolean,);
Parameter(setSeriesVisible$4,int,);
Parameter(setSeriesVisible$4,java.lang.Boolean,);
Parameter(setSeriesVisible$4,boolean,);
Parameter(setBaseSeriesVisible,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(isSeriesVisibleInLegend,int,);
Parameter(setSeriesVisibleInLegend,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,boolean,);
Parameter(getSeriesVisibleInLegend$2,int,);
Parameter(setSeriesVisibleInLegend$3,int,);
Parameter(setSeriesVisibleInLegend$3,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,int,);
Parameter(setSeriesVisibleInLegend$4,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,boolean,);
Parameter(setBaseSeriesVisibleInLegend,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(getItemPaint,int,);
Parameter(getItemPaint,int,);
Parameter(setPaint,java.awt.Paint,);
Parameter(getSeriesPaint,int,);
Parameter(setSeriesPaint,int,);
Parameter(setSeriesPaint,java.awt.Paint,);
Parameter(setBasePaint,java.awt.Paint,);
Parameter(getItemOutlinePaint,int,);
Parameter(getItemOutlinePaint,int,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(getSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,java.awt.Paint,);
Parameter(setBaseOutlinePaint,java.awt.Paint,);
Parameter(getItemStroke,int,);
Parameter(getItemStroke,int,);
Parameter(setStroke,java.awt.Stroke,);
Parameter(getSeriesStroke,int,);
Parameter(setSeriesStroke,int,);
Parameter(setSeriesStroke,java.awt.Stroke,);
Parameter(setBaseStroke,java.awt.Stroke,);
Parameter(getItemOutlineStroke,int,);
Parameter(getItemOutlineStroke,int,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(getSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,java.awt.Stroke,);
Parameter(setBaseOutlineStroke,java.awt.Stroke,);
Parameter(getItemShape,int,);
Parameter(getItemShape,int,);
Parameter(setShape,java.awt.Shape,);
Parameter(getSeriesShape,int,);
Parameter(setSeriesShape,int,);
Parameter(setSeriesShape,java.awt.Shape,);
Parameter(setBaseShape,java.awt.Shape,);
Parameter(isItemLabelVisible,int,);
Parameter(isItemLabelVisible,int,);
Parameter(setItemLabelsVisible,boolean,);
Parameter(setItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,boolean,);
Parameter(isSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,boolean,);
Parameter(setSeriesItemLabelsVisible$2,int,);
Parameter(setSeriesItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,int,);
Parameter(setSeriesItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,boolean,);
Parameter(setBaseItemLabelsVisible,boolean,);
Parameter(setBaseItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,boolean,);
Parameter(getItemLabelGenerator,int,);
Parameter(getItemLabelGenerator,int,);
Parameter(setItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(getSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(setBaseItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(getToolTipGenerator,int,);
Parameter(getToolTipGenerator,int,);
Parameter(setToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(getSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(setBaseToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(getItemLabelFont,int,);
Parameter(getItemLabelFont,int,);
Parameter(setItemLabelFont,java.awt.Font,);
Parameter(getSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,java.awt.Font,);
Parameter(setBaseItemLabelFont,java.awt.Font,);
Parameter(getItemLabelPaint,int,);
Parameter(getItemLabelPaint,int,);
Parameter(setItemLabelPaint,java.awt.Paint,);
Parameter(getSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,java.awt.Paint,);
Parameter(setBaseItemLabelPaint,java.awt.Paint,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(setPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,boolean,);
Parameter(getSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,int,);
Parameter(setSeriesPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,boolean,);
Parameter(setBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,boolean,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(setNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,boolean,);
Parameter(getSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,int,);
Parameter(setSeriesNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,boolean,);
Parameter(setBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,boolean,);
Parameter(getItemURLGenerator,int,);
Parameter(getItemURLGenerator,int,);
Parameter(setItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
Parameter(getSeriesItemURLGenerator,int,);
Parameter(setSeriesItemURLGenerator,int,);
Parameter(setSeriesItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
Parameter(setBaseItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
Parameter(getLegendItem,int,);
Parameter(getLegendItem,int,);
Parameter(drawBackground,java.awt.Graphics2D,);
Parameter(drawBackground,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawBackground,java.awt.geom.Rectangle2D,);
Parameter(drawOutline,java.awt.Graphics2D,);
Parameter(drawOutline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawOutline,java.awt.geom.Rectangle2D,);
Parameter(drawItem,java.awt.Graphics2D,);
Parameter(drawItem,org.jfree.chart.renderer.category.CategoryItemRendererState,);
Parameter(drawItem,java.awt.geom.Rectangle2D,);
Parameter(drawItem,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawItem,org.jfree.chart.axis.CategoryAxis,);
Parameter(drawItem,org.jfree.chart.axis.ValueAxis,);
Parameter(drawItem,org.jfree.data.category.CategoryDataset,);
Parameter(drawItem,int,);
Parameter(drawItem,int,);
Parameter(drawItem,int,);
Parameter(drawDomainGridline,java.awt.Graphics2D,);
Parameter(drawDomainGridline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawDomainGridline,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridline,double,);
Parameter(drawRangeGridline,java.awt.Graphics2D,);
Parameter(drawRangeGridline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawRangeGridline,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeGridline,java.awt.geom.Rectangle2D,);
Parameter(drawRangeGridline,double,);
Parameter(drawDomainMarker,java.awt.Graphics2D,);
Parameter(drawDomainMarker,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawDomainMarker,org.jfree.chart.axis.CategoryAxis,);
Parameter(drawDomainMarker,org.jfree.chart.plot.CategoryMarker,);
Parameter(drawDomainMarker,java.awt.geom.Rectangle2D,);
Parameter(drawRangeMarker,java.awt.Graphics2D,);
Parameter(drawRangeMarker,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawRangeMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(drawRangeMarker,java.awt.geom.Rectangle2D,);
Parameter(getItemMiddle,java.lang.Comparable,);
Parameter(getItemMiddle,java.lang.Comparable,);
Parameter(getItemMiddle,org.jfree.data.category.CategoryDataset,);
Parameter(getItemMiddle,org.jfree.chart.axis.CategoryAxis,);
Parameter(getItemMiddle,java.awt.geom.Rectangle2D,);
Parameter(getItemMiddle,org.jfree.ui.RectangleEdge,);
Realization(org.jfree.chart.LegendItemSource);
EndClass 81
StartClass 82
Class(org.jfree.chart.plot.CategoryMarker,N,N,Public);
Attribute(key,java.lang.Comparable,Private,N,N,);
Attribute(drawAsLine,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(setKey,void,Public,N,N);
Method(getDrawAsLine,boolean,Public,N,N);
Method(setDrawAsLine,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$2,java.awt.Stroke,);
Parameter(<init>$3,java.lang.Comparable,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,float,);
Parameter(setKey,java.lang.Comparable,);
Parameter(setDrawAsLine,boolean,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.plot.Marker);
Generalization(org.jfree.chart.plot.Marker);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,<init> --> <init>$2,org.jfree.chart.plot.CategoryMarker,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,<init>$2 --> <init>$3,org.jfree.chart.plot.CategoryMarker,);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,<init>$3 --> drawAsLine,org.jfree.chart.plot.CategoryMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,<init>$3 --> key,org.jfree.chart.plot.CategoryMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,getKey --> key,org.jfree.chart.plot.CategoryMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,setKey --> key,org.jfree.chart.plot.CategoryMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,getDrawAsLine --> drawAsLine,org.jfree.chart.plot.CategoryMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,setDrawAsLine --> drawAsLine,org.jfree.chart.plot.CategoryMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,equals --> key,org.jfree.chart.plot.CategoryMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryMarker,equals --> drawAsLine,org.jfree.chart.plot.CategoryMarker,READ);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,<init>$3 --> <init>$3,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,<init>$3 --> setLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,setKey --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,setKey --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,setKey --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,setDrawAsLine --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,setDrawAsLine --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.CategoryMarker,equals --> equals,org.jfree.chart.plot.Marker,);
EndClass 82
StartClass 83
Class(org.jfree.chart.annotations.CategoryAnnotation,Y,Y,Public);
Method(draw,void,Public,N,Y);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,org.jfree.chart.plot.CategoryPlot,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,org.jfree.chart.axis.CategoryAxis,);
Parameter(draw,org.jfree.chart.axis.ValueAxis,);
Realization(org.jfree.chart.annotations.Annotation);
EndClass 83
StartClass 84
Class(org.jfree.chart.plot.CategoryCrosshairState,N,N,Public);
Attribute(rowKey,java.lang.Comparable,Private,N,N,);
Attribute(columnKey,java.lang.Comparable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getRowKey,java.lang.Comparable,Public,N,N);
Method(setRowKey,void,Public,N,N);
Method(getColumnKey,java.lang.Comparable,Public,N,N);
Method(setColumnKey,void,Public,N,N);
Method(updateCrosshairPoint,void,Public,N,N);
Method(updateCrosshairX,void,Public,N,N);
Parameter(setRowKey,java.lang.Comparable,);
Parameter(setColumnKey,java.lang.Comparable,);
Parameter(updateCrosshairPoint,java.lang.Comparable,);
Parameter(updateCrosshairPoint,java.lang.Comparable,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,int,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,double,);
Parameter(updateCrosshairPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(updateCrosshairX,java.lang.Comparable,);
Parameter(updateCrosshairX,java.lang.Comparable,);
Parameter(updateCrosshairX,int,);
Parameter(updateCrosshairX,double,);
Parameter(updateCrosshairX,org.jfree.chart.plot.PlotOrientation,);
SuperClass(org.jfree.chart.plot.CrosshairState);
Generalization(org.jfree.chart.plot.CrosshairState);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,<init> --> rowKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,<init> --> columnKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,getRowKey --> rowKey,org.jfree.chart.plot.CategoryCrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,setRowKey --> rowKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,getColumnKey --> columnKey,org.jfree.chart.plot.CategoryCrosshairState,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,setColumnKey --> columnKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> rowKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> columnKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> rowKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> columnKey,org.jfree.chart.plot.CategoryCrosshairState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,<init> --> <init>,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> getAnchor,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> getCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> setCrosshairY,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> setDatasetIndex,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairPoint --> setCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> getAnchor,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> getCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> setDatasetIndex,org.jfree.chart.plot.CrosshairState,);
Call(METHOD,org.jfree.chart.plot.CategoryCrosshairState,updateCrosshairX --> setCrosshairDistance,org.jfree.chart.plot.CrosshairState,);
EndClass 84
StartClass 85
Class(org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(plot,org.jfree.chart.plot.CategoryPlot,Private,N,N,);
Attribute(itemLabelGeneratorMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.CategoryItemLabelGenerator);
Attribute(baseItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Private,N,N,);
Attribute(toolTipGeneratorMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.CategoryToolTipGenerator);
Attribute(baseToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Private,N,N,);
Attribute(itemURLGeneratorMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.urls.CategoryURLGenerator);
Attribute(baseItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Private,N,N,);
Attribute(legendItemLabelGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Private,N,N,);
Attribute(legendItemToolTipGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Private,N,N,);
Attribute(legendItemURLGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Private,N,N,);
Attribute(rowCount,int,Private,N,N,);
Attribute(columnCount,int,Private,N,N,);
Attribute(itemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Private,N,N,);
Attribute(toolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Private,N,N,);
Attribute(itemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(getPassCount,int,Public,N,N);
Method(getPlot,org.jfree.chart.plot.CategoryPlot,Public,N,N);
Method(setPlot,void,Public,N,N);
Method(getItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,N);
Method(getSeriesItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,N);
Method(setSeriesItemLabelGenerator,void,Public,N,N);
Method(getBaseItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,Public,N,N);
Method(setBaseItemLabelGenerator,void,Public,N,N);
Method(getToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,N);
Method(getSeriesToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,N);
Method(setSeriesToolTipGenerator,void,Public,N,N);
Method(getBaseToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,N);
Method(setBaseToolTipGenerator,void,Public,N,N);
Method(getItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,N);
Method(getSeriesItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,N);
Method(setSeriesItemURLGenerator,void,Public,N,N);
Method(getBaseItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,Public,N,N);
Method(setBaseItemURLGenerator,void,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(createState,org.jfree.chart.renderer.category.CategoryItemRendererState,Protected,N,N);
Method(initialise,org.jfree.chart.renderer.category.CategoryItemRendererState,Public,N,N);
Method(findRangeBounds,org.jfree.data.Range,Public,N,N);
Method(findRangeBounds$2,org.jfree.data.Range,Protected,N,N);
Method(getItemMiddle,double,Public,N,N);
Method(drawBackground,void,Public,N,N);
Method(drawOutline,void,Public,N,N);
Method(drawDomainGridline,void,Public,N,N);
Method(drawRangeGridline,void,Public,N,N);
Method(drawRangeLine,void,Public,N,N);
Method(drawDomainMarker,void,Public,N,N);
Method(drawRangeMarker,void,Public,N,N);
Method(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Point2D,Protected,N,N);
Method(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Point2D,Protected,N,N);
Method(getLegendItem,org.jfree.chart.LegendItem,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(getDrawingSupplier,org.jfree.chart.plot.DrawingSupplier,Public,N,N);
Method(updateCrosshairValues,void,Protected,N,N);
Method(drawItemLabel,void,Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(getDomainAxis,org.jfree.chart.axis.CategoryAxis,Protected,N,N);
Method(getRangeAxis,org.jfree.chart.axis.ValueAxis,Protected,N,N);
Method(getLegendItems,org.jfree.chart.LegendItemCollection,Public,N,N);
Method(getLegendItemLabelGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Public,N,N);
Method(setLegendItemLabelGenerator,void,Public,N,N);
Method(getLegendItemToolTipGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Public,N,N);
Method(setLegendItemToolTipGenerator,void,Public,N,N);
Method(getLegendItemURLGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,Public,N,N);
Method(setLegendItemURLGenerator,void,Public,N,N);
Method(addItemEntity,void,Protected,N,N);
Method(addEntity,void,Protected,N,N);
Method(setItemLabelGenerator,void,Public,N,N);
Method(getToolTipGenerator$2,org.jfree.chart.labels.CategoryToolTipGenerator,Public,N,N);
Method(setToolTipGenerator,void,Public,N,N);
Method(setItemURLGenerator,void,Public,N,N);
Parameter(setPlot,org.jfree.chart.plot.CategoryPlot,);
Parameter(getItemLabelGenerator,int,);
Parameter(getItemLabelGenerator,int,);
Parameter(getSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,int,);
Parameter(setSeriesItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(setBaseItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(getToolTipGenerator,int,);
Parameter(getToolTipGenerator,int,);
Parameter(getSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,int,);
Parameter(setSeriesToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(setBaseToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(getItemURLGenerator,int,);
Parameter(getItemURLGenerator,int,);
Parameter(getSeriesItemURLGenerator,int,);
Parameter(setSeriesItemURLGenerator,int,);
Parameter(setSeriesItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
Parameter(setBaseItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
Parameter(createState,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(initialise,java.awt.Graphics2D,);
Parameter(initialise,java.awt.geom.Rectangle2D,);
Parameter(initialise,org.jfree.chart.plot.CategoryPlot,);
Parameter(initialise,int,);
Parameter(initialise,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(findRangeBounds,org.jfree.data.category.CategoryDataset,);
Parameter(findRangeBounds$2,org.jfree.data.category.CategoryDataset,);
Parameter(findRangeBounds$2,boolean,);
Parameter(getItemMiddle,java.lang.Comparable,);
Parameter(getItemMiddle,java.lang.Comparable,);
Parameter(getItemMiddle,org.jfree.data.category.CategoryDataset,);
Parameter(getItemMiddle,org.jfree.chart.axis.CategoryAxis,);
Parameter(getItemMiddle,java.awt.geom.Rectangle2D,);
Parameter(getItemMiddle,org.jfree.ui.RectangleEdge,);
Parameter(drawBackground,java.awt.Graphics2D,);
Parameter(drawBackground,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawBackground,java.awt.geom.Rectangle2D,);
Parameter(drawOutline,java.awt.Graphics2D,);
Parameter(drawOutline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawOutline,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridline,java.awt.Graphics2D,);
Parameter(drawDomainGridline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawDomainGridline,java.awt.geom.Rectangle2D,);
Parameter(drawDomainGridline,double,);
Parameter(drawRangeGridline,java.awt.Graphics2D,);
Parameter(drawRangeGridline,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawRangeGridline,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeGridline,java.awt.geom.Rectangle2D,);
Parameter(drawRangeGridline,double,);
Parameter(drawRangeLine,java.awt.Graphics2D,);
Parameter(drawRangeLine,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawRangeLine,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeLine,java.awt.geom.Rectangle2D,);
Parameter(drawRangeLine,double,);
Parameter(drawRangeLine,java.awt.Paint,);
Parameter(drawRangeLine,java.awt.Stroke,);
Parameter(drawDomainMarker,java.awt.Graphics2D,);
Parameter(drawDomainMarker,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawDomainMarker,org.jfree.chart.axis.CategoryAxis,);
Parameter(drawDomainMarker,org.jfree.chart.plot.CategoryMarker,);
Parameter(drawDomainMarker,java.awt.geom.Rectangle2D,);
Parameter(drawRangeMarker,java.awt.Graphics2D,);
Parameter(drawRangeMarker,org.jfree.chart.plot.CategoryPlot,);
Parameter(drawRangeMarker,org.jfree.chart.axis.ValueAxis,);
Parameter(drawRangeMarker,org.jfree.chart.plot.Marker,);
Parameter(drawRangeMarker,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.Graphics2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.RectangleInsets,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.LengthAdjustmentType,);
Parameter(calculateDomainMarkerTextAnchorPoint,org.jfree.ui.RectangleAnchor,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.Graphics2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,java.awt.geom.Rectangle2D,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.RectangleInsets,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.LengthAdjustmentType,);
Parameter(calculateRangeMarkerTextAnchorPoint,org.jfree.ui.RectangleAnchor,);
Parameter(getLegendItem,int,);
Parameter(getLegendItem,int,);
Parameter(equals,java.lang.Object,);
Parameter(updateCrosshairValues,org.jfree.chart.plot.CategoryCrosshairState,);
Parameter(updateCrosshairValues,java.lang.Comparable,);
Parameter(updateCrosshairValues,java.lang.Comparable,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,int,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,double,);
Parameter(updateCrosshairValues,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawItemLabel,java.awt.Graphics2D,);
Parameter(drawItemLabel,org.jfree.chart.plot.PlotOrientation,);
Parameter(drawItemLabel,org.jfree.data.category.CategoryDataset,);
Parameter(drawItemLabel,int,);
Parameter(drawItemLabel,int,);
Parameter(drawItemLabel,double,);
Parameter(drawItemLabel,double,);
Parameter(drawItemLabel,boolean,);
Parameter(getDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Parameter(getDomainAxis,int,);
Parameter(getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Parameter(getRangeAxis,int,);
Parameter(setLegendItemLabelGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,);
Parameter(setLegendItemToolTipGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,);
Parameter(setLegendItemURLGenerator,org.jfree.chart.labels.CategorySeriesLabelGenerator,);
Parameter(addItemEntity,org.jfree.chart.entity.EntityCollection,);
Parameter(addItemEntity,org.jfree.data.category.CategoryDataset,);
Parameter(addItemEntity,int,);
Parameter(addItemEntity,int,);
Parameter(addItemEntity,java.awt.Shape,);
Parameter(addEntity,org.jfree.chart.entity.EntityCollection,);
Parameter(addEntity,java.awt.Shape,);
Parameter(addEntity,org.jfree.data.category.CategoryDataset,);
Parameter(addEntity,int,);
Parameter(addEntity,int,);
Parameter(addEntity,double,);
Parameter(addEntity,double,);
Parameter(setItemLabelGenerator,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Parameter(setToolTipGenerator,org.jfree.chart.labels.CategoryToolTipGenerator,);
Parameter(setItemURLGenerator,org.jfree.chart.urls.CategoryURLGenerator,);
SuperClass(org.jfree.chart.renderer.AbstractRenderer);
Generalization(org.jfree.chart.renderer.AbstractRenderer);
Realization(org.jfree.chart.renderer.category.CategoryItemRenderer);
Composition(org.jfree.chart.plot.CategoryPlot);
Composition(org.jfree.chart.labels.CategoryItemLabelGenerator);
Composition(org.jfree.chart.labels.CategoryToolTipGenerator);
Composition(org.jfree.chart.urls.CategoryURLGenerator);
Composition(org.jfree.chart.labels.CategorySeriesLabelGenerator);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getItemLabelGenerator --> getSeriesItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getToolTipGenerator --> getSeriesToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getItemURLGenerator --> getSeriesItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> setPlot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> createState,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds --> findRangeBounds$2,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> calculateDomainMarkerTextAnchorPoint,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> calculateRangeMarkerTextAnchorPoint,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> getPlot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getDrawingSupplier --> getPlot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> getLegendItem,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> getToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> getItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getPlot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getPlot --> plot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setPlot --> plot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemLabelGenerator --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemLabelGenerator --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesItemLabelGenerator --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getBaseItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseItemLabelGenerator --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getToolTipGenerator --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesToolTipGenerator --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesToolTipGenerator --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getBaseToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseToolTipGenerator --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemURLGenerator --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemURLGenerator --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getSeriesItemURLGenerator --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesItemURLGenerator --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getBaseItemURLGenerator --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseItemURLGenerator --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getRowCount --> rowCount,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getColumnCount --> columnCount,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> rowCount,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> rowCount,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> columnCount,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,updateCrosshairValues --> plot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemLabelGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> toolTipGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> itemURLGeneratorMap,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> baseItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> plot,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItemLabelGenerator --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemLabelGenerator --> legendItemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItemToolTipGenerator --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemToolTipGenerator --> legendItemToolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItemURLGenerator --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemURLGenerator --> legendItemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setItemLabelGenerator --> itemLabelGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getToolTipGenerator$2 --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setToolTipGenerator --> toolTipGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setItemURLGenerator --> itemURLGenerator,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> DEFAULT_GRIDLINE_PAINT,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> DEFAULT_GRIDLINE_STROKE,org.jfree.chart.plot.CategoryPlot,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,calculateDomainMarkerTextAnchorPoint --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,calculateDomainMarkerTextAnchorPoint --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,calculateRangeMarkerTextAnchorPoint --> HORIZONTAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,calculateRangeMarkerTextAnchorPoint --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> VERTICAL,org.jfree.chart.plot.PlotOrientation,READ);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> <init>,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,<init> --> <init>,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setPlot --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setSeriesItemURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setBaseItemURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,createState --> <init>,org.jfree.chart.renderer.category.CategoryItemRendererState,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,initialise --> setVisibleSeriesArray,org.jfree.chart.renderer.category.CategoryItemRendererState,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> getDataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> findRangeBounds$3,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,findRangeBounds$2 --> findRangeBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getItemMiddle --> getColumnKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getItemMiddle --> getCategoryMiddle$2,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawBackground --> drawBackground,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawOutline --> drawOutline,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> getDomainGridlinePaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainGridline --> getDomainGridlineStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> getRangeGridlinePaint,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeGridline --> getRangeGridlineStroke,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeLine --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getKey,org.jfree.chart.plot.CategoryMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getIndexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getColumnIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getAlpha,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getDrawAsLine,org.jfree.chart.plot.CategoryMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getDomainAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getCategoryMiddle,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getCategoryStart,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getCategoryEnd,org.jfree.chart.axis.CategoryAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabel,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelFont,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelOffset,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawDomainMarker --> getLabelTextAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getValue,org.jfree.chart.plot.ValueMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getRange,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getAlpha,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getRangeAxisEdge,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> valueToJava2D,org.jfree.chart.axis.ValueAxis,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabel,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelFont,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelOffset,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelTextAnchor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> calcAlignedStringBounds,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelBackgroundColor,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelPaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> drawAlignedString,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getStartValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getEndValue,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> intersects,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getGradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getOutlinePaint,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getOutlineStroke,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawRangeMarker --> getLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> isSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> generateLabel,org.jfree.chart.labels.CategorySeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupLegendShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> <init>$4,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setLabelFont,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> lookupLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setLabelPaint,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setSeriesKey,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setSeriesIndex,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setDataset,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItem --> setDatasetIndex,org.jfree.chart.LegendItem,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,equals --> equals,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,hashCode --> hashCode,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getDrawingSupplier --> getDrawingSupplier,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,updateCrosshairValues --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,updateCrosshairValues --> isRangeCrosshairLockedOnData,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,updateCrosshairValues --> updateCrosshairPoint,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,updateCrosshairValues --> updateCrosshairX,org.jfree.chart.plot.CategoryCrosshairState,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> generateLabel,org.jfree.chart.labels.CategoryItemLabelGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getPositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getItemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> calculateLabelAnchorPoint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getTextAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getAngle,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,drawItemLabel --> getRotationAnchor,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> clone,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,clone --> cloneMapValues,org.jfree.chart.util.CloneUtils,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getDomainAxis --> getDomainAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getDomainAxis --> getDomainAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getRangeAxis --> getRangeAxis$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getRangeAxis --> getRangeAxis,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> <init>,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> getIndexOf,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> getDataset$2,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> getRowRenderingOrder,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> isSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,getLegendItems --> add,org.jfree.chart.LegendItemCollection,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemLabelGenerator --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setLegendItemURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> getItemCreateEntity,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> generateToolTip,org.jfree.chart.labels.CategoryToolTipGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> generateURL,org.jfree.chart.urls.CategoryURLGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> getColumnKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> <init>$2,org.jfree.chart.entity.CategoryItemEntity,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addItemEntity --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getItemCreateEntity,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getDefaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getOrientation,org.jfree.chart.plot.CategoryPlot,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> generateToolTip,org.jfree.chart.labels.CategoryToolTipGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> generateURL,org.jfree.chart.urls.CategoryURLGenerator,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> getColumnKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> <init>$2,org.jfree.chart.entity.CategoryItemEntity,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,addEntity --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setItemLabelGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setToolTipGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,setItemURLGenerator --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
EndClass 85
StartClass 86
Class(org.jfree.chart.renderer.category.CategoryItemRendererState,N,N,Public);
Attribute(barWidth,double,Private,N,N,);
Attribute(seriesRunningTotal,double,Private,N,N,);
Attribute(visibleSeries,int[],Private,N,N,);
Attribute(crosshairState,org.jfree.chart.plot.CategoryCrosshairState,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getBarWidth,double,Public,N,N);
Method(setBarWidth,void,Public,N,N);
Method(getSeriesRunningTotal,double,Public,N,N);
Method(setSeriesRunningTotal,void,Public,N,N);
Method(getCrosshairState,org.jfree.chart.plot.CategoryCrosshairState,Public,N,N);
Method(setCrosshairState,void,Public,N,N);
Method(getVisibleSeriesIndex,int,Public,N,N);
Method(getVisibleSeriesCount,int,Public,N,N);
Method(getVisibleSeriesArray,int[],Public,N,N);
Method(setVisibleSeriesArray,void,Public,N,N);
Parameter(<init>,org.jfree.chart.plot.PlotRenderingInfo,);
Parameter(setBarWidth,double,);
Parameter(setSeriesRunningTotal,double,);
Parameter(setCrosshairState,org.jfree.chart.plot.CategoryCrosshairState,);
Parameter(getVisibleSeriesIndex,int,);
Parameter(setVisibleSeriesArray,int[],);
SuperClass(org.jfree.chart.renderer.RendererState);
Generalization(org.jfree.chart.renderer.RendererState);
Composition(org.jfree.chart.plot.CategoryCrosshairState);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,<init> --> barWidth,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,<init> --> seriesRunningTotal,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getBarWidth --> barWidth,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,setBarWidth --> barWidth,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getSeriesRunningTotal --> seriesRunningTotal,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,setSeriesRunningTotal --> seriesRunningTotal,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getCrosshairState --> crosshairState,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,setCrosshairState --> crosshairState,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getVisibleSeriesIndex --> visibleSeries,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getVisibleSeriesCount --> visibleSeries,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,getVisibleSeriesArray --> visibleSeries,org.jfree.chart.renderer.category.CategoryItemRendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.category.CategoryItemRendererState,setVisibleSeriesArray --> visibleSeries,org.jfree.chart.renderer.category.CategoryItemRendererState,WRITE);
Call(METHOD,org.jfree.chart.renderer.category.CategoryItemRendererState,<init> --> <init>,org.jfree.chart.renderer.RendererState,);
EndClass 86
StartClass 87
Class(org.jfree.data.general.DatasetGroup,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(id,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getID,java.lang.String,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(equals,java.lang.Object,);
Call(ATTRIBUTE,org.jfree.data.general.DatasetGroup,<init> --> id,org.jfree.data.general.DatasetGroup,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.DatasetGroup,<init>$2 --> id,org.jfree.data.general.DatasetGroup,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.DatasetGroup,getID --> id,org.jfree.data.general.DatasetGroup,READ);
Call(ATTRIBUTE,org.jfree.data.general.DatasetGroup,equals --> id,org.jfree.data.general.DatasetGroup,READ);
Call(METHOD,org.jfree.data.general.DatasetGroup,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 87
StartClass 88
Class(org.jfree.chart.plot.DrawingSupplier,Y,Y,Public);
Method(getNextPaint,java.awt.Paint,Public,N,Y);
Method(getNextOutlinePaint,java.awt.Paint,Public,N,Y);
Method(getNextFillPaint,java.awt.Paint,Public,N,Y);
Method(getNextStroke,java.awt.Stroke,Public,N,Y);
Method(getNextOutlineStroke,java.awt.Stroke,Public,N,Y);
Method(getNextShape,java.awt.Shape,Public,N,Y);
EndClass 88
StartClass 89
Class(org.jfree.chart.event.AxisChangeEvent,N,N,Public);
Attribute(axis,org.jfree.chart.axis.Axis,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getAxis,org.jfree.chart.axis.Axis,Public,N,N);
Parameter(<init>,org.jfree.chart.axis.Axis,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Composition(org.jfree.chart.axis.Axis);
Call(ATTRIBUTE,org.jfree.chart.event.AxisChangeEvent,<init> --> axis,org.jfree.chart.event.AxisChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.AxisChangeEvent,getAxis --> axis,org.jfree.chart.event.AxisChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.AxisChangeEvent,<init> --> <init>,org.jfree.chart.event.ChartChangeEvent,);
EndClass 89
StartClass 90
Class(org.jfree.chart.event.MarkerChangeEvent,N,N,Public);
Attribute(marker,org.jfree.chart.plot.Marker,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getMarker,org.jfree.chart.plot.Marker,Public,N,N);
Parameter(<init>,org.jfree.chart.plot.Marker,);
SuperClass(org.jfree.chart.event.ChartChangeEvent);
Generalization(org.jfree.chart.event.ChartChangeEvent);
Composition(org.jfree.chart.plot.Marker);
Call(ATTRIBUTE,org.jfree.chart.event.MarkerChangeEvent,<init> --> marker,org.jfree.chart.event.MarkerChangeEvent,WRITE);
Call(ATTRIBUTE,org.jfree.chart.event.MarkerChangeEvent,getMarker --> marker,org.jfree.chart.event.MarkerChangeEvent,READ);
Call(METHOD,org.jfree.chart.event.MarkerChangeEvent,<init> --> <init>,org.jfree.chart.event.ChartChangeEvent,);
EndClass 90
StartClass 91
Class(org.jfree.chart.plot.DefaultDrawingSupplier,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_PAINT_SEQUENCE,java.awt.Paint[],Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_PAINT_SEQUENCE,java.awt.Paint[],Public,Y,Y,);
Attribute(DEFAULT_FILL_PAINT_SEQUENCE,java.awt.Paint[],Public,Y,Y,);
Attribute(DEFAULT_STROKE_SEQUENCE,java.awt.Stroke[],Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_STROKE_SEQUENCE,java.awt.Stroke[],Public,Y,Y,);
Attribute(DEFAULT_SHAPE_SEQUENCE,java.awt.Shape[],Public,Y,Y,);
Attribute(paintSequence,java.awt.Paint[],Private,N,N,);
Attribute(paintIndex,int,Private,N,N,);
Attribute(outlinePaintSequence,java.awt.Paint[],Private,N,N,);
Attribute(outlinePaintIndex,int,Private,N,N,);
Attribute(fillPaintSequence,java.awt.Paint[],Private,N,N,);
Attribute(fillPaintIndex,int,Private,N,N,);
Attribute(strokeSequence,java.awt.Stroke[],Private,N,N,);
Attribute(strokeIndex,int,Private,N,N,);
Attribute(outlineStrokeSequence,java.awt.Stroke[],Private,N,N,);
Attribute(outlineStrokeIndex,int,Private,N,N,);
Attribute(shapeSequence,java.awt.Shape[],Private,N,N,);
Attribute(shapeIndex,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getNextPaint,java.awt.Paint,Public,N,N);
Method(getNextOutlinePaint,java.awt.Paint,Public,N,N);
Method(getNextFillPaint,java.awt.Paint,Public,N,N);
Method(getNextStroke,java.awt.Stroke,Public,N,N);
Method(getNextOutlineStroke,java.awt.Stroke,Public,N,N);
Method(getNextShape,java.awt.Shape,Public,N,N);
Method(createStandardSeriesShapes,java.awt.Shape[],Public,Y,N);
Method(equals,boolean,Public,N,N);
Method(equalShapes,boolean,Private,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(intArray,int[],Private,Y,N);
Method(intArray$2,int[],Private,Y,N);
Method(clone,java.lang.Object,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,java.awt.Paint[],);
Parameter(<init>$2,java.awt.Paint[],);
Parameter(<init>$2,java.awt.Stroke[],);
Parameter(<init>$2,java.awt.Stroke[],);
Parameter(<init>$2,java.awt.Shape[],);
Parameter(<init>$3,java.awt.Paint[],);
Parameter(<init>$3,java.awt.Paint[],);
Parameter(<init>$3,java.awt.Paint[],);
Parameter(<init>$3,java.awt.Stroke[],);
Parameter(<init>$3,java.awt.Stroke[],);
Parameter(<init>$3,java.awt.Shape[],);
Parameter(equals,java.lang.Object,);
Parameter(equalShapes,java.awt.Shape[],);
Parameter(equalShapes,java.awt.Shape[],);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(intArray,double,);
Parameter(intArray,double,);
Parameter(intArray,double,);
Parameter(intArray$2,double,);
Parameter(intArray$2,double,);
Parameter(intArray$2,double,);
Parameter(intArray$2,double,);
Realization(org.jfree.chart.plot.DrawingSupplier);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> <init>$3,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,createStandardSeriesShapes --> intArray,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,createStandardSeriesShapes --> intArray$2,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> equalShapes,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> createStandardSeriesShapes,org.jfree.chart.plot.DefaultDrawingSupplier,);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_FILL_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_OUTLINE_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_STROKE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_OUTLINE_STROKE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init> --> DEFAULT_SHAPE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> DEFAULT_FILL_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> fillPaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$2 --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> fillPaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<init>$3 --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextPaint --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextPaint --> paintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextPaint --> paintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlinePaint --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlinePaint --> outlinePaintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlinePaint --> outlinePaintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextFillPaint --> fillPaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextFillPaint --> fillPaintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextFillPaint --> fillPaintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextStroke --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextStroke --> strokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextStroke --> strokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlineStroke --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlineStroke --> outlineStrokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextOutlineStroke --> outlineStrokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextShape --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextShape --> shapeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,getNextShape --> shapeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> paintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> outlinePaintIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> strokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> outlineStrokeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,equals --> shapeIndex,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,writeObject --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,writeObject --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,writeObject --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,writeObject --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,writeObject --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> paintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> outlinePaintSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> strokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> outlineStrokeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,readObject --> shapeSequence,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_OUTLINE_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_FILL_PAINT_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_STROKE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_OUTLINE_STROKE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> DEFAULT_SHAPE_SEQUENCE,org.jfree.chart.plot.DefaultDrawingSupplier,WRITE);
Call(METHOD,org.jfree.chart.plot.DefaultDrawingSupplier,<clinit> --> createDefaultPaintArray,org.jfree.chart.ChartColor,);
EndClass 91
StartClass 92
Class(org.jfree.chart.entity.PlotEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(plot,org.jfree.chart.plot.Plot,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getPlot,org.jfree.chart.plot.Plot,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,org.jfree.chart.plot.Plot,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,org.jfree.chart.plot.Plot,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,org.jfree.chart.plot.Plot,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.chart.plot.Plot);
Call(METHOD,org.jfree.chart.entity.PlotEntity,<init> --> <init>$2,org.jfree.chart.entity.PlotEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.PlotEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.PlotEntity,<init>$3 --> plot,org.jfree.chart.entity.PlotEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.PlotEntity,getPlot --> plot,org.jfree.chart.entity.PlotEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.PlotEntity,equals --> plot,org.jfree.chart.entity.PlotEntity,READ);
Call(METHOD,org.jfree.chart.entity.PlotEntity,<init>$3 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,toString --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,equals --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,equals --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,equals --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,equals --> equals,org.jfree.chart.plot.Plot,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,hashCode --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,hashCode --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,clone --> clone,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,writeObject --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.PlotEntity,readObject --> setArea,org.jfree.chart.entity.ChartEntity,);
EndClass 92
StartClass 93
Class(org.jfree.chart.entity.StandardEntityCollection,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(entities,java.util.List,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getEntityCount,int,Public,N,N);
Method(getEntity,org.jfree.chart.entity.ChartEntity,Public,N,N);
Method(clear,void,Public,N,N);
Method(add,void,Public,N,N);
Method(addAll,void,Public,N,N);
Method(getEntity$2,org.jfree.chart.entity.ChartEntity,Public,N,N);
Method(getEntities,java.util.Collection,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(getEntity,int,);
Parameter(add,org.jfree.chart.entity.ChartEntity,);
Parameter(addAll,org.jfree.chart.entity.EntityCollection,);
Parameter(getEntity$2,double,);
Parameter(getEntity$2,double,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.entity.EntityCollection);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,<init> --> entities,org.jfree.chart.entity.StandardEntityCollection,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,getEntityCount --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,getEntity --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,clear --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,add --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,addAll --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,getEntity$2 --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,getEntities --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,iterator --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,equals --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,clone --> entities,org.jfree.chart.entity.StandardEntityCollection,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.StandardEntityCollection,clone --> entities,org.jfree.chart.entity.StandardEntityCollection,WRITE);
Call(METHOD,org.jfree.chart.entity.StandardEntityCollection,add --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.StandardEntityCollection,addAll --> getEntities,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.entity.StandardEntityCollection,getEntity$2 --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.StandardEntityCollection,clone --> clone,org.jfree.chart.entity.ChartEntity,);
EndClass 93
StartClass 94
Class(org.jfree.chart.block.BlockResult,N,N,Public);
Attribute(entities,org.jfree.chart.entity.EntityCollection,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getEntityCollection,org.jfree.chart.entity.EntityCollection,Public,N,N);
Method(setEntityCollection,void,Public,N,N);
Parameter(setEntityCollection,org.jfree.chart.entity.EntityCollection,);
Realization(org.jfree.chart.block.EntityBlockResult);
Composition(org.jfree.chart.entity.EntityCollection);
Call(ATTRIBUTE,org.jfree.chart.block.BlockResult,<init> --> entities,org.jfree.chart.block.BlockResult,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockResult,getEntityCollection --> entities,org.jfree.chart.block.BlockResult,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockResult,setEntityCollection --> entities,org.jfree.chart.block.BlockResult,WRITE);
EndClass 94
StartClass 95
Class(org.jfree.chart.entity.TitleEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(title,org.jfree.chart.title.Title,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getTitle,org.jfree.chart.title.Title,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,org.jfree.chart.title.Title,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,org.jfree.chart.title.Title,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,org.jfree.chart.title.Title,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.chart.title.Title);
Call(METHOD,org.jfree.chart.entity.TitleEntity,<init> --> <init>$2,org.jfree.chart.entity.TitleEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.TitleEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.TitleEntity,<init>$3 --> title,org.jfree.chart.entity.TitleEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.TitleEntity,getTitle --> title,org.jfree.chart.entity.TitleEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.TitleEntity,equals --> title,org.jfree.chart.entity.TitleEntity,READ);
Call(METHOD,org.jfree.chart.entity.TitleEntity,<init>$3 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,toString --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,equals --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,equals --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,equals --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,equals --> equals,org.jfree.chart.title.Title,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,hashCode --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,hashCode --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,clone --> clone,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,writeObject --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.TitleEntity,readObject --> setArea,org.jfree.chart.entity.ChartEntity,);
EndClass 95
StartClass 96
Class(org.jfree.chart.block.BlockContainer,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(blocks,java.util.List,Private,N,N,);
Attribute(arrangement,org.jfree.chart.block.Arrangement,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getArrangement,org.jfree.chart.block.Arrangement,Public,N,N);
Method(setArrangement,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(getBlocks,java.util.List,Public,N,N);
Method(add,void,Public,N,N);
Method(add$2,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(<init>$2,org.jfree.chart.block.Arrangement,);
Parameter(setArrangement,org.jfree.chart.block.Arrangement,);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add$2,org.jfree.chart.block.Block,);
Parameter(add$2,java.lang.Object,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.lang.Object,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.block.AbstractBlock);
SubClass(org.jfree.chart.title.LegendItemBlockContainer);
Generalization(org.jfree.chart.block.AbstractBlock);
Realization(org.jfree.chart.block.Block);
Composition(org.jfree.chart.block.Arrangement);
Call(METHOD,org.jfree.chart.block.BlockContainer,<init> --> <init>$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.BlockContainer,add --> add$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw --> draw$2,org.jfree.chart.block.BlockContainer,);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,<init>$2 --> arrangement,org.jfree.chart.block.BlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,<init>$2 --> blocks,org.jfree.chart.block.BlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,getArrangement --> arrangement,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,setArrangement --> arrangement,org.jfree.chart.block.BlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,isEmpty --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,getBlocks --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,add$2 --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,add$2 --> arrangement,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,clear --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,clear --> arrangement,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,arrange --> arrangement,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,draw$2 --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,equals --> arrangement,org.jfree.chart.block.BlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockContainer,equals --> blocks,org.jfree.chart.block.BlockContainer,READ);
Call(METHOD,org.jfree.chart.block.BlockContainer,<init> --> <init>,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BlockContainer,<init>$2 --> <init>,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.BlockContainer,setArrangement --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.BlockContainer,add$2 --> add,org.jfree.chart.block.Arrangement,);
Call(METHOD,org.jfree.chart.block.BlockContainer,clear --> clear,org.jfree.chart.block.Arrangement,);
Call(METHOD,org.jfree.chart.block.BlockContainer,arrange --> arrange,org.jfree.chart.block.Arrangement,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> getGenerateEntities,org.jfree.chart.block.EntityBlockParams,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> trimMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> drawBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> trimBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> trimPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> getBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> draw,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> getEntityCollection,org.jfree.chart.block.EntityBlockResult,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> addAll,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> <init>,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.block.BlockContainer,draw$2 --> setEntityCollection,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.block.BlockContainer,equals --> equals,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BlockContainer,clone --> clone,org.jfree.chart.block.AbstractBlock,);
EndClass 96
StartClass 97
Class(org.jfree.chart.block.Arrangement,Y,Y,Public);
Method(add,void,Public,N,Y);
Method(arrange,org.jfree.ui.Size2D,Public,N,Y);
Method(clear,void,Public,N,Y);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add,java.lang.Object,);
Parameter(arrange,org.jfree.chart.block.BlockContainer,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
EndClass 97
StartClass 98
Class(org.jfree.chart.block.ColumnArrangement,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(horizontalAlignment,org.jfree.ui.HorizontalAlignment,Private,N,N,);
Attribute(verticalAlignment,org.jfree.ui.VerticalAlignment,Private,N,N,);
Attribute(horizontalGap,double,Private,N,N,);
Attribute(verticalGap,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(add,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeFF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>$2,org.jfree.ui.HorizontalAlignment,);
Parameter(<init>$2,org.jfree.ui.VerticalAlignment,);
Parameter(<init>$2,double,);
Parameter(<init>$2,double,);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add,java.lang.Object,);
Parameter(arrange,org.jfree.chart.block.BlockContainer,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFF,java.awt.Graphics2D,);
Parameter(arrangeFF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNF,java.awt.Graphics2D,);
Parameter(arrangeNF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRR,java.awt.Graphics2D,);
Parameter(arrangeRR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRF,java.awt.Graphics2D,);
Parameter(arrangeRF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.block.Arrangement);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> arrangeNN,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> arrangeFF,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> arrangeRF,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> arrangeRR,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeFF --> arrangeNF,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> arrangeNN,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> arrangeRF,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> arrangeNF,org.jfree.chart.block.ColumnArrangement,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> arrangeFF,org.jfree.chart.block.ColumnArrangement,);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,<init>$2 --> horizontalAlignment,org.jfree.chart.block.ColumnArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,<init>$2 --> verticalAlignment,org.jfree.chart.block.ColumnArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,<init>$2 --> horizontalGap,org.jfree.chart.block.ColumnArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,<init>$2 --> verticalGap,org.jfree.chart.block.ColumnArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNF --> verticalGap,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNF --> horizontalGap,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNN --> verticalGap,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNN --> horizontalAlignment,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,equals --> horizontalAlignment,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,equals --> verticalAlignment,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,equals --> horizontalGap,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,equals --> verticalGap,org.jfree.chart.block.ColumnArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNF --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.ColumnArrangement,arrangeNN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNF --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNF --> getHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNF --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNF --> setBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRR --> toFixedHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeRF --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNN --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.ColumnArrangement,arrangeNN --> setBounds,org.jfree.chart.block.Block,);
EndClass 98
StartClass 99
Class(org.jfree.chart.title.LegendGraphic,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(shapeVisible,boolean,Private,N,N,);
Attribute(shape,java.awt.Shape,Private,N,N,);
Attribute(shapeLocation,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(shapeAnchor,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(shapeFilled,boolean,Private,N,N,);
Attribute(fillPaint,java.awt.Paint,Private,N,N,);
Attribute(fillPaintTransformer,org.jfree.ui.GradientPaintTransformer,Private,N,N,);
Attribute(shapeOutlineVisible,boolean,Private,N,N,);
Attribute(outlinePaint,java.awt.Paint,Private,N,N,);
Attribute(outlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(lineVisible,boolean,Private,N,N,);
Attribute(line,java.awt.Shape,Private,N,N,);
Attribute(lineStroke,java.awt.Stroke,Private,N,N,);
Attribute(linePaint,java.awt.Paint,Private,N,N,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(isShapeVisible,boolean,Public,N,N);
Method(setShapeVisible,void,Public,N,N);
Method(getShape,java.awt.Shape,Public,N,N);
Method(setShape,void,Public,N,N);
Method(isShapeFilled,boolean,Public,N,N);
Method(setShapeFilled,void,Public,N,N);
Method(getFillPaint,java.awt.Paint,Public,N,N);
Method(setFillPaint,void,Public,N,N);
Method(getFillPaintTransformer,org.jfree.ui.GradientPaintTransformer,Public,N,N);
Method(setFillPaintTransformer,void,Public,N,N);
Method(isShapeOutlineVisible,boolean,Public,N,N);
Method(setShapeOutlineVisible,void,Public,N,N);
Method(getOutlinePaint,java.awt.Paint,Public,N,N);
Method(setOutlinePaint,void,Public,N,N);
Method(getOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setOutlineStroke,void,Public,N,N);
Method(getShapeAnchor,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setShapeAnchor,void,Public,N,N);
Method(getShapeLocation,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setShapeLocation,void,Public,N,N);
Method(isLineVisible,boolean,Public,N,N);
Method(setLineVisible,void,Public,N,N);
Method(getLine,java.awt.Shape,Public,N,N);
Method(setLine,void,Public,N,N);
Method(getLinePaint,java.awt.Paint,Public,N,N);
Method(setLinePaint,void,Public,N,N);
Method(getLineStroke,java.awt.Stroke,Public,N,N);
Method(setLineStroke,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,java.awt.Paint,);
Parameter(setShapeVisible,boolean,);
Parameter(setShape,java.awt.Shape,);
Parameter(setShapeFilled,boolean,);
Parameter(setFillPaint,java.awt.Paint,);
Parameter(setFillPaintTransformer,org.jfree.ui.GradientPaintTransformer,);
Parameter(setShapeOutlineVisible,boolean,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setShapeAnchor,org.jfree.ui.RectangleAnchor,);
Parameter(setShapeLocation,org.jfree.ui.RectangleAnchor,);
Parameter(setLineVisible,boolean,);
Parameter(setLine,java.awt.Shape,);
Parameter(setLinePaint,java.awt.Paint,);
Parameter(setLineStroke,java.awt.Stroke,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.block.AbstractBlock);
Generalization(org.jfree.chart.block.AbstractBlock);
Realization(org.jfree.chart.block.Block);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> arrangeNN,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw --> getLine,org.jfree.chart.title.LegendGraphic,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw$2 --> draw,org.jfree.chart.title.LegendGraphic,);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> shapeVisible,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> shape,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> shapeAnchor,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> shapeLocation,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> shapeFilled,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> fillPaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<init> --> fillPaintTransformer,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,isShapeVisible --> shapeVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShapeVisible --> shapeVisible,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getShape --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShape --> shape,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,isShapeFilled --> shapeFilled,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShapeFilled --> shapeFilled,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getFillPaint --> fillPaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setFillPaint --> fillPaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getFillPaintTransformer --> fillPaintTransformer,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setFillPaintTransformer --> fillPaintTransformer,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,isShapeOutlineVisible --> shapeOutlineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShapeOutlineVisible --> shapeOutlineVisible,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getOutlinePaint --> outlinePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setOutlinePaint --> outlinePaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getOutlineStroke --> outlineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setOutlineStroke --> outlineStroke,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getShapeAnchor --> shapeAnchor,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShapeAnchor --> shapeAnchor,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getShapeLocation --> shapeLocation,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setShapeLocation --> shapeLocation,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,isLineVisible --> lineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setLineVisible --> lineVisible,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getLine --> line,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setLine --> line,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getLinePaint --> linePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setLinePaint --> linePaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,getLineStroke --> lineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,setLineStroke --> lineStroke,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrange --> $assertionsDisabled,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrangeNN --> line,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrangeNN --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> lineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shapeLocation,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shapeAnchor,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> linePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> lineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shapeVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shapeFilled,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> fillPaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> fillPaintTransformer,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> shapeOutlineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> outlinePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,draw --> outlineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shapeVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shapeFilled,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> fillPaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> fillPaintTransformer,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shapeOutlineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> outlinePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> outlineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shapeAnchor,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> shapeLocation,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> lineVisible,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> line,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> linePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,equals --> lineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,hashCode --> fillPaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,clone --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,clone --> line,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,clone --> shape,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,clone --> line,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> shape,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> fillPaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> outlinePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> outlineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> line,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> linePaint,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,writeObject --> lineStroke,org.jfree.chart.title.LegendGraphic,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> shape,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> fillPaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> outlinePaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> outlineStroke,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> line,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> linePaint,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,readObject --> lineStroke,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,<clinit> --> $assertionsDisabled,org.jfree.chart.title.LegendGraphic,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendGraphic,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(METHOD,org.jfree.chart.title.LegendGraphic,<init> --> <init>,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,<init> --> setPadding$2,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,setFillPaintTransformer --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,setShapeAnchor --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,setShapeLocation --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> toContentConstraint,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> getHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> calculateTotalWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,arrange --> calculateTotalHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw --> trimMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw --> drawBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw --> trimBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,draw --> trimPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,equals --> equals,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.title.LegendGraphic,clone --> clone,org.jfree.chart.block.AbstractBlock,);
EndClass 99
StartClass 100
Class(org.jfree.chart.block.BorderArrangement,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(centerBlock,org.jfree.chart.block.Block,Private,N,N,);
Attribute(topBlock,org.jfree.chart.block.Block,Private,N,N,);
Attribute(bottomBlock,org.jfree.chart.block.Block,Private,N,N,);
Attribute(leftBlock,org.jfree.chart.block.Block,Private,N,N,);
Attribute(rightBlock,org.jfree.chart.block.Block,Private,N,N,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(add,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFF,org.jfree.ui.Size2D,Protected,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add,java.lang.Object,);
Parameter(arrange,org.jfree.chart.block.BlockContainer,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(arrangeFR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFR,java.awt.Graphics2D,);
Parameter(arrangeFR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFN,java.awt.Graphics2D,);
Parameter(arrangeFN,double,);
Parameter(arrangeRR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRR,org.jfree.data.Range,);
Parameter(arrangeRR,org.jfree.data.Range,);
Parameter(arrangeRR,java.awt.Graphics2D,);
Parameter(arrangeFF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFF,java.awt.Graphics2D,);
Parameter(arrangeFF,org.jfree.chart.block.RectangleConstraint,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.block.Arrangement);
Composition(org.jfree.chart.block.Block);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> arrangeNN,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> arrangeFN,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> arrangeFF,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> arrangeFR,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> arrangeRR,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> arrangeFN,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> arrange,org.jfree.chart.block.BorderArrangement,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFN --> arrange,org.jfree.chart.block.BorderArrangement,);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,add --> centerBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,add --> topBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,add --> bottomBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,add --> leftBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,add --> rightBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrange --> $assertionsDisabled,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> topBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> bottomBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> leftBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> rightBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> centerBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> topBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> bottomBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> leftBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> rightBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> centerBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeRR --> topBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeRR --> bottomBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeRR --> leftBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeRR --> rightBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeRR --> centerBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> topBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> bottomBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> leftBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> rightBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> centerBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,clear --> centerBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,clear --> topBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,clear --> bottomBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,clear --> leftBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,clear --> rightBlock,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,equals --> topBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,equals --> bottomBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,equals --> leftBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,equals --> rightBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,equals --> centerBlock,org.jfree.chart.block.BorderArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,<clinit> --> $assertionsDisabled,org.jfree.chart.block.BorderArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeNN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFN --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BorderArrangement,arrangeFF --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> toContentConstraint,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> calculateTotalWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrange --> calculateTotalHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeNN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeNN --> setBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFR --> toFixedHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFN --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFN --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFN --> <init>,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeRR --> <init>$2,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeRR --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeRR --> shift$2,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeRR --> shift,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeRR --> setBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> getHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> <init>$5,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> <init>,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.BorderArrangement,arrangeFF --> setBounds,org.jfree.chart.block.Block,);
EndClass 100
StartClass 101
Class(org.jfree.chart.title.LegendItemBlockContainer,N,N,Public);
Attribute(dataset,org.jfree.data.general.Dataset,Private,N,N,);
Attribute(seriesKey,java.lang.Comparable,Private,N,N,);
Attribute(datasetIndex,int,Private,N,N,);
Attribute(series,int,Private,N,N,);
Attribute(toolTipText,java.lang.String,Private,N,N,);
Attribute(urlText,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getDataset,org.jfree.data.general.Dataset,Public,N,N);
Method(getSeriesKey,java.lang.Comparable,Public,N,N);
Method(getDatasetIndex,int,Public,N,N);
Method(getSeriesIndex,int,Public,N,N);
Method(getToolTipText,java.lang.String,Public,N,N);
Method(setToolTipText,void,Public,N,N);
Method(getURLText,java.lang.String,Public,N,N);
Method(setURLText,void,Public,N,N);
Method(draw,java.lang.Object,Public,N,N);
Parameter(<init>,org.jfree.chart.block.Arrangement,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>$2,org.jfree.chart.block.Arrangement,);
Parameter(<init>$2,org.jfree.data.general.Dataset,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(setToolTipText,java.lang.String,);
Parameter(setURLText,java.lang.String,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw,java.lang.Object,);
SuperClass(org.jfree.chart.block.BlockContainer);
SuperClass(org.jfree.chart.block.AbstractBlock);
Generalization(org.jfree.chart.block.BlockContainer);
Composition(org.jfree.data.general.Dataset);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> getToolTipText,org.jfree.chart.title.LegendItemBlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> getURLText,org.jfree.chart.title.LegendItemBlockContainer,);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,<init> --> datasetIndex,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,<init> --> series,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,<init>$2 --> dataset,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,<init>$2 --> seriesKey,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getDataset --> dataset,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getSeriesKey --> seriesKey,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getDatasetIndex --> datasetIndex,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getSeriesIndex --> series,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getToolTipText --> toolTipText,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,setToolTipText --> toolTipText,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,getURLText --> urlText,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,setURLText --> urlText,org.jfree.chart.title.LegendItemBlockContainer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,draw --> series,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,draw --> seriesKey,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(ATTRIBUTE,org.jfree.chart.title.LegendItemBlockContainer,draw --> dataset,org.jfree.chart.title.LegendItemBlockContainer,READ);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,<init> --> <init>$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,<init>$2 --> <init>$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> draw$2,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> <init>,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> getGenerateEntities,org.jfree.chart.block.EntityBlockParams,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> <init>,org.jfree.chart.entity.LegendItemEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setSeriesIndex,org.jfree.chart.entity.LegendItemEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setSeriesKey,org.jfree.chart.entity.LegendItemEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setDataset,org.jfree.chart.entity.LegendItemEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> add,org.jfree.chart.entity.EntityCollection,);
Call(METHOD,org.jfree.chart.title.LegendItemBlockContainer,draw --> setEntityCollection,org.jfree.chart.block.BlockResult,);
EndClass 101
StartClass 102
Class(org.jfree.chart.block.LabelBlock,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(text,java.lang.String,Private,N,N,);
Attribute(label,org.jfree.text.TextBlock,Private,N,N,);
Attribute(font,java.awt.Font,Private,N,N,);
Attribute(toolTipText,java.lang.String,Private,N,N,);
Attribute(urlText,java.lang.String,Private,N,N,);
Attribute(DEFAULT_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Attribute(contentAlignmentPoint,org.jfree.text.TextBlockAnchor,Private,N,N,);
Attribute(textAnchor,org.jfree.ui.RectangleAnchor,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getFont,java.awt.Font,Public,N,N);
Method(setFont,void,Public,N,N);
Method(getPaint,java.awt.Paint,Public,N,N);
Method(setPaint,void,Public,N,N);
Method(getToolTipText,java.lang.String,Public,N,N);
Method(setToolTipText,void,Public,N,N);
Method(getURLText,java.lang.String,Public,N,N);
Method(setURLText,void,Public,N,N);
Method(getContentAlignmentPoint,org.jfree.text.TextBlockAnchor,Public,N,N);
Method(setContentAlignmentPoint,void,Public,N,N);
Method(getTextAnchor,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(setTextAnchor,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(draw,void,Public,N,N);
Method(draw$2,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.awt.Font,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.awt.Font,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(setFont,java.awt.Font,);
Parameter(setPaint,java.awt.Paint,);
Parameter(setToolTipText,java.lang.String,);
Parameter(setURLText,java.lang.String,);
Parameter(setContentAlignmentPoint,org.jfree.text.TextBlockAnchor,);
Parameter(setTextAnchor,org.jfree.ui.RectangleAnchor,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.awt.Graphics2D,);
Parameter(draw$2,java.awt.geom.Rectangle2D,);
Parameter(draw$2,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.block.AbstractBlock);
Generalization(org.jfree.chart.block.AbstractBlock);
Realization(org.jfree.chart.block.Block);
Call(METHOD,org.jfree.chart.block.LabelBlock,<init> --> <init>$3,org.jfree.chart.block.LabelBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,<init>$2 --> <init>$3,org.jfree.chart.block.LabelBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw --> draw$2,org.jfree.chart.block.LabelBlock,);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init> --> DEFAULT_PAINT,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$2 --> DEFAULT_PAINT,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> text,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> paint,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> label,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> font,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> toolTipText,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> urlText,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> contentAlignmentPoint,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<init>$3 --> textAnchor,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getFont --> font,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setFont --> text,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setFont --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setFont --> font,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setFont --> label,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getPaint --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setPaint --> text,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setPaint --> font,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setPaint --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setPaint --> paint,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setPaint --> label,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getToolTipText --> toolTipText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setToolTipText --> toolTipText,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getURLText --> urlText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setURLText --> urlText,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getContentAlignmentPoint --> contentAlignmentPoint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setContentAlignmentPoint --> contentAlignmentPoint,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,getTextAnchor --> textAnchor,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,setTextAnchor --> textAnchor,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,arrange --> font,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,arrange --> label,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> font,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> textAnchor,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> label,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> contentAlignmentPoint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> toolTipText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,draw$2 --> urlText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> text,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> font,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> toolTipText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> urlText,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> contentAlignmentPoint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,equals --> textAnchor,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,writeObject --> paint,org.jfree.chart.block.LabelBlock,READ);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,readObject --> paint,org.jfree.chart.block.LabelBlock,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.LabelBlock,<clinit> --> DEFAULT_PAINT,org.jfree.chart.block.LabelBlock,WRITE);
Call(METHOD,org.jfree.chart.block.LabelBlock,<init>$3 --> <init>,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,setFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.LabelBlock,setPaint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.LabelBlock,setContentAlignmentPoint --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.block.LabelBlock,arrange --> calculateTotalWidth,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,arrange --> calculateTotalHeight,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> trimMargin,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> drawBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> trimBorder,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> trimPadding,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> getGenerateEntities,org.jfree.chart.block.EntityBlockParams,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> <init>,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> add,org.jfree.chart.entity.StandardEntityCollection,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> <init>,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.block.LabelBlock,draw$2 --> setEntityCollection,org.jfree.chart.block.BlockResult,);
Call(METHOD,org.jfree.chart.block.LabelBlock,equals --> equals,org.jfree.chart.block.AbstractBlock,);
Call(METHOD,org.jfree.chart.block.LabelBlock,clone --> clone,org.jfree.chart.block.AbstractBlock,);
EndClass 102
StartClass 103
Class(org.jfree.chart.block.CenterArrangement,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(add,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeFN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNF,org.jfree.ui.Size2D,Protected,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add,java.lang.Object,);
Parameter(arrange,org.jfree.chart.block.BlockContainer,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFN,java.awt.Graphics2D,);
Parameter(arrangeFN,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFR,java.awt.Graphics2D,);
Parameter(arrangeFR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFF,java.awt.Graphics2D,);
Parameter(arrangeFF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRR,java.awt.Graphics2D,);
Parameter(arrangeRR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRF,java.awt.Graphics2D,);
Parameter(arrangeRF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRN,java.awt.Graphics2D,);
Parameter(arrangeRN,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(arrangeNF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNF,java.awt.Graphics2D,);
Parameter(arrangeNF,org.jfree.chart.block.RectangleConstraint,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.block.Arrangement);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> arrangeNN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> arrangeFN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> arrangeRN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> arrangeRF,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> arrangeRR,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> arrangeFN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> arrangeFF,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFF --> arrangeFN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> arrangeNN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> arrangeFR,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> arrangeNF,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> arrangeFF,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> arrangeNN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> arrangeFN,org.jfree.chart.block.CenterArrangement,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeNF --> arrangeNN,org.jfree.chart.block.CenterArrangement,);
Call(ATTRIBUTE,org.jfree.chart.block.CenterArrangement,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.CenterArrangement,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.CenterArrangement,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.CenterArrangement,arrangeFN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.CenterArrangement,arrangeNN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFN --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFN --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFN --> setBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeFR --> toFixedHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRR --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRF --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeRN --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeNN --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeNN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.CenterArrangement,arrangeNN --> setBounds,org.jfree.chart.block.Block,);
EndClass 103
StartClass 104
Class(org.jfree.chart.block.FlowArrangement,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(horizontalAlignment,org.jfree.ui.HorizontalAlignment,Private,N,N,);
Attribute(verticalAlignment,org.jfree.ui.VerticalAlignment,Private,N,N,);
Attribute(horizontalGap,double,Private,N,N,);
Attribute(verticalGap,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(add,void,Public,N,N);
Method(arrange,org.jfree.ui.Size2D,Public,N,N);
Method(arrangeFN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeFF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRR,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRF,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeRN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNN,org.jfree.ui.Size2D,Protected,N,N);
Method(arrangeNF,org.jfree.ui.Size2D,Protected,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>$2,org.jfree.ui.HorizontalAlignment,);
Parameter(<init>$2,org.jfree.ui.VerticalAlignment,);
Parameter(<init>$2,double,);
Parameter(<init>$2,double,);
Parameter(add,org.jfree.chart.block.Block,);
Parameter(add,java.lang.Object,);
Parameter(arrange,org.jfree.chart.block.BlockContainer,);
Parameter(arrange,java.awt.Graphics2D,);
Parameter(arrange,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFN,java.awt.Graphics2D,);
Parameter(arrangeFN,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFR,java.awt.Graphics2D,);
Parameter(arrangeFR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeFF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeFF,java.awt.Graphics2D,);
Parameter(arrangeFF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRR,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRR,java.awt.Graphics2D,);
Parameter(arrangeRR,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRF,java.awt.Graphics2D,);
Parameter(arrangeRF,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeRN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeRN,java.awt.Graphics2D,);
Parameter(arrangeRN,org.jfree.chart.block.RectangleConstraint,);
Parameter(arrangeNN,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNN,java.awt.Graphics2D,);
Parameter(arrangeNF,org.jfree.chart.block.BlockContainer,);
Parameter(arrangeNF,java.awt.Graphics2D,);
Parameter(arrangeNF,org.jfree.chart.block.RectangleConstraint,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.block.Arrangement);
Call(METHOD,org.jfree.chart.block.FlowArrangement,<init> --> <init>$2,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeNN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeNF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeFN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeFF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeFR,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeRN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeRF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> arrangeRR,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> arrangeFN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> arrangeFF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFF --> arrangeFN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> arrangeNN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> arrangeFR,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> arrangeNF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> arrangeFF,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> arrangeNN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> arrangeFN,org.jfree.chart.block.FlowArrangement,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeNF --> arrangeNN,org.jfree.chart.block.FlowArrangement,);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,<init>$2 --> horizontalAlignment,org.jfree.chart.block.FlowArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,<init>$2 --> verticalAlignment,org.jfree.chart.block.FlowArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,<init>$2 --> horizontalGap,org.jfree.chart.block.FlowArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,<init>$2 --> verticalGap,org.jfree.chart.block.FlowArrangement,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeFN --> horizontalGap,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeFN --> verticalGap,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeNN --> horizontalGap,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeNN --> verticalAlignment,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,equals --> horizontalAlignment,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,equals --> verticalAlignment,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,equals --> horizontalGap,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,equals --> verticalGap,org.jfree.chart.block.FlowArrangement,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrange --> NONE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrange --> FIXED,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrange --> RANGE,org.jfree.chart.block.LengthConstraintType,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeFN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(ATTRIBUTE,org.jfree.chart.block.FlowArrangement,arrangeNN --> NONE,org.jfree.chart.block.RectangleConstraint,READ);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> getWidthConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrange --> getHeightConstraintType,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFN --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFN --> getWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFN --> setBounds,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> getHeightRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeFR --> toFixedHeight,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRR --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> constrain,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRF --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> getWidthRange,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> contains,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeRN --> toFixedWidth,org.jfree.chart.block.RectangleConstraint,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeNN --> getBlocks,org.jfree.chart.block.BlockContainer,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeNN --> arrange$2,org.jfree.chart.block.Block,);
Call(METHOD,org.jfree.chart.block.FlowArrangement,arrangeNN --> setBounds,org.jfree.chart.block.Block,);
EndClass 104
StartClass 105
Class(org.jfree.chart.block.BlockBorder,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(NONE,org.jfree.chart.block.BlockBorder,Public,Y,Y,);
Attribute(insets,org.jfree.ui.RectangleInsets,Private,N,N,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getInsets,org.jfree.ui.RectangleInsets,Public,N,N);
Method(getPaint,java.awt.Paint,Public,N,N);
Method(draw,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$3,double,);
Parameter(<init>$3,double,);
Parameter(<init>$3,double,);
Parameter(<init>$3,double,);
Parameter(<init>$4,double,);
Parameter(<init>$4,double,);
Parameter(<init>$4,double,);
Parameter(<init>$4,double,);
Parameter(<init>$4,java.awt.Paint,);
Parameter(<init>$5,org.jfree.ui.RectangleInsets,);
Parameter(<init>$5,java.awt.Paint,);
Parameter(draw,java.awt.Graphics2D,);
Parameter(draw,java.awt.geom.Rectangle2D,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Realization(org.jfree.chart.block.BlockFrame);
Composition(org.jfree.chart.block.BlockBorder);
Call(METHOD,org.jfree.chart.block.BlockBorder,<init> --> <init>$2,org.jfree.chart.block.BlockBorder,);
Call(METHOD,org.jfree.chart.block.BlockBorder,<init>$2 --> <init>$5,org.jfree.chart.block.BlockBorder,);
Call(METHOD,org.jfree.chart.block.BlockBorder,<init>$3 --> <init>$5,org.jfree.chart.block.BlockBorder,);
Call(METHOD,org.jfree.chart.block.BlockBorder,<init>$4 --> <init>$5,org.jfree.chart.block.BlockBorder,);
Call(METHOD,org.jfree.chart.block.BlockBorder,<clinit> --> <init>$5,org.jfree.chart.block.BlockBorder,);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,<init>$5 --> insets,org.jfree.chart.block.BlockBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,<init>$5 --> paint,org.jfree.chart.block.BlockBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,getInsets --> insets,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,getPaint --> paint,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,draw --> insets,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,draw --> paint,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,equals --> insets,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,equals --> paint,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,writeObject --> paint,org.jfree.chart.block.BlockBorder,READ);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,readObject --> paint,org.jfree.chart.block.BlockBorder,WRITE);
Call(ATTRIBUTE,org.jfree.chart.block.BlockBorder,<clinit> --> NONE,org.jfree.chart.block.BlockBorder,WRITE);
Call(METHOD,org.jfree.chart.block.BlockBorder,<init>$5 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 105
StartClass 106
Class(org.jfree.chart.renderer.AbstractRenderer,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(ZERO,java.lang.Double,Public,Y,Y,);
Attribute(DEFAULT_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(DEFAULT_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_OUTLINE_STROKE,java.awt.Stroke,Public,Y,Y,);
Attribute(DEFAULT_SHAPE,java.awt.Shape,Public,Y,Y,);
Attribute(DEFAULT_VALUE_LABEL_FONT,java.awt.Font,Public,Y,Y,);
Attribute(DEFAULT_VALUE_LABEL_PAINT,java.awt.Paint,Public,Y,Y,);
Attribute(seriesVisibleList,org.jfree.util.BooleanList,Private,N,N,);
Attribute(baseSeriesVisible,boolean,Private,N,N,);
Attribute(seriesVisibleInLegendList,org.jfree.util.BooleanList,Private,N,N,);
Attribute(baseSeriesVisibleInLegend,boolean,Private,N,N,);
Attribute(paintList,org.jfree.util.PaintList,Private,N,N,);
Attribute(autoPopulateSeriesPaint,boolean,Private,N,N,);
Attribute(basePaint,java.awt.Paint,Private,N,N,);
Attribute(fillPaintList,org.jfree.util.PaintList,Private,N,N,);
Attribute(autoPopulateSeriesFillPaint,boolean,Private,N,N,);
Attribute(baseFillPaint,java.awt.Paint,Private,N,N,);
Attribute(outlinePaintList,org.jfree.util.PaintList,Private,N,N,);
Attribute(autoPopulateSeriesOutlinePaint,boolean,Private,N,N,);
Attribute(baseOutlinePaint,java.awt.Paint,Private,N,N,);
Attribute(strokeList,org.jfree.util.StrokeList,Private,N,N,);
Attribute(autoPopulateSeriesStroke,boolean,Private,N,N,);
Attribute(baseStroke,java.awt.Stroke,Private,N,N,);
Attribute(outlineStrokeList,org.jfree.util.StrokeList,Private,N,N,);
Attribute(baseOutlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(autoPopulateSeriesOutlineStroke,boolean,Private,N,N,);
Attribute(shapeList,org.jfree.util.ShapeList,Private,N,N,);
Attribute(autoPopulateSeriesShape,boolean,Private,N,N,);
Attribute(baseShape,java.awt.Shape,Private,N,N,);
Attribute(itemLabelsVisibleList,org.jfree.util.BooleanList,Private,N,N,);
Attribute(baseItemLabelsVisible,java.lang.Boolean,Private,N,N,);
Attribute(itemLabelFontMap,java.util.Map,Private,N,N,java.lang.Integer;java.awt.Font);
Attribute(baseItemLabelFont,java.awt.Font,Private,N,N,);
Attribute(itemLabelPaintList,org.jfree.util.PaintList,Private,N,N,);
Attribute(baseItemLabelPaint,java.awt.Paint,Private,N,N,);
Attribute(positiveItemLabelPositionMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.ItemLabelPosition);
Attribute(basePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Private,N,N,);
Attribute(negativeItemLabelPositionMap,java.util.Map,Private,N,N,java.lang.Integer;org.jfree.chart.labels.ItemLabelPosition);
Attribute(baseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Private,N,N,);
Attribute(itemLabelAnchorOffset,double,Private,N,N,);
Attribute(createEntitiesList,org.jfree.util.BooleanList,Private,N,N,);
Attribute(baseCreateEntities,boolean,Private,N,N,);
Attribute(legendShapeList,org.jfree.util.ShapeList,Private,N,N,);
Attribute(baseLegendShape,java.awt.Shape,Private,N,N,);
Attribute(treatLegendShapeAsLine,boolean,Private,N,N,);
Attribute(legendTextFontMap,java.util.Map,Private,N,N,java.lang.Integer;java.awt.Font);
Attribute(baseLegendTextFont,java.awt.Font,Private,N,N,);
Attribute(legendTextPaint,org.jfree.util.PaintList,Private,N,N,);
Attribute(baseLegendTextPaint,java.awt.Paint,Private,N,N,);
Attribute(dataBoundsIncludesVisibleSeriesOnly,boolean,Private,N,N,);
Attribute(defaultEntityRadius,int,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(event,org.jfree.chart.event.RendererChangeEvent,Private,N,N,);
Attribute(ADJ,double,Private,Y,Y,);
Attribute(OPP,double,Private,Y,Y,);
Attribute(seriesVisible,java.lang.Boolean,Private,N,N,);
Attribute(seriesVisibleInLegend,java.lang.Boolean,Private,N,N,);
Attribute(paint,java.awt.Paint,Private,N,N,);
Attribute(fillPaint,java.awt.Paint,Private,N,N,);
Attribute(outlinePaint,java.awt.Paint,Private,N,N,);
Attribute(stroke,java.awt.Stroke,Private,N,N,);
Attribute(outlineStroke,java.awt.Stroke,Private,N,N,);
Attribute(shape,java.awt.Shape,Private,N,N,);
Attribute(itemLabelsVisible,java.lang.Boolean,Private,N,N,);
Attribute(itemLabelFont,java.awt.Font,Private,N,N,);
Attribute(itemLabelPaint,java.awt.Paint,Private,N,N,);
Attribute(positiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Private,N,N,);
Attribute(negativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Private,N,N,);
Attribute(createEntities,java.lang.Boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDrawingSupplier,org.jfree.chart.plot.DrawingSupplier,Public,N,Y);
Method(getItemVisible,boolean,Public,N,N);
Method(isSeriesVisible,boolean,Public,N,N);
Method(getSeriesVisible,java.lang.Boolean,Public,N,N);
Method(setSeriesVisible,void,Public,N,N);
Method(setSeriesVisible$2,void,Public,N,N);
Method(getBaseSeriesVisible,boolean,Public,N,N);
Method(setBaseSeriesVisible,void,Public,N,N);
Method(setBaseSeriesVisible$2,void,Public,N,N);
Method(isSeriesVisibleInLegend,boolean,Public,N,N);
Method(getSeriesVisibleInLegend,java.lang.Boolean,Public,N,N);
Method(setSeriesVisibleInLegend,void,Public,N,N);
Method(setSeriesVisibleInLegend$2,void,Public,N,N);
Method(getBaseSeriesVisibleInLegend,boolean,Public,N,N);
Method(setBaseSeriesVisibleInLegend,void,Public,N,N);
Method(setBaseSeriesVisibleInLegend$2,void,Public,N,N);
Method(getItemPaint,java.awt.Paint,Public,N,N);
Method(lookupSeriesPaint,java.awt.Paint,Public,N,N);
Method(getSeriesPaint,java.awt.Paint,Public,N,N);
Method(setSeriesPaint,void,Public,N,N);
Method(setSeriesPaint$2,void,Public,N,N);
Method(clearSeriesPaints,void,Public,N,N);
Method(getBasePaint,java.awt.Paint,Public,N,N);
Method(setBasePaint,void,Public,N,N);
Method(setBasePaint$2,void,Public,N,N);
Method(getAutoPopulateSeriesPaint,boolean,Public,N,N);
Method(setAutoPopulateSeriesPaint,void,Public,N,N);
Method(getItemFillPaint,java.awt.Paint,Public,N,N);
Method(lookupSeriesFillPaint,java.awt.Paint,Public,N,N);
Method(getSeriesFillPaint,java.awt.Paint,Public,N,N);
Method(setSeriesFillPaint,void,Public,N,N);
Method(setSeriesFillPaint$2,void,Public,N,N);
Method(getBaseFillPaint,java.awt.Paint,Public,N,N);
Method(setBaseFillPaint,void,Public,N,N);
Method(setBaseFillPaint$2,void,Public,N,N);
Method(getAutoPopulateSeriesFillPaint,boolean,Public,N,N);
Method(setAutoPopulateSeriesFillPaint,void,Public,N,N);
Method(getItemOutlinePaint,java.awt.Paint,Public,N,N);
Method(lookupSeriesOutlinePaint,java.awt.Paint,Public,N,N);
Method(getSeriesOutlinePaint,java.awt.Paint,Public,N,N);
Method(setSeriesOutlinePaint,void,Public,N,N);
Method(setSeriesOutlinePaint$2,void,Public,N,N);
Method(getBaseOutlinePaint,java.awt.Paint,Public,N,N);
Method(setBaseOutlinePaint,void,Public,N,N);
Method(setBaseOutlinePaint$2,void,Public,N,N);
Method(getAutoPopulateSeriesOutlinePaint,boolean,Public,N,N);
Method(setAutoPopulateSeriesOutlinePaint,void,Public,N,N);
Method(getItemStroke,java.awt.Stroke,Public,N,N);
Method(lookupSeriesStroke,java.awt.Stroke,Public,N,N);
Method(getSeriesStroke,java.awt.Stroke,Public,N,N);
Method(setSeriesStroke,void,Public,N,N);
Method(setSeriesStroke$2,void,Public,N,N);
Method(clearSeriesStrokes,void,Public,N,N);
Method(getBaseStroke,java.awt.Stroke,Public,N,N);
Method(setBaseStroke,void,Public,N,N);
Method(setBaseStroke$2,void,Public,N,N);
Method(getAutoPopulateSeriesStroke,boolean,Public,N,N);
Method(setAutoPopulateSeriesStroke,void,Public,N,N);
Method(getItemOutlineStroke,java.awt.Stroke,Public,N,N);
Method(lookupSeriesOutlineStroke,java.awt.Stroke,Public,N,N);
Method(getSeriesOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setSeriesOutlineStroke,void,Public,N,N);
Method(setSeriesOutlineStroke$2,void,Public,N,N);
Method(getBaseOutlineStroke,java.awt.Stroke,Public,N,N);
Method(setBaseOutlineStroke,void,Public,N,N);
Method(setBaseOutlineStroke$2,void,Public,N,N);
Method(getAutoPopulateSeriesOutlineStroke,boolean,Public,N,N);
Method(setAutoPopulateSeriesOutlineStroke,void,Public,N,N);
Method(getItemShape,java.awt.Shape,Public,N,N);
Method(lookupSeriesShape,java.awt.Shape,Public,N,N);
Method(getSeriesShape,java.awt.Shape,Public,N,N);
Method(setSeriesShape,void,Public,N,N);
Method(setSeriesShape$2,void,Public,N,N);
Method(getBaseShape,java.awt.Shape,Public,N,N);
Method(setBaseShape,void,Public,N,N);
Method(setBaseShape$2,void,Public,N,N);
Method(getAutoPopulateSeriesShape,boolean,Public,N,N);
Method(setAutoPopulateSeriesShape,void,Public,N,N);
Method(isItemLabelVisible,boolean,Public,N,N);
Method(isSeriesItemLabelsVisible,boolean,Public,N,N);
Method(setSeriesItemLabelsVisible,void,Public,N,N);
Method(setSeriesItemLabelsVisible$2,void,Public,N,N);
Method(setSeriesItemLabelsVisible$3,void,Public,N,N);
Method(getBaseItemLabelsVisible,java.lang.Boolean,Public,N,N);
Method(setBaseItemLabelsVisible,void,Public,N,N);
Method(setBaseItemLabelsVisible$2,void,Public,N,N);
Method(setBaseItemLabelsVisible$3,void,Public,N,N);
Method(getItemLabelFont,java.awt.Font,Public,N,N);
Method(getSeriesItemLabelFont,java.awt.Font,Public,N,N);
Method(setSeriesItemLabelFont,void,Public,N,N);
Method(setSeriesItemLabelFont$2,void,Public,N,N);
Method(getBaseItemLabelFont,java.awt.Font,Public,N,N);
Method(setBaseItemLabelFont,void,Public,N,N);
Method(setBaseItemLabelFont$2,void,Public,N,N);
Method(getItemLabelPaint,java.awt.Paint,Public,N,N);
Method(getSeriesItemLabelPaint,java.awt.Paint,Public,N,N);
Method(setSeriesItemLabelPaint,void,Public,N,N);
Method(setSeriesItemLabelPaint$2,void,Public,N,N);
Method(getBaseItemLabelPaint,java.awt.Paint,Public,N,N);
Method(setBaseItemLabelPaint,void,Public,N,N);
Method(setBaseItemLabelPaint$2,void,Public,N,N);
Method(getPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(getSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setSeriesPositiveItemLabelPosition,void,Public,N,N);
Method(setSeriesPositiveItemLabelPosition$2,void,Public,N,N);
Method(getBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setBasePositiveItemLabelPosition,void,Public,N,N);
Method(setBasePositiveItemLabelPosition$2,void,Public,N,N);
Method(getNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(getSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setSeriesNegativeItemLabelPosition,void,Public,N,N);
Method(setSeriesNegativeItemLabelPosition$2,void,Public,N,N);
Method(getBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setBaseNegativeItemLabelPosition,void,Public,N,N);
Method(setBaseNegativeItemLabelPosition$2,void,Public,N,N);
Method(getItemLabelAnchorOffset,double,Public,N,N);
Method(setItemLabelAnchorOffset,void,Public,N,N);
Method(getItemCreateEntity,boolean,Public,N,N);
Method(getSeriesCreateEntities,java.lang.Boolean,Public,N,N);
Method(setSeriesCreateEntities,void,Public,N,N);
Method(setSeriesCreateEntities$2,void,Public,N,N);
Method(getBaseCreateEntities,boolean,Public,N,N);
Method(setBaseCreateEntities,void,Public,N,N);
Method(setBaseCreateEntities$2,void,Public,N,N);
Method(getDefaultEntityRadius,int,Public,N,N);
Method(setDefaultEntityRadius,void,Public,N,N);
Method(lookupLegendShape,java.awt.Shape,Public,N,N);
Method(getLegendShape,java.awt.Shape,Public,N,N);
Method(setLegendShape,void,Public,N,N);
Method(getBaseLegendShape,java.awt.Shape,Public,N,N);
Method(setBaseLegendShape,void,Public,N,N);
Method(getTreatLegendShapeAsLine,boolean,Protected,N,N);
Method(setTreatLegendShapeAsLine,void,Protected,N,N);
Method(lookupLegendTextFont,java.awt.Font,Public,N,N);
Method(getLegendTextFont,java.awt.Font,Public,N,N);
Method(setLegendTextFont,void,Public,N,N);
Method(getBaseLegendTextFont,java.awt.Font,Public,N,N);
Method(setBaseLegendTextFont,void,Public,N,N);
Method(lookupLegendTextPaint,java.awt.Paint,Public,N,N);
Method(getLegendTextPaint,java.awt.Paint,Public,N,N);
Method(setLegendTextPaint,void,Public,N,N);
Method(getBaseLegendTextPaint,java.awt.Paint,Public,N,N);
Method(setBaseLegendTextPaint,void,Public,N,N);
Method(getDataBoundsIncludesVisibleSeriesOnly,boolean,Public,N,N);
Method(setDataBoundsIncludesVisibleSeriesOnly,void,Public,N,N);
Method(calculateLabelAnchorPoint,java.awt.geom.Point2D,Protected,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(hasListener,boolean,Public,N,N);
Method(fireChangeEvent,void,Protected,N,N);
Method(notifyListeners,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Protected,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(getSeriesVisible$2,java.lang.Boolean,Public,N,N);
Method(setSeriesVisible$3,void,Public,N,N);
Method(setSeriesVisible$4,void,Public,N,N);
Method(getSeriesVisibleInLegend$2,java.lang.Boolean,Public,N,N);
Method(setSeriesVisibleInLegend$3,void,Public,N,N);
Method(setSeriesVisibleInLegend$4,void,Public,N,N);
Method(setPaint,void,Public,N,N);
Method(setPaint$2,void,Public,N,N);
Method(setFillPaint,void,Public,N,N);
Method(setFillPaint$2,void,Public,N,N);
Method(setOutlinePaint,void,Public,N,N);
Method(setOutlinePaint$2,void,Public,N,N);
Method(setStroke,void,Public,N,N);
Method(setStroke$2,void,Public,N,N);
Method(setOutlineStroke,void,Public,N,N);
Method(setOutlineStroke$2,void,Public,N,N);
Method(setShape,void,Public,N,N);
Method(setShape$2,void,Public,N,N);
Method(setItemLabelsVisible,void,Public,N,N);
Method(setItemLabelsVisible$2,void,Public,N,N);
Method(setItemLabelsVisible$3,void,Public,N,N);
Method(getItemLabelFont$2,java.awt.Font,Public,N,N);
Method(setItemLabelFont,void,Public,N,N);
Method(setItemLabelFont$2,void,Public,N,N);
Method(getItemLabelPaint$2,java.awt.Paint,Public,N,N);
Method(setItemLabelPaint,void,Public,N,N);
Method(setItemLabelPaint$2,void,Public,N,N);
Method(getPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setPositiveItemLabelPosition,void,Public,N,N);
Method(setPositiveItemLabelPosition$2,void,Public,N,N);
Method(getNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,Public,N,N);
Method(setNegativeItemLabelPosition,void,Public,N,N);
Method(setNegativeItemLabelPosition$2,void,Public,N,N);
Method(getCreateEntities,java.lang.Boolean,Public,N,N);
Method(setCreateEntities,void,Public,N,N);
Method(setCreateEntities$2,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(getItemVisible,int,);
Parameter(getItemVisible,int,);
Parameter(isSeriesVisible,int,);
Parameter(getSeriesVisible,int,);
Parameter(setSeriesVisible,int,);
Parameter(setSeriesVisible,java.lang.Boolean,);
Parameter(setSeriesVisible$2,int,);
Parameter(setSeriesVisible$2,java.lang.Boolean,);
Parameter(setSeriesVisible$2,boolean,);
Parameter(setBaseSeriesVisible,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(setBaseSeriesVisible$2,boolean,);
Parameter(isSeriesVisibleInLegend,int,);
Parameter(getSeriesVisibleInLegend,int,);
Parameter(setSeriesVisibleInLegend,int,);
Parameter(setSeriesVisibleInLegend,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,int,);
Parameter(setSeriesVisibleInLegend$2,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$2,boolean,);
Parameter(setBaseSeriesVisibleInLegend,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(setBaseSeriesVisibleInLegend$2,boolean,);
Parameter(getItemPaint,int,);
Parameter(getItemPaint,int,);
Parameter(lookupSeriesPaint,int,);
Parameter(getSeriesPaint,int,);
Parameter(setSeriesPaint,int,);
Parameter(setSeriesPaint,java.awt.Paint,);
Parameter(setSeriesPaint$2,int,);
Parameter(setSeriesPaint$2,java.awt.Paint,);
Parameter(setSeriesPaint$2,boolean,);
Parameter(clearSeriesPaints,boolean,);
Parameter(setBasePaint,java.awt.Paint,);
Parameter(setBasePaint$2,java.awt.Paint,);
Parameter(setBasePaint$2,boolean,);
Parameter(setAutoPopulateSeriesPaint,boolean,);
Parameter(getItemFillPaint,int,);
Parameter(getItemFillPaint,int,);
Parameter(lookupSeriesFillPaint,int,);
Parameter(getSeriesFillPaint,int,);
Parameter(setSeriesFillPaint,int,);
Parameter(setSeriesFillPaint,java.awt.Paint,);
Parameter(setSeriesFillPaint$2,int,);
Parameter(setSeriesFillPaint$2,java.awt.Paint,);
Parameter(setSeriesFillPaint$2,boolean,);
Parameter(setBaseFillPaint,java.awt.Paint,);
Parameter(setBaseFillPaint$2,java.awt.Paint,);
Parameter(setBaseFillPaint$2,boolean,);
Parameter(setAutoPopulateSeriesFillPaint,boolean,);
Parameter(getItemOutlinePaint,int,);
Parameter(getItemOutlinePaint,int,);
Parameter(lookupSeriesOutlinePaint,int,);
Parameter(getSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,int,);
Parameter(setSeriesOutlinePaint,java.awt.Paint,);
Parameter(setSeriesOutlinePaint$2,int,);
Parameter(setSeriesOutlinePaint$2,java.awt.Paint,);
Parameter(setSeriesOutlinePaint$2,boolean,);
Parameter(setBaseOutlinePaint,java.awt.Paint,);
Parameter(setBaseOutlinePaint$2,java.awt.Paint,);
Parameter(setBaseOutlinePaint$2,boolean,);
Parameter(setAutoPopulateSeriesOutlinePaint,boolean,);
Parameter(getItemStroke,int,);
Parameter(getItemStroke,int,);
Parameter(lookupSeriesStroke,int,);
Parameter(getSeriesStroke,int,);
Parameter(setSeriesStroke,int,);
Parameter(setSeriesStroke,java.awt.Stroke,);
Parameter(setSeriesStroke$2,int,);
Parameter(setSeriesStroke$2,java.awt.Stroke,);
Parameter(setSeriesStroke$2,boolean,);
Parameter(clearSeriesStrokes,boolean,);
Parameter(setBaseStroke,java.awt.Stroke,);
Parameter(setBaseStroke$2,java.awt.Stroke,);
Parameter(setBaseStroke$2,boolean,);
Parameter(setAutoPopulateSeriesStroke,boolean,);
Parameter(getItemOutlineStroke,int,);
Parameter(getItemOutlineStroke,int,);
Parameter(lookupSeriesOutlineStroke,int,);
Parameter(getSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,int,);
Parameter(setSeriesOutlineStroke,java.awt.Stroke,);
Parameter(setSeriesOutlineStroke$2,int,);
Parameter(setSeriesOutlineStroke$2,java.awt.Stroke,);
Parameter(setSeriesOutlineStroke$2,boolean,);
Parameter(setBaseOutlineStroke,java.awt.Stroke,);
Parameter(setBaseOutlineStroke$2,java.awt.Stroke,);
Parameter(setBaseOutlineStroke$2,boolean,);
Parameter(setAutoPopulateSeriesOutlineStroke,boolean,);
Parameter(getItemShape,int,);
Parameter(getItemShape,int,);
Parameter(lookupSeriesShape,int,);
Parameter(getSeriesShape,int,);
Parameter(setSeriesShape,int,);
Parameter(setSeriesShape,java.awt.Shape,);
Parameter(setSeriesShape$2,int,);
Parameter(setSeriesShape$2,java.awt.Shape,);
Parameter(setSeriesShape$2,boolean,);
Parameter(setBaseShape,java.awt.Shape,);
Parameter(setBaseShape$2,java.awt.Shape,);
Parameter(setBaseShape$2,boolean,);
Parameter(setAutoPopulateSeriesShape,boolean,);
Parameter(isItemLabelVisible,int,);
Parameter(isItemLabelVisible,int,);
Parameter(isSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,int,);
Parameter(setSeriesItemLabelsVisible,boolean,);
Parameter(setSeriesItemLabelsVisible$2,int,);
Parameter(setSeriesItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,int,);
Parameter(setSeriesItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setSeriesItemLabelsVisible$3,boolean,);
Parameter(setBaseItemLabelsVisible,boolean,);
Parameter(setBaseItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setBaseItemLabelsVisible$3,boolean,);
Parameter(getItemLabelFont,int,);
Parameter(getItemLabelFont,int,);
Parameter(getSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,int,);
Parameter(setSeriesItemLabelFont,java.awt.Font,);
Parameter(setSeriesItemLabelFont$2,int,);
Parameter(setSeriesItemLabelFont$2,java.awt.Font,);
Parameter(setSeriesItemLabelFont$2,boolean,);
Parameter(setBaseItemLabelFont,java.awt.Font,);
Parameter(setBaseItemLabelFont$2,java.awt.Font,);
Parameter(setBaseItemLabelFont$2,boolean,);
Parameter(getItemLabelPaint,int,);
Parameter(getItemLabelPaint,int,);
Parameter(getSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,int,);
Parameter(setSeriesItemLabelPaint,java.awt.Paint,);
Parameter(setSeriesItemLabelPaint$2,int,);
Parameter(setSeriesItemLabelPaint$2,java.awt.Paint,);
Parameter(setSeriesItemLabelPaint$2,boolean,);
Parameter(setBaseItemLabelPaint,java.awt.Paint,);
Parameter(setBaseItemLabelPaint$2,java.awt.Paint,);
Parameter(setBaseItemLabelPaint$2,boolean,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(getPositiveItemLabelPosition,int,);
Parameter(getSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,int,);
Parameter(setSeriesPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,int,);
Parameter(setSeriesPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesPositiveItemLabelPosition$2,boolean,);
Parameter(setBasePositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBasePositiveItemLabelPosition$2,boolean,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(getNegativeItemLabelPosition,int,);
Parameter(getSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,int,);
Parameter(setSeriesNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,int,);
Parameter(setSeriesNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setSeriesNegativeItemLabelPosition$2,boolean,);
Parameter(setBaseNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setBaseNegativeItemLabelPosition$2,boolean,);
Parameter(setItemLabelAnchorOffset,double,);
Parameter(getItemCreateEntity,int,);
Parameter(getItemCreateEntity,int,);
Parameter(getSeriesCreateEntities,int,);
Parameter(setSeriesCreateEntities,int,);
Parameter(setSeriesCreateEntities,java.lang.Boolean,);
Parameter(setSeriesCreateEntities$2,int,);
Parameter(setSeriesCreateEntities$2,java.lang.Boolean,);
Parameter(setSeriesCreateEntities$2,boolean,);
Parameter(setBaseCreateEntities,boolean,);
Parameter(setBaseCreateEntities$2,boolean,);
Parameter(setBaseCreateEntities$2,boolean,);
Parameter(setDefaultEntityRadius,int,);
Parameter(lookupLegendShape,int,);
Parameter(getLegendShape,int,);
Parameter(setLegendShape,int,);
Parameter(setLegendShape,java.awt.Shape,);
Parameter(setBaseLegendShape,java.awt.Shape,);
Parameter(setTreatLegendShapeAsLine,boolean,);
Parameter(lookupLegendTextFont,int,);
Parameter(getLegendTextFont,int,);
Parameter(setLegendTextFont,int,);
Parameter(setLegendTextFont,java.awt.Font,);
Parameter(setBaseLegendTextFont,java.awt.Font,);
Parameter(lookupLegendTextPaint,int,);
Parameter(getLegendTextPaint,int,);
Parameter(setLegendTextPaint,int,);
Parameter(setLegendTextPaint,java.awt.Paint,);
Parameter(setBaseLegendTextPaint,java.awt.Paint,);
Parameter(setDataBoundsIncludesVisibleSeriesOnly,boolean,);
Parameter(calculateLabelAnchorPoint,org.jfree.chart.labels.ItemLabelAnchor,);
Parameter(calculateLabelAnchorPoint,double,);
Parameter(calculateLabelAnchorPoint,double,);
Parameter(calculateLabelAnchorPoint,org.jfree.chart.plot.PlotOrientation,);
Parameter(addChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.RendererChangeListener,);
Parameter(hasListener,java.util.EventListener,);
Parameter(notifyListeners,org.jfree.chart.event.RendererChangeEvent,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(setSeriesVisible$3,java.lang.Boolean,);
Parameter(setSeriesVisible$4,java.lang.Boolean,);
Parameter(setSeriesVisible$4,boolean,);
Parameter(setSeriesVisibleInLegend$3,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,java.lang.Boolean,);
Parameter(setSeriesVisibleInLegend$4,boolean,);
Parameter(setPaint,java.awt.Paint,);
Parameter(setPaint$2,java.awt.Paint,);
Parameter(setPaint$2,boolean,);
Parameter(setFillPaint,java.awt.Paint,);
Parameter(setFillPaint$2,java.awt.Paint,);
Parameter(setFillPaint$2,boolean,);
Parameter(setOutlinePaint,java.awt.Paint,);
Parameter(setOutlinePaint$2,java.awt.Paint,);
Parameter(setOutlinePaint$2,boolean,);
Parameter(setStroke,java.awt.Stroke,);
Parameter(setStroke$2,java.awt.Stroke,);
Parameter(setStroke$2,boolean,);
Parameter(setOutlineStroke,java.awt.Stroke,);
Parameter(setOutlineStroke$2,java.awt.Stroke,);
Parameter(setOutlineStroke$2,boolean,);
Parameter(setShape,java.awt.Shape,);
Parameter(setShape$2,java.awt.Shape,);
Parameter(setShape$2,boolean,);
Parameter(setItemLabelsVisible,boolean,);
Parameter(setItemLabelsVisible$2,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,java.lang.Boolean,);
Parameter(setItemLabelsVisible$3,boolean,);
Parameter(setItemLabelFont,java.awt.Font,);
Parameter(setItemLabelFont$2,java.awt.Font,);
Parameter(setItemLabelFont$2,boolean,);
Parameter(setItemLabelPaint,java.awt.Paint,);
Parameter(setItemLabelPaint$2,java.awt.Paint,);
Parameter(setItemLabelPaint$2,boolean,);
Parameter(setPositiveItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setPositiveItemLabelPosition$2,boolean,);
Parameter(setNegativeItemLabelPosition,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,org.jfree.chart.labels.ItemLabelPosition,);
Parameter(setNegativeItemLabelPosition$2,boolean,);
Parameter(setCreateEntities,java.lang.Boolean,);
Parameter(setCreateEntities$2,java.lang.Boolean,);
Parameter(setCreateEntities$2,boolean,);
SubClass(org.jfree.chart.renderer.xy.AbstractXYItemRenderer);
SubClass(org.jfree.chart.renderer.category.AbstractCategoryItemRenderer);
Composition(org.jfree.chart.labels.ItemLabelPosition);
Composition(org.jfree.chart.event.RendererChangeEvent);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemVisible --> isSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible --> setSeriesVisible$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$2 --> notifyListeners,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisible --> setBaseSeriesVisible$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisible$2 --> notifyListeners,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend --> setSeriesVisibleInLegend$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisibleInLegend --> setBaseSeriesVisibleInLegend$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisibleInLegend$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemPaint --> lookupSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> getSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> setSeriesPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesPaint --> setSeriesPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,clearSeriesPaints --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBasePaint --> setBasePaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBasePaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemFillPaint --> lookupSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> getSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> setSeriesFillPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesFillPaint --> setSeriesFillPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesFillPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseFillPaint --> setBaseFillPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseFillPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemOutlinePaint --> lookupSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> getSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> setSeriesOutlinePaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlinePaint --> setSeriesOutlinePaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlinePaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlinePaint --> setBaseOutlinePaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlinePaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemStroke --> lookupSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> getSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> setSeriesStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesStroke --> setSeriesStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,clearSeriesStrokes --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseStroke --> setBaseStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemOutlineStroke --> lookupSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> getSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> setSeriesOutlineStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlineStroke --> setSeriesOutlineStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlineStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlineStroke --> setBaseOutlineStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlineStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemShape --> lookupSeriesShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> getSeriesShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> getDrawingSupplier,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> setSeriesShape$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesShape --> setSeriesShape$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesShape$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseShape --> setBaseShape$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseShape$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,isItemLabelVisible --> isSeriesItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelsVisible --> setSeriesItemLabelsVisible$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelsVisible$2 --> setSeriesItemLabelsVisible$3,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelsVisible$3 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelsVisible --> setBaseItemLabelsVisible$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelsVisible$2 --> setBaseItemLabelsVisible$3,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelsVisible$3 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemLabelFont --> getSeriesItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelFont --> setSeriesItemLabelFont$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelFont$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelFont --> setBaseItemLabelFont$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelFont$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemLabelPaint --> getSeriesItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelPaint --> setSeriesItemLabelPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelPaint --> setBaseItemLabelPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getPositiveItemLabelPosition --> getSeriesPositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesPositiveItemLabelPosition --> setSeriesPositiveItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesPositiveItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBasePositiveItemLabelPosition --> setBasePositiveItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBasePositiveItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getNegativeItemLabelPosition --> getSeriesNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesNegativeItemLabelPosition --> setSeriesNegativeItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesNegativeItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseNegativeItemLabelPosition --> setBaseNegativeItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseNegativeItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelAnchorOffset --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,getItemCreateEntity --> getSeriesCreateEntities,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesCreateEntities --> setSeriesCreateEntities$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesCreateEntities$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseCreateEntities --> setBaseCreateEntities$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseCreateEntities$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupLegendShape --> getLegendShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupLegendShape --> lookupSeriesShape,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setLegendShape --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendShape --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setTreatLegendShapeAsLine --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupLegendTextFont --> getLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setLegendTextFont --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendTextFont --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupLegendTextPaint --> getLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setLegendTextPaint --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendTextPaint --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setDataBoundsIncludesVisibleSeriesOnly --> notifyListeners,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,fireChangeEvent --> notifyListeners,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$3 --> setSeriesVisible$4,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$4 --> notifyListeners,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend$3 --> setSeriesVisibleInLegend$4,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend$4 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setPaint --> setPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setFillPaint --> setFillPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setFillPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setOutlinePaint --> setOutlinePaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setOutlinePaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setStroke --> setStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setOutlineStroke --> setOutlineStroke$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setOutlineStroke$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setShape --> setShape$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setShape$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelsVisible --> setItemLabelsVisible$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelsVisible$2 --> setItemLabelsVisible$3,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelsVisible$3 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelFont --> setItemLabelFont$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelFont$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelPaint --> setItemLabelPaint$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setItemLabelPaint$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setPositiveItemLabelPosition --> setPositiveItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setPositiveItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setNegativeItemLabelPosition --> setNegativeItemLabelPosition$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setNegativeItemLabelPosition$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setCreateEntities --> setCreateEntities$2,org.jfree.chart.renderer.AbstractRenderer,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setCreateEntities$2 --> fireChangeEvent,org.jfree.chart.renderer.AbstractRenderer,);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> DEFAULT_PAINT,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> DEFAULT_OUTLINE_PAINT,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> DEFAULT_STROKE,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> DEFAULT_OUTLINE_STROKE,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> DEFAULT_SHAPE,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelAnchorOffset,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> dataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> seriesVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> seriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> paint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> paintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> basePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> stroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> strokeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> shape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> shapeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> autoPopulateSeriesShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> positiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> basePositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> negativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> createEntities,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseCreateEntities,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> defaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> treatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> listenerList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisible --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisible --> seriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisible --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesVisible --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$2 --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseSeriesVisible --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisible$2 --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisibleInLegend --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisibleInLegend --> seriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesVisibleInLegend --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesVisibleInLegend --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend$2 --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseSeriesVisibleInLegend --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisibleInLegend$2 --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> paint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> autoPopulateSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> basePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesPaint --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesPaint$2 --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clearSeriesPaints --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBasePaint --> basePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBasePaint$2 --> basePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesPaint --> autoPopulateSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesPaint --> autoPopulateSeriesPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> autoPopulateSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesFillPaint --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesFillPaint$2 --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseFillPaint --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseFillPaint$2 --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesFillPaint --> autoPopulateSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesFillPaint --> autoPopulateSeriesFillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> autoPopulateSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesOutlinePaint --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlinePaint$2 --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseOutlinePaint --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlinePaint$2 --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesOutlinePaint --> autoPopulateSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesOutlinePaint --> autoPopulateSeriesOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> stroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> autoPopulateSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesStroke --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesStroke$2 --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clearSeriesStrokes --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseStroke --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseStroke$2 --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesStroke --> autoPopulateSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesStroke --> autoPopulateSeriesStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> autoPopulateSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesOutlineStroke --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesOutlineStroke$2 --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseOutlineStroke --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlineStroke$2 --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesOutlineStroke --> autoPopulateSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesOutlineStroke --> autoPopulateSeriesOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> shape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> autoPopulateSeriesShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> baseShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesShape --> shapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesShape$2 --> shapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseShape --> baseShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseShape$2 --> baseShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getAutoPopulateSeriesShape --> autoPopulateSeriesShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setAutoPopulateSeriesShape --> autoPopulateSeriesShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesItemLabelsVisible --> itemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesItemLabelsVisible --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,isSeriesItemLabelsVisible --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelsVisible$3 --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseItemLabelsVisible --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelsVisible$3 --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelFont --> itemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelFont --> baseItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesItemLabelFont --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelFont$2 --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseItemLabelFont --> baseItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelFont$2 --> baseItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelPaint --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelPaint --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesItemLabelPaint --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesItemLabelPaint$2 --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseItemLabelPaint --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelPaint$2 --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesPositiveItemLabelPosition --> positiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesPositiveItemLabelPosition --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesPositiveItemLabelPosition --> basePositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesPositiveItemLabelPosition$2 --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBasePositiveItemLabelPosition --> basePositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBasePositiveItemLabelPosition$2 --> basePositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesNegativeItemLabelPosition --> negativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesNegativeItemLabelPosition --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesNegativeItemLabelPosition --> baseNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesNegativeItemLabelPosition$2 --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseNegativeItemLabelPosition --> baseNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseNegativeItemLabelPosition$2 --> baseNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelAnchorOffset --> itemLabelAnchorOffset,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setItemLabelAnchorOffset --> itemLabelAnchorOffset,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemCreateEntity --> createEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemCreateEntity --> baseCreateEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesCreateEntities --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesCreateEntities$2 --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseCreateEntities --> baseCreateEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseCreateEntities$2 --> baseCreateEntities,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getDefaultEntityRadius --> defaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setDefaultEntityRadius --> defaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupLegendShape --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getLegendShape --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setLegendShape --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseLegendShape --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendShape --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getTreatLegendShapeAsLine --> treatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setTreatLegendShapeAsLine --> treatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setTreatLegendShapeAsLine --> treatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupLegendTextFont --> baseLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getLegendTextFont --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setLegendTextFont --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseLegendTextFont --> baseLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendTextFont --> baseLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,lookupLegendTextPaint --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getLegendTextPaint --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setLegendTextPaint --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getBaseLegendTextPaint --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setBaseLegendTextPaint --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getDataBoundsIncludesVisibleSeriesOnly --> dataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setDataBoundsIncludesVisibleSeriesOnly --> dataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OPP,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> itemLabelAnchorOffset,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> ADJ,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,addChangeListener --> listenerList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,removeChangeListener --> listenerList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hasListener --> listenerList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,notifyListeners --> listenerList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> dataBoundsIncludesVisibleSeriesOnly,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> treatLegendShapeAsLine,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> defaultEntityRadius,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> seriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> seriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> paint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> basePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> stroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> shape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> shapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseItemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> positiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> basePositiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> negativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseNegativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> itemLabelAnchorOffset,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> createEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseCreateEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseLegendTextFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,equals --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseSeriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseSeriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> basePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,hashCode --> baseItemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> paintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> strokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> shape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> shapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> baseShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> seriesVisibleList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> seriesVisibleInLegendList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> paintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> fillPaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> outlinePaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> strokeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> outlineStrokeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> shape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> shapeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> baseShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelsVisibleList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelFontMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> itemLabelPaintList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> positiveItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> negativeItemLabelPositionMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> createEntitiesList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendShapeList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendTextFontMap,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> legendTextPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> listenerList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,clone --> event,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> paint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> basePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> stroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> shape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,writeObject --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> paint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> basePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseFillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseOutlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> stroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseOutlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> shape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseItemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseLegendShape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> baseLegendTextPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,readObject --> listenerList,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesVisible$2 --> seriesVisible,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$4 --> seriesVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getSeriesVisibleInLegend$2 --> seriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisibleInLegend$4 --> seriesVisibleInLegend,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setPaint$2 --> paint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setFillPaint$2 --> fillPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setOutlinePaint$2 --> outlinePaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setStroke$2 --> stroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setOutlineStroke$2 --> outlineStroke,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setShape$2 --> shape,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setItemLabelsVisible$3 --> itemLabelsVisible,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelFont$2 --> itemLabelFont,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setItemLabelFont$2 --> itemLabelFont,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getItemLabelPaint$2 --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setItemLabelPaint$2 --> itemLabelPaint,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getPositiveItemLabelPosition$2 --> positiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setPositiveItemLabelPosition$2 --> positiveItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getNegativeItemLabelPosition$2 --> negativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setNegativeItemLabelPosition$2 --> negativeItemLabelPosition,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,getCreateEntities --> createEntities,org.jfree.chart.renderer.AbstractRenderer,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,setCreateEntities$2 --> createEntities,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> ZERO,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_PAINT,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_OUTLINE_PAINT,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_STROKE,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_OUTLINE_STROKE,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_SHAPE,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_VALUE_LABEL_FONT,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> DEFAULT_VALUE_LABEL_PAINT,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> ADJ,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<clinit> --> OPP,org.jfree.chart.renderer.AbstractRenderer,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,<init> --> OUTSIDE6,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> CENTER,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE1,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE2,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE3,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE4,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE5,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE6,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE7,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE8,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE9,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE10,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE11,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> INSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE1,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE2,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE3,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE4,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE5,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE6,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE7,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE8,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE9,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE10,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE11,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.AbstractRenderer,calculateLabelAnchorPoint --> OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,<init> --> <init>$2,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$2 --> <init>$2,org.jfree.chart.event.RendererChangeEvent,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseSeriesVisible$2 --> <init>$2,org.jfree.chart.event.RendererChangeEvent,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesPaint --> getNextPaint,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesFillPaint --> getNextFillPaint,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseFillPaint$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlinePaint --> getNextOutlinePaint,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlinePaint$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesStroke --> getNextStroke,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseStroke$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesOutlineStroke --> getNextOutlineStroke,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseOutlineStroke$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,lookupSeriesShape --> getNextShape,org.jfree.chart.plot.DrawingSupplier,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseShape$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelFont --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseItemLabelPaint$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBasePositiveItemLabelPosition$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setBaseNegativeItemLabelPosition$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setDataBoundsIncludesVisibleSeriesOnly --> <init>$2,org.jfree.chart.event.RendererChangeEvent,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,addChangeListener --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,removeChangeListener --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,fireChangeEvent --> <init>,org.jfree.chart.event.RendererChangeEvent,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,notifyListeners --> rendererChanged,org.jfree.chart.event.RendererChangeListener,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$9,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$10,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$4,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$11,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$5,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,hashCode --> hashCode$7,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,clone --> cloneMapValues,org.jfree.chart.util.CloneUtils,);
Call(METHOD,org.jfree.chart.renderer.AbstractRenderer,setSeriesVisible$4 --> <init>$2,org.jfree.chart.event.RendererChangeEvent,);
EndClass 106
StartClass 107
Class(org.jfree.chart.labels.XYItemLabelGenerator,Y,Y,Public);
Method(generateLabel,java.lang.String,Public,N,Y);
Parameter(generateLabel,org.jfree.data.xy.XYDataset,);
Parameter(generateLabel,int,);
Parameter(generateLabel,int,);
EndClass 107
StartClass 108
Class(org.jfree.chart.labels.XYToolTipGenerator,Y,Y,Public);
Method(generateToolTip,java.lang.String,Public,N,Y);
Parameter(generateToolTip,org.jfree.data.xy.XYDataset,);
Parameter(generateToolTip,int,);
Parameter(generateToolTip,int,);
EndClass 108
StartClass 109
Class(org.jfree.chart.urls.XYURLGenerator,Y,Y,Public);
Method(generateURL,java.lang.String,Public,N,Y);
Parameter(generateURL,org.jfree.data.xy.XYDataset,);
Parameter(generateURL,int,);
Parameter(generateURL,int,);
EndClass 109
StartClass 110
Class(org.jfree.chart.labels.XYSeriesLabelGenerator,Y,Y,Public);
Method(generateLabel,java.lang.String,Public,N,Y);
Parameter(generateLabel,org.jfree.data.xy.XYDataset,);
Parameter(generateLabel,int,);
EndClass 110
StartClass 111
Class(org.jfree.chart.plot.ValueMarker,N,N,Public);
Attribute(value,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getValue,double,Public,N,N);
Method(setValue,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>,double,);
Parameter(<init>$2,double,);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$2,java.awt.Stroke,);
Parameter(<init>$3,double,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,float,);
Parameter(setValue,double,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.plot.Marker);
Generalization(org.jfree.chart.plot.Marker);
Call(METHOD,org.jfree.chart.plot.ValueMarker,<init>$2 --> <init>$3,org.jfree.chart.plot.ValueMarker,);
Call(ATTRIBUTE,org.jfree.chart.plot.ValueMarker,<init> --> value,org.jfree.chart.plot.ValueMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.ValueMarker,<init>$3 --> value,org.jfree.chart.plot.ValueMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.ValueMarker,getValue --> value,org.jfree.chart.plot.ValueMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.ValueMarker,setValue --> value,org.jfree.chart.plot.ValueMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.ValueMarker,equals --> value,org.jfree.chart.plot.ValueMarker,READ);
Call(METHOD,org.jfree.chart.plot.ValueMarker,<init> --> <init>,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.ValueMarker,<init>$3 --> <init>$3,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.ValueMarker,setValue --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.ValueMarker,setValue --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.ValueMarker,equals --> equals,org.jfree.chart.plot.Marker,);
EndClass 111
StartClass 112
Class(org.jfree.chart.labels.StandardXYSeriesLabelGenerator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_LABEL_FORMAT,java.lang.String,Public,Y,Y,);
Attribute(formatPattern,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(generateLabel,java.lang.String,Public,N,N);
Method(createItemArray,java.lang.Object[],Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(generateLabel,org.jfree.data.xy.XYDataset,);
Parameter(generateLabel,int,);
Parameter(createItemArray,org.jfree.data.xy.XYDataset,);
Parameter(createItemArray,int,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.labels.XYSeriesLabelGenerator);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,<init> --> <init>$2,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,generateLabel --> createItemArray,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,<init>$2 --> formatPattern,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,generateLabel --> formatPattern,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,equals --> formatPattern,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,hashCode --> formatPattern,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,READ);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,generateLabel --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,createItemArray --> getSeriesKey,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.chart.labels.StandardXYSeriesLabelGenerator,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
EndClass 112
StartClass 113
Class(org.jfree.chart.labels.ItemLabelPosition,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(itemLabelAnchor,org.jfree.chart.labels.ItemLabelAnchor,Private,N,N,);
Attribute(textAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(rotationAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(angle,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getItemLabelAnchor,org.jfree.chart.labels.ItemLabelAnchor,Public,N,N);
Method(getTextAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(getRotationAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(getAngle,double,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>$2,org.jfree.chart.labels.ItemLabelAnchor,);
Parameter(<init>$2,org.jfree.ui.TextAnchor,);
Parameter(<init>$3,org.jfree.chart.labels.ItemLabelAnchor,);
Parameter(<init>$3,org.jfree.ui.TextAnchor,);
Parameter(<init>$3,org.jfree.ui.TextAnchor,);
Parameter(<init>$3,double,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.labels.ItemLabelAnchor);
Call(METHOD,org.jfree.chart.labels.ItemLabelPosition,<init> --> <init>$3,org.jfree.chart.labels.ItemLabelPosition,);
Call(METHOD,org.jfree.chart.labels.ItemLabelPosition,<init>$2 --> <init>$3,org.jfree.chart.labels.ItemLabelPosition,);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,<init>$3 --> itemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,<init>$3 --> textAnchor,org.jfree.chart.labels.ItemLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,<init>$3 --> rotationAnchor,org.jfree.chart.labels.ItemLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,<init>$3 --> angle,org.jfree.chart.labels.ItemLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,getItemLabelAnchor --> itemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,getTextAnchor --> textAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,getRotationAnchor --> rotationAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,getAngle --> angle,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,equals --> itemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,equals --> textAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,equals --> rotationAnchor,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,equals --> angle,org.jfree.chart.labels.ItemLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelPosition,<init> --> OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(METHOD,org.jfree.chart.labels.ItemLabelPosition,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.labels.ItemLabelPosition,equals --> equals,org.jfree.chart.labels.ItemLabelAnchor,);
EndClass 113
StartClass 114
Class(org.jfree.chart.labels.ItemLabelAnchor,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(CENTER,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE1,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE2,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE3,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE4,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE5,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE6,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE7,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE8,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE9,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE10,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE11,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(INSIDE12,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE1,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE2,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE3,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE4,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE5,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE6,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE7,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE8,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE9,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE10,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE11,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.labels.ItemLabelAnchor);
Call(METHOD,org.jfree.chart.labels.ItemLabelAnchor,equals --> toString,org.jfree.chart.labels.ItemLabelAnchor,);
Call(METHOD,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> equals,org.jfree.chart.labels.ItemLabelAnchor,);
Call(METHOD,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> <init>,org.jfree.chart.labels.ItemLabelAnchor,);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<init> --> name,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,toString --> name,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,equals --> name,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> CENTER,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE1,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE2,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE3,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE4,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE5,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE6,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE7,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE8,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE9,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE10,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE11,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> INSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE1,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE2,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE3,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE4,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE5,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE6,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE7,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE8,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE9,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE10,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE11,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,readResolve --> OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> CENTER,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE1,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE2,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE3,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE4,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE5,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE6,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE7,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE8,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE9,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE10,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE11,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> INSIDE12,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE1,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE2,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE3,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE4,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE5,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE6,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE7,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE8,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE9,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE10,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE11,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.ItemLabelAnchor,<clinit> --> OUTSIDE12,org.jfree.chart.labels.ItemLabelAnchor,WRITE);
EndClass 114
StartClass 115
Class(org.jfree.chart.plot.IntervalMarker,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(startValue,double,Private,N,N,);
Attribute(endValue,double,Private,N,N,);
Attribute(gradientPaintTransformer,org.jfree.ui.GradientPaintTransformer,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getStartValue,double,Public,N,N);
Method(setStartValue,void,Public,N,N);
Method(getEndValue,double,Public,N,N);
Method(setEndValue,void,Public,N,N);
Method(getGradientPaintTransformer,org.jfree.ui.GradientPaintTransformer,Public,N,N);
Method(setGradientPaintTransformer,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(<init>,double,);
Parameter(<init>,double,);
Parameter(<init>$2,double,);
Parameter(<init>$2,double,);
Parameter(<init>$2,java.awt.Paint,);
Parameter(<init>$3,double,);
Parameter(<init>$3,double,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,java.awt.Paint,);
Parameter(<init>$3,java.awt.Stroke,);
Parameter(<init>$3,float,);
Parameter(setStartValue,double,);
Parameter(setEndValue,double,);
Parameter(setGradientPaintTransformer,org.jfree.ui.GradientPaintTransformer,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.plot.Marker);
Generalization(org.jfree.chart.plot.Marker);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,<init> --> <init>$3,org.jfree.chart.plot.IntervalMarker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,<init>$2 --> <init>$3,org.jfree.chart.plot.IntervalMarker,);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,<init>$3 --> startValue,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,<init>$3 --> endValue,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,<init>$3 --> gradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,getStartValue --> startValue,org.jfree.chart.plot.IntervalMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,setStartValue --> startValue,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,getEndValue --> endValue,org.jfree.chart.plot.IntervalMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,setEndValue --> endValue,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,getGradientPaintTransformer --> gradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,setGradientPaintTransformer --> gradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,WRITE);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,equals --> startValue,org.jfree.chart.plot.IntervalMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,equals --> endValue,org.jfree.chart.plot.IntervalMarker,READ);
Call(ATTRIBUTE,org.jfree.chart.plot.IntervalMarker,equals --> gradientPaintTransformer,org.jfree.chart.plot.IntervalMarker,READ);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,<init>$3 --> <init>$3,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,<init>$3 --> setLabelOffsetType,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setStartValue --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setStartValue --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setEndValue --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setEndValue --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setGradientPaintTransformer --> <init>,org.jfree.chart.event.MarkerChangeEvent,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,setGradientPaintTransformer --> notifyListeners,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,equals --> equals,org.jfree.chart.plot.Marker,);
Call(METHOD,org.jfree.chart.plot.IntervalMarker,clone --> clone,org.jfree.chart.plot.Marker,);
EndClass 115
StartClass 116
Class(org.jfree.chart.entity.XYItemEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(dataset,org.jfree.data.xy.XYDataset,Private,N,N,);
Attribute(series,int,Private,N,N,);
Attribute(item,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDataset,org.jfree.data.xy.XYDataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(getSeriesIndex,int,Public,N,N);
Method(setSeriesIndex,void,Public,N,N);
Method(getItem,int,Public,N,N);
Method(setItem,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,org.jfree.data.xy.XYDataset,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(setDataset,org.jfree.data.xy.XYDataset,);
Parameter(setSeriesIndex,int,);
Parameter(setItem,int,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.data.xy.XYDataset);
Call(METHOD,org.jfree.chart.entity.XYItemEntity,toString --> getSeriesIndex,org.jfree.chart.entity.XYItemEntity,);
Call(METHOD,org.jfree.chart.entity.XYItemEntity,toString --> getItem,org.jfree.chart.entity.XYItemEntity,);
Call(METHOD,org.jfree.chart.entity.XYItemEntity,toString --> getDataset,org.jfree.chart.entity.XYItemEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,<init> --> dataset,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,<init> --> series,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,<init> --> item,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,getDataset --> dataset,org.jfree.chart.entity.XYItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,setDataset --> dataset,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,getSeriesIndex --> series,org.jfree.chart.entity.XYItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,setSeriesIndex --> series,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,getItem --> item,org.jfree.chart.entity.XYItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,setItem --> item,org.jfree.chart.entity.XYItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,equals --> series,org.jfree.chart.entity.XYItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.XYItemEntity,equals --> item,org.jfree.chart.entity.XYItemEntity,READ);
Call(METHOD,org.jfree.chart.entity.XYItemEntity,<init> --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.XYItemEntity,equals --> equals,org.jfree.chart.entity.ChartEntity,);
EndClass 116
StartClass 117
Class(org.jfree.data.general.SeriesDataset,Y,Y,Public);
Method(getSeriesCount,int,Public,N,Y);
Method(getSeriesKey,java.lang.Comparable,Public,N,Y);
Method(indexOf,int,Public,N,Y);
Parameter(getSeriesKey,int,);
Parameter(indexOf,java.lang.Comparable,);
Realization(org.jfree.data.general.Dataset);
EndClass 117
StartClass 118
Class(org.jfree.data.DomainOrder,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(NONE,org.jfree.data.DomainOrder,Public,Y,Y,);
Attribute(ASCENDING,org.jfree.data.DomainOrder,Public,Y,Y,);
Attribute(DESCENDING,org.jfree.data.DomainOrder,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.data.DomainOrder);
Call(METHOD,org.jfree.data.DomainOrder,equals --> toString,org.jfree.data.DomainOrder,);
Call(METHOD,org.jfree.data.DomainOrder,readResolve --> equals,org.jfree.data.DomainOrder,);
Call(METHOD,org.jfree.data.DomainOrder,<clinit> --> <init>,org.jfree.data.DomainOrder,);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,<init> --> name,org.jfree.data.DomainOrder,WRITE);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,toString --> name,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,equals --> name,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,hashCode --> name,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,readResolve --> ASCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,readResolve --> DESCENDING,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,readResolve --> NONE,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,<clinit> --> NONE,org.jfree.data.DomainOrder,WRITE);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,<clinit> --> ASCENDING,org.jfree.data.DomainOrder,WRITE);
Call(ATTRIBUTE,org.jfree.data.DomainOrder,<clinit> --> DESCENDING,org.jfree.data.DomainOrder,WRITE);
EndClass 118
StartClass 119
Class(org.jfree.chart.axis.AxisLabelLocation,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(HIGH_END,org.jfree.chart.axis.AxisLabelLocation,Public,Y,Y,);
Attribute(MIDDLE,org.jfree.chart.axis.AxisLabelLocation,Public,Y,Y,);
Attribute(LOW_END,org.jfree.chart.axis.AxisLabelLocation,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.AxisLabelLocation);
Call(METHOD,org.jfree.chart.axis.AxisLabelLocation,equals --> toString,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.AxisLabelLocation,readResolve --> equals,org.jfree.chart.axis.AxisLabelLocation,);
Call(METHOD,org.jfree.chart.axis.AxisLabelLocation,<clinit> --> <init>,org.jfree.chart.axis.AxisLabelLocation,);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,<init> --> name,org.jfree.chart.axis.AxisLabelLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,toString --> name,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,equals --> name,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,hashCode --> name,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,readResolve --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,readResolve --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,readResolve --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,<clinit> --> HIGH_END,org.jfree.chart.axis.AxisLabelLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,<clinit> --> MIDDLE,org.jfree.chart.axis.AxisLabelLocation,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.AxisLabelLocation,<clinit> --> LOW_END,org.jfree.chart.axis.AxisLabelLocation,WRITE);
EndClass 119
StartClass 120
Class(org.jfree.chart.entity.AxisEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(axis,org.jfree.chart.axis.Axis,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getAxis,org.jfree.chart.axis.Axis,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,org.jfree.chart.axis.Axis,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,org.jfree.chart.axis.Axis,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.awt.Shape,);
Parameter(<init>$3,org.jfree.chart.axis.Axis,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(equals,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.chart.axis.Axis);
Call(METHOD,org.jfree.chart.entity.AxisEntity,<init> --> <init>$2,org.jfree.chart.entity.AxisEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.AxisEntity,);
Call(ATTRIBUTE,org.jfree.chart.entity.AxisEntity,<init>$3 --> axis,org.jfree.chart.entity.AxisEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.AxisEntity,getAxis --> axis,org.jfree.chart.entity.AxisEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.AxisEntity,equals --> axis,org.jfree.chart.entity.AxisEntity,READ);
Call(METHOD,org.jfree.chart.entity.AxisEntity,<init>$3 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,<init>$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,toString --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,equals --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,equals --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,equals --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,equals --> equals,org.jfree.chart.axis.Axis,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,hashCode --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,hashCode --> getURLText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,clone --> clone,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,writeObject --> getArea,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.AxisEntity,readObject --> setArea,org.jfree.chart.entity.ChartEntity,);
EndClass 120
StartClass 121
Class(org.jfree.chart.util.AttrStringUtils,N,N,Public);
Method(<init>,void,Private,N,N);
Method(getTextBounds,java.awt.geom.Rectangle2D,Public,Y,N);
Method(drawRotatedString,void,Public,Y,N);
Method(drawRotatedString$2,void,Public,Y,N);
Method(drawRotatedString$3,void,Public,Y,N);
Method(drawRotatedString$4,void,Public,Y,N);
Method(deriveTextBoundsAnchorOffsets,float[],Private,Y,N);
Method(deriveRotationAnchorOffsets,float[],Private,Y,N);
Method(isTop,boolean,Private,Y,N);
Method(isBaseline,boolean,Private,Y,N);
Method(isHalfAscent,boolean,Private,Y,N);
Method(isHalfHeight,boolean,Private,Y,N);
Method(isBottom,boolean,Private,Y,N);
Method(isHorizontalLeft,boolean,Private,Y,N);
Method(isHorizontalCenter,boolean,Private,Y,N);
Method(isHorizontalRight,boolean,Private,Y,N);
Parameter(getTextBounds,java.text.AttributedString,);
Parameter(getTextBounds,java.awt.Graphics2D,);
Parameter(drawRotatedString,java.text.AttributedString,);
Parameter(drawRotatedString,java.awt.Graphics2D,);
Parameter(drawRotatedString,double,);
Parameter(drawRotatedString,float,);
Parameter(drawRotatedString,float,);
Parameter(drawRotatedString$2,java.text.AttributedString,);
Parameter(drawRotatedString$2,java.awt.Graphics2D,);
Parameter(drawRotatedString$2,float,);
Parameter(drawRotatedString$2,float,);
Parameter(drawRotatedString$2,double,);
Parameter(drawRotatedString$2,float,);
Parameter(drawRotatedString$2,float,);
Parameter(drawRotatedString$3,java.text.AttributedString,);
Parameter(drawRotatedString$3,java.awt.Graphics2D,);
Parameter(drawRotatedString$3,float,);
Parameter(drawRotatedString$3,float,);
Parameter(drawRotatedString$3,org.jfree.ui.TextAnchor,);
Parameter(drawRotatedString$3,double,);
Parameter(drawRotatedString$3,float,);
Parameter(drawRotatedString$3,float,);
Parameter(drawRotatedString$4,java.text.AttributedString,);
Parameter(drawRotatedString$4,java.awt.Graphics2D,);
Parameter(drawRotatedString$4,float,);
Parameter(drawRotatedString$4,float,);
Parameter(drawRotatedString$4,org.jfree.ui.TextAnchor,);
Parameter(drawRotatedString$4,double,);
Parameter(drawRotatedString$4,org.jfree.ui.TextAnchor,);
Parameter(deriveTextBoundsAnchorOffsets,java.awt.Graphics2D,);
Parameter(deriveTextBoundsAnchorOffsets,java.text.AttributedString,);
Parameter(deriveTextBoundsAnchorOffsets,org.jfree.ui.TextAnchor,);
Parameter(deriveTextBoundsAnchorOffsets,java.awt.geom.Rectangle2D,);
Parameter(deriveRotationAnchorOffsets,java.awt.Graphics2D,);
Parameter(deriveRotationAnchorOffsets,java.text.AttributedString,);
Parameter(deriveRotationAnchorOffsets,org.jfree.ui.TextAnchor,);
Parameter(isTop,org.jfree.ui.TextAnchor,);
Parameter(isBaseline,org.jfree.ui.TextAnchor,);
Parameter(isHalfAscent,org.jfree.ui.TextAnchor,);
Parameter(isHalfHeight,org.jfree.ui.TextAnchor,);
Parameter(isBottom,org.jfree.ui.TextAnchor,);
Parameter(isHorizontalLeft,org.jfree.ui.TextAnchor,);
Parameter(isHorizontalCenter,org.jfree.ui.TextAnchor,);
Parameter(isHorizontalRight,org.jfree.ui.TextAnchor,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString --> drawRotatedString$2,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$3 --> deriveTextBoundsAnchorOffsets,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$3 --> drawRotatedString$2,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$4 --> deriveTextBoundsAnchorOffsets,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$4 --> deriveRotationAnchorOffsets,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$4 --> drawRotatedString$2,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isHorizontalCenter,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isHorizontalRight,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isTop,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isHalfAscent,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isHalfHeight,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isBaseline,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveTextBoundsAnchorOffsets --> isBottom,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isHorizontalLeft,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isHorizontalCenter,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isHorizontalRight,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isTop,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isHalfHeight,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isHalfAscent,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isBaseline,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,deriveRotationAnchorOffsets --> isBottom,org.jfree.chart.util.AttrStringUtils,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.util.AttrStringUtils,drawRotatedString$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 121
StartClass 122
Class(org.jfree.data.general.PieDataset,Y,Y,Public);
Realization(org.jfree.data.KeyedValues);
Realization(org.jfree.data.general.Dataset);
EndClass 122
StartClass 123
Class(org.jfree.data.KeyedValues,Y,Y,Public);
Method(getKey,java.lang.Comparable,Public,N,Y);
Method(getIndex,int,Public,N,Y);
Method(getKeys,java.util.List,Public,N,Y);
Method(getValue,java.lang.Number,Public,N,Y);
Parameter(getKey,int,);
Parameter(getIndex,java.lang.Comparable,);
Parameter(getValue,java.lang.Comparable,);
Realization(org.jfree.data.Values);
EndClass 123
StartClass 124
Class(org.jfree.data.function.Function2D,Y,Y,Public);
Method(getValue,double,Public,N,Y);
Parameter(getValue,double,);
EndClass 124
StartClass 125
Class(org.jfree.data.xy.XYSeries,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(data,java.util.List,Protected,N,N,);
Attribute(maximumItemCount,int,Private,N,N,);
Attribute(autoSort,boolean,Private,N,N,);
Attribute(allowDuplicateXValues,boolean,Private,N,N,);
Attribute(minX,double,Private,N,N,);
Attribute(maxX,double,Private,N,N,);
Attribute(minY,double,Private,N,N,);
Attribute(maxY,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getMinX,double,Public,N,N);
Method(getMaxX,double,Public,N,N);
Method(getMinY,double,Public,N,N);
Method(getMaxY,double,Public,N,N);
Method(updateBoundsForAddedItem,void,Private,N,N);
Method(updateBoundsForRemovedItem,void,Private,N,N);
Method(findBoundsByIteration,void,Private,N,N);
Method(getAutoSort,boolean,Public,N,N);
Method(getAllowDuplicateXValues,boolean,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(getItems,java.util.List,Public,N,N);
Method(getMaximumItemCount,int,Public,N,N);
Method(setMaximumItemCount,void,Public,N,N);
Method(add,void,Public,N,N);
Method(add$2,void,Public,N,N);
Method(add$3,void,Public,N,N);
Method(add$4,void,Public,N,N);
Method(add$5,void,Public,N,N);
Method(add$6,void,Public,N,N);
Method(add$7,void,Public,N,N);
Method(add$8,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(remove,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(remove$2,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(clear,void,Public,N,N);
Method(getDataItem,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(getRawDataItem,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(getX,java.lang.Number,Public,N,N);
Method(getY,java.lang.Number,Public,N,N);
Method(update,void,Public,N,N);
Method(minIgnoreNaN,double,Private,N,N);
Method(maxIgnoreNaN,double,Private,N,N);
Method(updateByIndex,void,Public,N,N);
Method(update$2,void,Public,N,N);
Method(addOrUpdate,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(addOrUpdate$2,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(addOrUpdate$3,org.jfree.data.xy.XYDataItem,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(toArray,double[][],Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(createCopy,org.jfree.data.xy.XYSeries,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(<init>$2,boolean,);
Parameter(<init>$3,java.lang.Comparable,);
Parameter(<init>$3,boolean,);
Parameter(<init>$3,boolean,);
Parameter(updateBoundsForAddedItem,org.jfree.data.xy.XYDataItem,);
Parameter(updateBoundsForRemovedItem,org.jfree.data.xy.XYDataItem,);
Parameter(setMaximumItemCount,int,);
Parameter(add,org.jfree.data.xy.XYDataItem,);
Parameter(add$2,double,);
Parameter(add$2,double,);
Parameter(add$3,double,);
Parameter(add$3,double,);
Parameter(add$3,boolean,);
Parameter(add$4,double,);
Parameter(add$4,java.lang.Number,);
Parameter(add$5,double,);
Parameter(add$5,java.lang.Number,);
Parameter(add$5,boolean,);
Parameter(add$6,java.lang.Number,);
Parameter(add$6,java.lang.Number,);
Parameter(add$7,java.lang.Number,);
Parameter(add$7,java.lang.Number,);
Parameter(add$7,boolean,);
Parameter(add$8,org.jfree.data.xy.XYDataItem,);
Parameter(add$8,boolean,);
Parameter(delete,int,);
Parameter(delete,int,);
Parameter(remove,int,);
Parameter(remove$2,java.lang.Number,);
Parameter(getDataItem,int,);
Parameter(getRawDataItem,int,);
Parameter(getX,int,);
Parameter(getY,int,);
Parameter(update,int,);
Parameter(update,java.lang.Number,);
Parameter(minIgnoreNaN,double,);
Parameter(minIgnoreNaN,double,);
Parameter(maxIgnoreNaN,double,);
Parameter(maxIgnoreNaN,double,);
Parameter(updateByIndex,int,);
Parameter(updateByIndex,java.lang.Number,);
Parameter(update$2,java.lang.Number,);
Parameter(update$2,java.lang.Number,);
Parameter(addOrUpdate,double,);
Parameter(addOrUpdate,double,);
Parameter(addOrUpdate$2,java.lang.Number,);
Parameter(addOrUpdate$2,java.lang.Number,);
Parameter(addOrUpdate$3,org.jfree.data.xy.XYDataItem,);
Parameter(indexOf,java.lang.Number,);
Parameter(createCopy,int,);
Parameter(createCopy,int,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.data.general.Series);
Generalization(org.jfree.data.general.Series);
Call(METHOD,org.jfree.data.xy.XYSeries,<init> --> <init>$3,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,<init>$2 --> <init>$3,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> minIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> maxIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> findBoundsByIteration,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getAutoSort,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,findBoundsByIteration --> updateBoundsForAddedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,setMaximumItemCount --> findBoundsByIteration,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add --> add$8,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$2 --> add$7,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$3 --> add$7,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$4 --> add$6,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$5 --> add$7,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$6 --> add$7,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$7 --> add$8,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> indexOf,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> updateBoundsForAddedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> updateBoundsForRemovedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,delete --> findBoundsByIteration,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,remove --> updateBoundsForRemovedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,remove$2 --> indexOf,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,remove$2 --> remove,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,getX --> getRawDataItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,getY --> getRawDataItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> getRawDataItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> findBoundsByIteration,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> minIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> maxIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateByIndex --> update,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update$2 --> indexOf,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,update$2 --> updateByIndex,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate --> addOrUpdate$2,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$2 --> addOrUpdate$3,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> add,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> indexOf,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> findBoundsByIteration,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> minIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> maxIgnoreNaN,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> updateBoundsForAddedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> updateBoundsForRemovedItem,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,toArray --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,toArray --> getX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,toArray --> getY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,createCopy --> add,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,hashCode --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeries,hashCode --> getRawDataItem,org.jfree.data.xy.XYSeries,);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> maximumItemCount,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> data,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> autoSort,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> minX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> maxX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,<init>$3 --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getMinX --> minX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getMaxX --> maxX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getMinY --> minY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getMaxY --> maxY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> minX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> maxX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> minY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> maxY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> minX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> maxX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> minX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> maxX,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> minY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> maxY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> minX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> maxX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,findBoundsByIteration --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,findBoundsByIteration --> minX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,findBoundsByIteration --> maxX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,findBoundsByIteration --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,findBoundsByIteration --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getAutoSort --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getAllowDuplicateXValues --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getItemCount --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getItems --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getMaximumItemCount --> maximumItemCount,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,setMaximumItemCount --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,setMaximumItemCount --> maximumItemCount,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,add$8 --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,add$8 --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,add$8 --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,add$8 --> maximumItemCount,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,delete --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,remove --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clear --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clear --> minX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clear --> maxX,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clear --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clear --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getDataItem --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,getRawDataItem --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,update --> minY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,update --> maxY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,update --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,update --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> minY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> maxY,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> maximumItemCount,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> minY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> maxY,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,indexOf --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,indexOf --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clone --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,clone --> data,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,createCopy --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,createCopy --> data,org.jfree.data.xy.XYSeries,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,equals --> maximumItemCount,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,equals --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,equals --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,equals --> data,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,hashCode --> maximumItemCount,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,hashCode --> autoSort,org.jfree.data.xy.XYSeries,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeries,hashCode --> allowDuplicateXValues,org.jfree.data.xy.XYSeries,READ);
Call(METHOD,org.jfree.data.xy.XYSeries,<init>$3 --> <init>,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> getXValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> getY,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForAddedItem --> getYValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getXValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getY,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,updateBoundsForRemovedItem --> getYValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,setMaximumItemCount --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$7 --> <init>,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> clone,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> compareTo,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> <init>,org.jfree.data.general.SeriesException,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> getX,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,add$8 --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,delete --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,remove --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,clear --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,getDataItem --> clone,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,getX --> getX,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,getY --> getY,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> getYValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> setY$2,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,update --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,update$2 --> <init>,org.jfree.data.general.SeriesException,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$2 --> <init>,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> getX,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> clone,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> getYValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> getY,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> setY$2,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,addOrUpdate$3 --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,indexOf --> <init>,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,indexOf --> getX,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,clone --> clone,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,createCopy --> clone,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,createCopy --> clone,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYSeries,equals --> equals,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,hashCode --> hashCode,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeries,hashCode --> hashCode,org.jfree.data.xy.XYDataItem,);
EndClass 125
StartClass 126
Class(org.jfree.data.xy.XYZDataset,Y,Y,Public);
Method(getZ,java.lang.Number,Public,N,Y);
Method(getZValue,double,Public,N,Y);
Parameter(getZ,int,);
Parameter(getZ,int,);
Parameter(getZValue,int,);
Parameter(getZValue,int,);
Realization(org.jfree.data.xy.XYDataset);
EndClass 126
StartClass 127
Class(org.jfree.data.KeyToGroupMap,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(defaultGroup,java.lang.Comparable,Private,N,N,);
Attribute(groups,java.util.List,Private,N,N,);
Attribute(keyToGroupMap,java.util.Map,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getGroupCount,int,Public,N,N);
Method(getGroups,java.util.List,Public,N,N);
Method(getGroupIndex,int,Public,N,N);
Method(getGroup,java.lang.Comparable,Public,N,N);
Method(mapKeyToGroup,void,Public,N,N);
Method(getKeyCount,int,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(clone$2,java.lang.Object,Private,Y,N);
Method(clone$3,java.util.Collection,Private,Y,N);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(getGroupIndex,java.lang.Comparable,);
Parameter(getGroup,java.lang.Comparable,);
Parameter(mapKeyToGroup,java.lang.Comparable,);
Parameter(mapKeyToGroup,java.lang.Comparable,);
Parameter(getKeyCount,java.lang.Comparable,);
Parameter(equals,java.lang.Object,);
Parameter(clone$2,java.lang.Object,);
Parameter(clone$3,java.util.Collection,);
Call(METHOD,org.jfree.data.KeyToGroupMap,<init> --> <init>$2,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> getGroup,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> getKeyCount,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.KeyToGroupMap,clone --> clone$2,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.KeyToGroupMap,clone --> clone$3,org.jfree.data.KeyToGroupMap,);
Call(METHOD,org.jfree.data.KeyToGroupMap,clone$3 --> clone$2,org.jfree.data.KeyToGroupMap,);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,<init>$2 --> defaultGroup,org.jfree.data.KeyToGroupMap,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,<init>$2 --> groups,org.jfree.data.KeyToGroupMap,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,<init>$2 --> keyToGroupMap,org.jfree.data.KeyToGroupMap,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroupCount --> groups,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroups --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroups --> groups,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroupIndex --> groups,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroupIndex --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroup --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getGroup --> keyToGroupMap,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> groups,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> keyToGroupMap,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,getKeyCount --> keyToGroupMap,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,equals --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,equals --> keyToGroupMap,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> defaultGroup,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> groups,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> keyToGroupMap,org.jfree.data.KeyToGroupMap,READ);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> defaultGroup,org.jfree.data.KeyToGroupMap,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> groups,org.jfree.data.KeyToGroupMap,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyToGroupMap,clone --> keyToGroupMap,org.jfree.data.KeyToGroupMap,WRITE);
Call(METHOD,org.jfree.data.KeyToGroupMap,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.KeyToGroupMap,getGroup --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.KeyToGroupMap,mapKeyToGroup --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.KeyToGroupMap,getKeyCount --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 127
StartClass 128
Class(org.jfree.data.xy.TableXYDataset,Y,Y,Public);
Method(getItemCount,int,Public,N,Y);
Realization(org.jfree.data.xy.XYDataset);
EndClass 128
StartClass 129
Class(org.jfree.data.category.IntervalCategoryDataset,Y,Y,Public);
Method(getStartValue,java.lang.Number,Public,N,Y);
Method(getStartValue$2,java.lang.Number,Public,N,Y);
Method(getEndValue,java.lang.Number,Public,N,Y);
Method(getEndValue$2,java.lang.Number,Public,N,Y);
Parameter(getStartValue,int,);
Parameter(getStartValue,int,);
Parameter(getStartValue$2,java.lang.Comparable,);
Parameter(getStartValue$2,java.lang.Comparable,);
Parameter(getEndValue,int,);
Parameter(getEndValue,int,);
Parameter(getEndValue$2,java.lang.Comparable,);
Parameter(getEndValue$2,java.lang.Comparable,);
Realization(org.jfree.data.category.CategoryDataset);
EndClass 129
StartClass 130
Class(org.jfree.data.DomainInfo,Y,Y,Public);
Method(getDomainLowerBound,double,Public,N,Y);
Method(getDomainUpperBound,double,Public,N,Y);
Method(getDomainBounds,org.jfree.data.Range,Public,N,Y);
Parameter(getDomainLowerBound,boolean,);
Parameter(getDomainUpperBound,boolean,);
Parameter(getDomainBounds,boolean,);
EndClass 130
StartClass 131
Class(org.jfree.data.statistics.MultiValueCategoryDataset,Y,Y,Public);
Method(getValues,java.util.List,Public,N,Y);
Method(getValues$2,java.util.List,Public,N,Y);
Parameter(getValues,int,);
Parameter(getValues,int,);
Parameter(getValues$2,java.lang.Comparable,);
Parameter(getValues$2,java.lang.Comparable,);
Realization(org.jfree.data.category.CategoryDataset);
EndClass 131
StartClass 132
Class(org.jfree.data.xy.XYDomainInfo,Y,Y,Public);
Method(getDomainBounds,org.jfree.data.Range,Public,N,Y);
Parameter(getDomainBounds,java.util.List,);
Parameter(getDomainBounds,boolean,);
EndClass 132
StartClass 133
Class(org.jfree.data.RangeInfo,Y,Y,Public);
Method(getRangeLowerBound,double,Public,N,Y);
Method(getRangeUpperBound,double,Public,N,Y);
Method(getRangeBounds,org.jfree.data.Range,Public,N,Y);
Parameter(getRangeLowerBound,boolean,);
Parameter(getRangeUpperBound,boolean,);
Parameter(getRangeBounds,boolean,);
EndClass 133
StartClass 134
Class(org.jfree.data.xy.OHLCDataset,Y,Y,Public);
Method(getHigh,java.lang.Number,Public,N,Y);
Method(getHighValue,double,Public,N,Y);
Method(getLow,java.lang.Number,Public,N,Y);
Method(getLowValue,double,Public,N,Y);
Method(getOpen,java.lang.Number,Public,N,Y);
Method(getOpenValue,double,Public,N,Y);
Method(getClose,java.lang.Number,Public,N,Y);
Method(getCloseValue,double,Public,N,Y);
Method(getVolume,java.lang.Number,Public,N,Y);
Method(getVolumeValue,double,Public,N,Y);
Parameter(getHigh,int,);
Parameter(getHigh,int,);
Parameter(getHighValue,int,);
Parameter(getHighValue,int,);
Parameter(getLow,int,);
Parameter(getLow,int,);
Parameter(getLowValue,int,);
Parameter(getLowValue,int,);
Parameter(getOpen,int,);
Parameter(getOpen,int,);
Parameter(getOpenValue,int,);
Parameter(getOpenValue,int,);
Parameter(getClose,int,);
Parameter(getClose,int,);
Parameter(getCloseValue,int,);
Parameter(getCloseValue,int,);
Parameter(getVolume,int,);
Parameter(getVolume,int,);
Parameter(getVolumeValue,int,);
Parameter(getVolumeValue,int,);
Realization(org.jfree.data.xy.XYDataset);
EndClass 134
StartClass 135
Class(org.jfree.data.statistics.BoxAndWhiskerXYDataset,Y,Y,Public);
Method(getMeanValue,java.lang.Number,Public,N,Y);
Method(getMedianValue,java.lang.Number,Public,N,Y);
Method(getQ1Value,java.lang.Number,Public,N,Y);
Method(getQ3Value,java.lang.Number,Public,N,Y);
Method(getMinRegularValue,java.lang.Number,Public,N,Y);
Method(getMaxRegularValue,java.lang.Number,Public,N,Y);
Method(getMinOutlier,java.lang.Number,Public,N,Y);
Method(getMaxOutlier,java.lang.Number,Public,N,Y);
Method(getOutliers,java.util.List,Public,N,Y);
Method(getOutlierCoefficient,double,Public,N,Y);
Method(getFaroutCoefficient,double,Public,N,Y);
Parameter(getMeanValue,int,);
Parameter(getMeanValue,int,);
Parameter(getMedianValue,int,);
Parameter(getMedianValue,int,);
Parameter(getQ1Value,int,);
Parameter(getQ1Value,int,);
Parameter(getQ3Value,int,);
Parameter(getQ3Value,int,);
Parameter(getMinRegularValue,int,);
Parameter(getMinRegularValue,int,);
Parameter(getMaxRegularValue,int,);
Parameter(getMaxRegularValue,int,);
Parameter(getMinOutlier,int,);
Parameter(getMinOutlier,int,);
Parameter(getMaxOutlier,int,);
Parameter(getMaxOutlier,int,);
Parameter(getOutliers,int,);
Parameter(getOutliers,int,);
Realization(org.jfree.data.xy.XYDataset);
EndClass 135
StartClass 136
Class(org.jfree.data.category.CategoryRangeInfo,Y,Y,Public);
Method(getRangeBounds,org.jfree.data.Range,Public,N,Y);
Parameter(getRangeBounds,java.util.List,);
Parameter(getRangeBounds,boolean,);
EndClass 136
StartClass 137
Class(org.jfree.data.category.DefaultCategoryDataset,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(data,org.jfree.data.DefaultKeyedValues2D,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getValue,java.lang.Number,Public,N,N);
Method(getRowKey,java.lang.Comparable,Public,N,N);
Method(getRowIndex,int,Public,N,N);
Method(getRowKeys,java.util.List,Public,N,N);
Method(getColumnKey,java.lang.Comparable,Public,N,N);
Method(getColumnIndex,int,Public,N,N);
Method(getColumnKeys,java.util.List,Public,N,N);
Method(getValue$2,java.lang.Number,Public,N,N);
Method(addValue,void,Public,N,N);
Method(addValue$2,void,Public,N,N);
Method(setValue,void,Public,N,N);
Method(setValue$2,void,Public,N,N);
Method(incrementValue,void,Public,N,N);
Method(removeValue,void,Public,N,N);
Method(removeRow,void,Public,N,N);
Method(removeRow$2,void,Public,N,N);
Method(removeColumn,void,Public,N,N);
Method(removeColumn$2,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(getValue,int,);
Parameter(getValue,int,);
Parameter(getRowKey,int,);
Parameter(getRowIndex,java.lang.Comparable,);
Parameter(getColumnKey,int,);
Parameter(getColumnIndex,java.lang.Comparable,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(addValue,java.lang.Number,);
Parameter(addValue,java.lang.Comparable,);
Parameter(addValue,java.lang.Comparable,);
Parameter(addValue$2,double,);
Parameter(addValue$2,java.lang.Comparable,);
Parameter(addValue$2,java.lang.Comparable,);
Parameter(setValue,java.lang.Number,);
Parameter(setValue,java.lang.Comparable,);
Parameter(setValue,java.lang.Comparable,);
Parameter(setValue$2,double,);
Parameter(setValue$2,java.lang.Comparable,);
Parameter(setValue$2,java.lang.Comparable,);
Parameter(incrementValue,double,);
Parameter(incrementValue,java.lang.Comparable,);
Parameter(incrementValue,java.lang.Comparable,);
Parameter(removeValue,java.lang.Comparable,);
Parameter(removeValue,java.lang.Comparable,);
Parameter(removeRow,int,);
Parameter(removeRow$2,java.lang.Comparable,);
Parameter(removeColumn,int,);
Parameter(removeColumn$2,java.lang.Comparable,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.data.general.AbstractDataset);
Generalization(org.jfree.data.general.AbstractDataset);
Realization(org.jfree.data.category.CategoryDataset);
Composition(org.jfree.data.DefaultKeyedValues2D);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,addValue$2 --> addValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,setValue$2 --> setValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,incrementValue --> getValue$2,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,incrementValue --> setValue$2,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getRowKeys,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getColumnKeys,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getRowCount,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getColumnCount,org.jfree.data.category.DefaultCategoryDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getValue,org.jfree.data.category.DefaultCategoryDataset,);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,<init> --> data,org.jfree.data.category.DefaultCategoryDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getRowCount --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getColumnCount --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getValue --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getRowKey --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getRowIndex --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getRowKeys --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getColumnKey --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getColumnIndex --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getColumnKeys --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,getValue$2 --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,addValue --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,setValue --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,removeValue --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,removeRow --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,removeRow$2 --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,removeColumn --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,removeColumn$2 --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,clear --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,hashCode --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,clone --> data,org.jfree.data.category.DefaultCategoryDataset,READ);
Call(ATTRIBUTE,org.jfree.data.category.DefaultCategoryDataset,clone --> data,org.jfree.data.category.DefaultCategoryDataset,WRITE);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,<init> --> <init>,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,<init> --> <init>,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getRowCount --> getRowCount,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getColumnCount --> getColumnCount,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getValue --> getValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getRowKey --> getRowKey,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getRowIndex --> getRowIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getRowKeys --> getRowKeys,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getColumnKey --> getColumnKey,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getColumnIndex --> getColumnIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getColumnKeys --> getColumnKeys,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,getValue$2 --> getValue$2,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,addValue --> addValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,addValue --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,setValue --> setValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,setValue --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeValue --> removeValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeValue --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeRow --> removeRow,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeRow --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeRow$2 --> removeRow$2,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeRow$2 --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeColumn --> removeColumn,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeColumn --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeColumn$2 --> removeColumn$2,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,removeColumn$2 --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,clear --> clear,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,clear --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getRowKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getColumnKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,equals --> getValue,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,hashCode --> hashCode,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,clone --> clone,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.category.DefaultCategoryDataset,clone --> clone,org.jfree.data.DefaultKeyedValues2D,);
EndClass 137
StartClass 138
Class(org.jfree.data.xy.XYSeriesCollection,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(data,java.util.List,Private,N,N,);
Attribute(intervalDelegate,org.jfree.data.xy.IntervalXYDelegate,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getDomainOrder,org.jfree.data.DomainOrder,Public,N,N);
Method(addSeries,void,Public,N,N);
Method(removeSeries,void,Public,N,N);
Method(removeSeries$2,void,Public,N,N);
Method(removeAllSeries,void,Public,N,N);
Method(getSeriesCount,int,Public,N,N);
Method(getSeries,java.util.List,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(getSeries$2,org.jfree.data.xy.XYSeries,Public,N,N);
Method(getSeries$3,org.jfree.data.xy.XYSeries,Public,N,N);
Method(getSeriesKey,java.lang.Comparable,Public,N,N);
Method(getSeriesIndex,int,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(getX,java.lang.Number,Public,N,N);
Method(getStartX,java.lang.Number,Public,N,N);
Method(getEndX,java.lang.Number,Public,N,N);
Method(getY,java.lang.Number,Public,N,N);
Method(getStartY,java.lang.Number,Public,N,N);
Method(getEndY,java.lang.Number,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(getDomainLowerBound,double,Public,N,N);
Method(getDomainUpperBound,double,Public,N,N);
Method(getDomainBounds,org.jfree.data.Range,Public,N,N);
Method(getIntervalWidth,double,Public,N,N);
Method(setIntervalWidth,void,Public,N,N);
Method(getIntervalPositionFactor,double,Public,N,N);
Method(setIntervalPositionFactor,void,Public,N,N);
Method(isAutoWidth,boolean,Public,N,N);
Method(setAutoWidth,void,Public,N,N);
Method(getRangeBounds,org.jfree.data.Range,Public,N,N);
Method(getRangeLowerBound,double,Public,N,N);
Method(getRangeUpperBound,double,Public,N,N);
Method(vetoableChange,void,Public,N,N);
Parameter(<init>$2,org.jfree.data.xy.XYSeries,);
Parameter(addSeries,org.jfree.data.xy.XYSeries,);
Parameter(removeSeries,int,);
Parameter(removeSeries$2,org.jfree.data.xy.XYSeries,);
Parameter(indexOf,org.jfree.data.xy.XYSeries,);
Parameter(getSeries$2,int,);
Parameter(getSeries$3,java.lang.Comparable,);
Parameter(getSeriesKey,int,);
Parameter(getSeriesIndex,java.lang.Comparable,);
Parameter(getItemCount,int,);
Parameter(getX,int,);
Parameter(getX,int,);
Parameter(getStartX,int,);
Parameter(getStartX,int,);
Parameter(getEndX,int,);
Parameter(getEndX,int,);
Parameter(getY,int,);
Parameter(getY,int,);
Parameter(getStartY,int,);
Parameter(getStartY,int,);
Parameter(getEndY,int,);
Parameter(getEndY,int,);
Parameter(equals,java.lang.Object,);
Parameter(getDomainLowerBound,boolean,);
Parameter(getDomainUpperBound,boolean,);
Parameter(getDomainBounds,boolean,);
Parameter(setIntervalWidth,double,);
Parameter(setIntervalPositionFactor,double,);
Parameter(setAutoWidth,boolean,);
Parameter(getRangeBounds,boolean,);
Parameter(getRangeLowerBound,boolean,);
Parameter(getRangeUpperBound,boolean,);
Parameter(vetoableChange,java.beans.PropertyChangeEvent,);
SuperClass(org.jfree.data.xy.AbstractIntervalXYDataset);
SuperClass(org.jfree.data.xy.AbstractXYDataset);
SuperClass(org.jfree.data.general.AbstractSeriesDataset);
SuperClass(org.jfree.data.general.AbstractDataset);
Generalization(org.jfree.data.xy.AbstractIntervalXYDataset);
Realization(org.jfree.data.xy.IntervalXYDataset);
Realization(org.jfree.data.DomainInfo);
Realization(org.jfree.data.RangeInfo);
Composition(org.jfree.data.xy.IntervalXYDelegate);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init> --> <init>$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainOrder --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainOrder --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> getSeriesIndex,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries --> removeSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeries$2 --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeriesKey --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeriesIndex --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getItemCount --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getStartY --> getY,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getEndY --> getY,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainLowerBound --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainLowerBound --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainUpperBound --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainUpperBound --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeBounds --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeBounds --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeLowerBound --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeLowerBound --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeUpperBound --> getSeriesCount,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeUpperBound --> getSeries$2,org.jfree.data.xy.XYSeriesCollection,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,vetoableChange --> getSeriesIndex,org.jfree.data.xy.XYSeriesCollection,);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> data,org.jfree.data.xy.XYSeriesCollection,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,addSeries --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,removeSeries --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,removeSeries$2 --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,removeAllSeries --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getSeriesCount --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getSeries --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,indexOf --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getSeries$2 --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getSeries$3 --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getSeriesIndex --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getX --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getStartX --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getEndX --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getY --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,equals --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,equals --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,clone --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,clone --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,clone --> data,org.jfree.data.xy.XYSeriesCollection,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,clone --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,hashCode --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,hashCode --> data,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getDomainLowerBound --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getDomainUpperBound --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getIntervalWidth --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,setIntervalWidth --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getIntervalPositionFactor --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,setIntervalPositionFactor --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,isAutoWidth --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,setAutoWidth --> intervalDelegate,org.jfree.data.xy.XYSeriesCollection,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getDomainOrder --> NONE,org.jfree.data.DomainOrder,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYSeriesCollection,getDomainOrder --> ASCENDING,org.jfree.data.DomainOrder,READ);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> <init>,org.jfree.data.xy.AbstractIntervalXYDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> <init>$2,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> addChangeListener,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> addChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,<init>$2 --> addVetoableChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainOrder --> getAutoSort,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> getKey,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> addChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> addVetoableChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,addSeries --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries$2 --> removeChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries$2 --> removeVetoableChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeSeries$2 --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeAllSeries --> removeChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeAllSeries --> removeVetoableChangeListener,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,removeAllSeries --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,indexOf --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeries$3 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeries$3 --> getKey,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeries$3 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeriesKey --> getKey,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeriesIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getSeriesIndex --> getKey,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getItemCount --> getItemCount,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getX --> getX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getStartX --> getStartX,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getEndX --> getEndX,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getY --> getY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,equals --> equals,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,clone --> clone,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,clone --> clone,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,hashCode --> hashCode$8,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainLowerBound --> getDomainLowerBound,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainLowerBound --> getMinX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainUpperBound --> getDomainUpperBound,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainUpperBound --> getMaxX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> getDomainBounds,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> getMinX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> getMaxX,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getDomainBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getIntervalWidth --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setIntervalWidth --> setFixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setIntervalWidth --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getIntervalPositionFactor --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setIntervalPositionFactor --> setIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setIntervalPositionFactor --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,isAutoWidth --> isAutoWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setAutoWidth --> setAutoWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,setAutoWidth --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeBounds --> getMinY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeBounds --> getMaxY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeLowerBound --> getMinY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,getRangeUpperBound --> getMaxY,org.jfree.data.xy.XYSeries,);
Call(METHOD,org.jfree.data.xy.XYSeriesCollection,vetoableChange --> getKey,org.jfree.data.general.Series,);
EndClass 138
StartClass 139
Class(org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,Y,Y,Public);
Method(getMeanValue,java.lang.Number,Public,N,Y);
Method(getMeanValue$2,java.lang.Number,Public,N,Y);
Method(getMedianValue,java.lang.Number,Public,N,Y);
Method(getMedianValue$2,java.lang.Number,Public,N,Y);
Method(getQ1Value,java.lang.Number,Public,N,Y);
Method(getQ1Value$2,java.lang.Number,Public,N,Y);
Method(getQ3Value,java.lang.Number,Public,N,Y);
Method(getQ3Value$2,java.lang.Number,Public,N,Y);
Method(getMinRegularValue,java.lang.Number,Public,N,Y);
Method(getMinRegularValue$2,java.lang.Number,Public,N,Y);
Method(getMaxRegularValue,java.lang.Number,Public,N,Y);
Method(getMaxRegularValue$2,java.lang.Number,Public,N,Y);
Method(getMinOutlier,java.lang.Number,Public,N,Y);
Method(getMinOutlier$2,java.lang.Number,Public,N,Y);
Method(getMaxOutlier,java.lang.Number,Public,N,Y);
Method(getMaxOutlier$2,java.lang.Number,Public,N,Y);
Method(getOutliers,java.util.List,Public,N,Y);
Method(getOutliers$2,java.util.List,Public,N,Y);
Parameter(getMeanValue,int,);
Parameter(getMeanValue,int,);
Parameter(getMeanValue$2,java.lang.Comparable,);
Parameter(getMeanValue$2,java.lang.Comparable,);
Parameter(getMedianValue,int,);
Parameter(getMedianValue,int,);
Parameter(getMedianValue$2,java.lang.Comparable,);
Parameter(getMedianValue$2,java.lang.Comparable,);
Parameter(getQ1Value,int,);
Parameter(getQ1Value,int,);
Parameter(getQ1Value$2,java.lang.Comparable,);
Parameter(getQ1Value$2,java.lang.Comparable,);
Parameter(getQ3Value,int,);
Parameter(getQ3Value,int,);
Parameter(getQ3Value$2,java.lang.Comparable,);
Parameter(getQ3Value$2,java.lang.Comparable,);
Parameter(getMinRegularValue,int,);
Parameter(getMinRegularValue,int,);
Parameter(getMinRegularValue$2,java.lang.Comparable,);
Parameter(getMinRegularValue$2,java.lang.Comparable,);
Parameter(getMaxRegularValue,int,);
Parameter(getMaxRegularValue,int,);
Parameter(getMaxRegularValue$2,java.lang.Comparable,);
Parameter(getMaxRegularValue$2,java.lang.Comparable,);
Parameter(getMinOutlier,int,);
Parameter(getMinOutlier,int,);
Parameter(getMinOutlier$2,java.lang.Comparable,);
Parameter(getMinOutlier$2,java.lang.Comparable,);
Parameter(getMaxOutlier,int,);
Parameter(getMaxOutlier,int,);
Parameter(getMaxOutlier$2,java.lang.Comparable,);
Parameter(getMaxOutlier$2,java.lang.Comparable,);
Parameter(getOutliers,int,);
Parameter(getOutliers,int,);
Parameter(getOutliers$2,java.lang.Comparable,);
Parameter(getOutliers$2,java.lang.Comparable,);
Realization(org.jfree.data.category.CategoryDataset);
EndClass 139
StartClass 140
Class(org.jfree.data.xy.XYRangeInfo,Y,Y,Public);
Method(getRangeBounds,org.jfree.data.Range,Public,N,Y);
Parameter(getRangeBounds,java.util.List,);
Parameter(getRangeBounds,org.jfree.data.Range,);
Parameter(getRangeBounds,boolean,);
EndClass 140
StartClass 141
Class(org.jfree.data.xy.IntervalXYDataset,Y,Y,Public);
Method(getStartX,java.lang.Number,Public,N,Y);
Method(getStartXValue,double,Public,N,Y);
Method(getEndX,java.lang.Number,Public,N,Y);
Method(getEndXValue,double,Public,N,Y);
Method(getStartY,java.lang.Number,Public,N,Y);
Method(getStartYValue,double,Public,N,Y);
Method(getEndY,java.lang.Number,Public,N,Y);
Method(getEndYValue,double,Public,N,Y);
Parameter(getStartX,int,);
Parameter(getStartX,int,);
Parameter(getStartXValue,int,);
Parameter(getStartXValue,int,);
Parameter(getEndX,int,);
Parameter(getEndX,int,);
Parameter(getEndXValue,int,);
Parameter(getEndXValue,int,);
Parameter(getStartY,int,);
Parameter(getStartY,int,);
Parameter(getStartYValue,int,);
Parameter(getStartYValue,int,);
Parameter(getEndY,int,);
Parameter(getEndY,int,);
Parameter(getEndYValue,int,);
Parameter(getEndYValue,int,);
Realization(org.jfree.data.xy.XYDataset);
EndClass 141
StartClass 142
Class(org.jfree.data.statistics.StatisticalCategoryDataset,Y,Y,Public);
Method(getMeanValue,java.lang.Number,Public,N,Y);
Method(getMeanValue$2,java.lang.Number,Public,N,Y);
Method(getStdDevValue,java.lang.Number,Public,N,Y);
Method(getStdDevValue$2,java.lang.Number,Public,N,Y);
Parameter(getMeanValue,int,);
Parameter(getMeanValue,int,);
Parameter(getMeanValue$2,java.lang.Comparable,);
Parameter(getMeanValue$2,java.lang.Comparable,);
Parameter(getStdDevValue,int,);
Parameter(getStdDevValue,int,);
Parameter(getStdDevValue$2,java.lang.Comparable,);
Parameter(getStdDevValue$2,java.lang.Comparable,);
Realization(org.jfree.data.category.CategoryDataset);
EndClass 142
StartClass 143
Class(org.jfree.data.general.DefaultPieDataset,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(data,org.jfree.data.DefaultKeyedValues,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(getKeys,java.util.List,Public,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(getIndex,int,Public,N,N);
Method(getValue,java.lang.Number,Public,N,N);
Method(getValue$2,java.lang.Number,Public,N,N);
Method(setValue,void,Public,N,N);
Method(setValue$2,void,Public,N,N);
Method(insertValue,void,Public,N,N);
Method(insertValue$2,void,Public,N,N);
Method(remove,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(sortByKeys,void,Public,N,N);
Method(sortByValues,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(<init>$2,org.jfree.data.KeyedValues,);
Parameter(getKey,int,);
Parameter(getIndex,java.lang.Comparable,);
Parameter(getValue,int,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(setValue,java.lang.Comparable,);
Parameter(setValue,java.lang.Number,);
Parameter(setValue$2,java.lang.Comparable,);
Parameter(setValue$2,double,);
Parameter(insertValue,int,);
Parameter(insertValue,java.lang.Comparable,);
Parameter(insertValue,double,);
Parameter(insertValue$2,int,);
Parameter(insertValue$2,java.lang.Comparable,);
Parameter(insertValue$2,java.lang.Number,);
Parameter(remove,java.lang.Comparable,);
Parameter(sortByKeys,org.jfree.util.SortOrder,);
Parameter(sortByValues,org.jfree.util.SortOrder,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.data.general.AbstractDataset);
Generalization(org.jfree.data.general.AbstractDataset);
Realization(org.jfree.data.general.PieDataset);
Composition(org.jfree.data.DefaultKeyedValues);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getValue --> getItemCount,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,setValue$2 --> setValue,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,insertValue --> insertValue$2,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,clear --> getItemCount,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getItemCount,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getKey,org.jfree.data.general.DefaultPieDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getValue,org.jfree.data.general.DefaultPieDataset,);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,<init> --> data,org.jfree.data.general.DefaultPieDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,<init>$2 --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,<init>$2 --> data,org.jfree.data.general.DefaultPieDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getItemCount --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getKeys --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getKey --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getIndex --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getValue --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,getValue$2 --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,setValue --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,insertValue$2 --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,remove --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,clear --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,sortByKeys --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,sortByValues --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,hashCode --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,clone --> data,org.jfree.data.general.DefaultPieDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.DefaultPieDataset,clone --> data,org.jfree.data.general.DefaultPieDataset,WRITE);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init> --> <init>,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init> --> <init>,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> <init>,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> <init>,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> getItemCount,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> getKey,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> getValue,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,<init>$2 --> addValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getItemCount --> getItemCount,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getKeys --> getKeys,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getKey --> getKey,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getIndex --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getValue --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,getValue$2 --> getValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,setValue --> setValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,setValue --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,insertValue$2 --> insertValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,insertValue$2 --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,remove --> removeValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,remove --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,clear --> clear,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,clear --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,sortByKeys --> sortByKeys,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,sortByKeys --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,sortByValues --> sortByValues,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,sortByValues --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getItemCount,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getKey,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,equals --> getValue,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,hashCode --> hashCode,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,clone --> clone,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.DefaultPieDataset,clone --> clone,org.jfree.data.DefaultKeyedValues,);
EndClass 143
StartClass 144
Class(org.jfree.chart.annotations.Annotation,Y,Y,Public);
Method(addChangeListener,void,Public,N,Y);
Method(removeChangeListener,void,Public,N,Y);
Parameter(addChangeListener,org.jfree.chart.event.AnnotationChangeListener,);
Parameter(removeChangeListener,org.jfree.chart.event.AnnotationChangeListener,);
EndClass 144
StartClass 145
Class(org.jfree.chart.axis.TickUnitSource,Y,Y,Public);
Method(getLargerTickUnit,org.jfree.chart.axis.TickUnit,Public,N,Y);
Method(getCeilingTickUnit,org.jfree.chart.axis.TickUnit,Public,N,Y);
Method(getCeilingTickUnit$2,org.jfree.chart.axis.TickUnit,Public,N,Y);
Parameter(getLargerTickUnit,org.jfree.chart.axis.TickUnit,);
Parameter(getCeilingTickUnit,org.jfree.chart.axis.TickUnit,);
Parameter(getCeilingTickUnit$2,double,);
EndClass 145
StartClass 146
Class(org.jfree.chart.axis.Tick,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(text,java.lang.String,Private,N,N,);
Attribute(textAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(rotationAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(angle,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getText,java.lang.String,Public,N,N);
Method(getTextAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(getRotationAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(getAngle,double,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
Parameter(<init>,double,);
Parameter(equals,java.lang.Object,);
SubClass(org.jfree.chart.axis.LogTick);
SubClass(org.jfree.chart.axis.ValueTick);
SubClass(org.jfree.chart.axis.CategoryTick);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,<init> --> text,org.jfree.chart.axis.Tick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,<init> --> textAnchor,org.jfree.chart.axis.Tick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,<init> --> rotationAnchor,org.jfree.chart.axis.Tick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,<init> --> angle,org.jfree.chart.axis.Tick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,getText --> text,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,getTextAnchor --> textAnchor,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,getRotationAnchor --> rotationAnchor,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,getAngle --> angle,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,equals --> text,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,equals --> textAnchor,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,equals --> rotationAnchor,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,equals --> angle,org.jfree.chart.axis.Tick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.Tick,toString --> text,org.jfree.chart.axis.Tick,READ);
Call(METHOD,org.jfree.chart.axis.Tick,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 146
StartClass 147
Class(org.jfree.chart.axis.LogTick,N,N,Public);
Attribute(attributedLabel,java.text.AttributedString,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(getAttributedLabel,java.text.AttributedString,Public,N,N);
Parameter(<init>,org.jfree.chart.axis.TickType,);
Parameter(<init>,double,);
Parameter(<init>,java.text.AttributedString,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
SuperClass(org.jfree.chart.axis.ValueTick);
SuperClass(org.jfree.chart.axis.Tick);
Generalization(org.jfree.chart.axis.ValueTick);
Call(ATTRIBUTE,org.jfree.chart.axis.LogTick,<init> --> attributedLabel,org.jfree.chart.axis.LogTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.LogTick,getAttributedLabel --> attributedLabel,org.jfree.chart.axis.LogTick,READ);
Call(METHOD,org.jfree.chart.axis.LogTick,<init> --> <init>$2,org.jfree.chart.axis.ValueTick,);
EndClass 147
StartClass 148
Class(org.jfree.chart.renderer.RendererState,N,N,Public);
Attribute(info,org.jfree.chart.plot.PlotRenderingInfo,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getInfo,org.jfree.chart.plot.PlotRenderingInfo,Public,N,N);
Method(getEntityCollection,org.jfree.chart.entity.EntityCollection,Public,N,N);
Parameter(<init>,org.jfree.chart.plot.PlotRenderingInfo,);
SubClass(org.jfree.chart.renderer.xy.XYItemRendererState);
SubClass(org.jfree.chart.renderer.category.CategoryItemRendererState);
Composition(org.jfree.chart.plot.PlotRenderingInfo);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererState,<init> --> info,org.jfree.chart.renderer.RendererState,WRITE);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererState,getInfo --> info,org.jfree.chart.renderer.RendererState,READ);
Call(ATTRIBUTE,org.jfree.chart.renderer.RendererState,getEntityCollection --> info,org.jfree.chart.renderer.RendererState,READ);
Call(METHOD,org.jfree.chart.renderer.RendererState,getEntityCollection --> getOwner,org.jfree.chart.plot.PlotRenderingInfo,);
Call(METHOD,org.jfree.chart.renderer.RendererState,getEntityCollection --> getEntityCollection,org.jfree.chart.ChartRenderingInfo,);
EndClass 148
StartClass 149
Class(org.jfree.chart.axis.CategoryLabelPositions,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(STANDARD,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,Y,);
Attribute(UP_90,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,Y,);
Attribute(DOWN_90,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,Y,);
Attribute(UP_45,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,Y,);
Attribute(DOWN_45,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,Y,);
Attribute(positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPosition,Private,N,N,);
Attribute(positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPosition,Private,N,N,);
Attribute(positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPosition,Private,N,N,);
Attribute(positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPosition,Private,N,N,);
Method(createUpRotationLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(createDownRotationLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getLabelPosition,org.jfree.chart.axis.CategoryLabelPosition,Public,N,N);
Method(replaceTopPosition,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(replaceBottomPosition,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(replaceLeftPosition,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(replaceRightPosition,org.jfree.chart.axis.CategoryLabelPositions,Public,Y,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(createUpRotationLabelPositions,double,);
Parameter(createDownRotationLabelPositions,double,);
Parameter(<init>$2,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(<init>$2,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(<init>$2,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(<init>$2,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(getLabelPosition,org.jfree.ui.RectangleEdge,);
Parameter(replaceTopPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Parameter(replaceTopPosition,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(replaceBottomPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Parameter(replaceBottomPosition,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(replaceLeftPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Parameter(replaceLeftPosition,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(replaceRightPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Parameter(replaceRightPosition,org.jfree.chart.axis.CategoryLabelPosition,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.CategoryLabelPositions);
Composition(org.jfree.chart.axis.CategoryLabelPosition);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,createUpRotationLabelPositions --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,createDownRotationLabelPositions --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceTopPosition --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceTopPosition --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceBottomPosition --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceBottomPosition --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceLeftPosition --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceLeftPosition --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceRightPosition --> getLabelPosition,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceRightPosition --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> <init>$2,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> createUpRotationLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> createDownRotationLabelPositions,org.jfree.chart.axis.CategoryLabelPositions,);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init> --> positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init> --> positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init> --> positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init> --> positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init>$2 --> positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init>$2 --> positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init>$2 --> positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<init>$2 --> positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,getLabelPosition --> positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,getLabelPosition --> positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,getLabelPosition --> positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,getLabelPosition --> positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,equals --> positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,equals --> positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,equals --> positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,equals --> positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,hashCode --> positionForAxisAtTop,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,hashCode --> positionForAxisAtBottom,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,hashCode --> positionForAxisAtLeft,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,hashCode --> positionForAxisAtRight,org.jfree.chart.axis.CategoryLabelPositions,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> STANDARD,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> UP_90,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> DOWN_90,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> UP_45,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> DOWN_45,org.jfree.chart.axis.CategoryLabelPositions,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,createUpRotationLabelPositions --> RANGE,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,createDownRotationLabelPositions --> RANGE,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> RANGE,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,createUpRotationLabelPositions --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,createDownRotationLabelPositions --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<init> --> <init>,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceTopPosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceBottomPosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceLeftPosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,replaceRightPosition --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,equals --> equals,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,hashCode --> hashCode,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> <init>$2,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> <init>$3,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPositions,<clinit> --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
EndClass 149
StartClass 150
Class(org.jfree.chart.axis.CategoryLabelPosition,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(categoryAnchor,org.jfree.ui.RectangleAnchor,Private,N,N,);
Attribute(labelAnchor,org.jfree.text.TextBlockAnchor,Private,N,N,);
Attribute(rotationAnchor,org.jfree.ui.TextAnchor,Private,N,N,);
Attribute(angle,double,Private,N,N,);
Attribute(widthType,org.jfree.chart.axis.CategoryLabelWidthType,Private,N,N,);
Attribute(widthRatio,float,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getCategoryAnchor,org.jfree.ui.RectangleAnchor,Public,N,N);
Method(getLabelAnchor,org.jfree.text.TextBlockAnchor,Public,N,N);
Method(getRotationAnchor,org.jfree.ui.TextAnchor,Public,N,N);
Method(getAngle,double,Public,N,N);
Method(getWidthType,org.jfree.chart.axis.CategoryLabelWidthType,Public,N,N);
Method(getWidthRatio,float,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>$2,org.jfree.ui.RectangleAnchor,);
Parameter(<init>$2,org.jfree.text.TextBlockAnchor,);
Parameter(<init>$3,org.jfree.ui.RectangleAnchor,);
Parameter(<init>$3,org.jfree.text.TextBlockAnchor,);
Parameter(<init>$3,org.jfree.chart.axis.CategoryLabelWidthType,);
Parameter(<init>$3,float,);
Parameter(<init>$4,org.jfree.ui.RectangleAnchor,);
Parameter(<init>$4,org.jfree.text.TextBlockAnchor,);
Parameter(<init>$4,org.jfree.ui.TextAnchor,);
Parameter(<init>$4,double,);
Parameter(<init>$4,org.jfree.chart.axis.CategoryLabelWidthType,);
Parameter(<init>$4,float,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.CategoryLabelWidthType);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPosition,<init> --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPosition,<init>$2 --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPosition,<init>$3 --> <init>$4,org.jfree.chart.axis.CategoryLabelPosition,);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> categoryAnchor,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> labelAnchor,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> rotationAnchor,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> angle,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> widthType,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> widthRatio,org.jfree.chart.axis.CategoryLabelPosition,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getCategoryAnchor --> categoryAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getLabelAnchor --> labelAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getRotationAnchor --> rotationAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getAngle --> angle,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getWidthType --> widthType,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,getWidthRatio --> widthRatio,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> categoryAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> labelAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> rotationAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> angle,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> widthType,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,equals --> widthRatio,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,hashCode --> categoryAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,hashCode --> labelAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,hashCode --> rotationAnchor,org.jfree.chart.axis.CategoryLabelPosition,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init> --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelPosition,<init>$2 --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(METHOD,org.jfree.chart.axis.CategoryLabelPosition,<init>$4 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 150
StartClass 151
Class(org.jfree.chart.axis.CategoryTick,N,N,Public);
Attribute(category,java.lang.Comparable,Private,N,N,);
Attribute(label,org.jfree.text.TextBlock,Private,N,N,);
Attribute(labelAnchor,org.jfree.text.TextBlockAnchor,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getCategory,java.lang.Comparable,Public,N,N);
Method(getLabel,org.jfree.text.TextBlock,Public,N,N);
Method(getLabelAnchor,org.jfree.text.TextBlockAnchor,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>,org.jfree.text.TextBlock,);
Parameter(<init>,org.jfree.text.TextBlockAnchor,);
Parameter(<init>,org.jfree.ui.TextAnchor,);
Parameter(<init>,double,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.axis.Tick);
Generalization(org.jfree.chart.axis.Tick);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,<init> --> category,org.jfree.chart.axis.CategoryTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,<init> --> label,org.jfree.chart.axis.CategoryTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,<init> --> labelAnchor,org.jfree.chart.axis.CategoryTick,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,getCategory --> category,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,getLabel --> label,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,getLabelAnchor --> labelAnchor,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,equals --> category,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,equals --> label,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,equals --> labelAnchor,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,hashCode --> category,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,hashCode --> label,org.jfree.chart.axis.CategoryTick,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryTick,hashCode --> labelAnchor,org.jfree.chart.axis.CategoryTick,READ);
Call(METHOD,org.jfree.chart.axis.CategoryTick,<init> --> <init>,org.jfree.chart.axis.Tick,);
Call(METHOD,org.jfree.chart.axis.CategoryTick,equals --> equals,org.jfree.chart.axis.Tick,);
EndClass 151
StartClass 152
Class(org.jfree.chart.entity.CategoryLabelEntity,N,N,Public);
Attribute(key,java.lang.Comparable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.entity.TickLabelEntity);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.TickLabelEntity);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryLabelEntity,<init> --> key,org.jfree.chart.entity.CategoryLabelEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryLabelEntity,getKey --> key,org.jfree.chart.entity.CategoryLabelEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryLabelEntity,equals --> key,org.jfree.chart.entity.CategoryLabelEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryLabelEntity,hashCode --> key,org.jfree.chart.entity.CategoryLabelEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryLabelEntity,toString --> key,org.jfree.chart.entity.CategoryLabelEntity,READ);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,<init> --> <init>,org.jfree.chart.entity.TickLabelEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,equals --> equals,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,hashCode --> hashCode,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,hashCode --> hashCode$7,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,toString --> getToolTipText,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryLabelEntity,toString --> getURLText,org.jfree.chart.entity.ChartEntity,);
EndClass 152
StartClass 153
Class(org.jfree.chart.axis.CategoryLabelWidthType,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,Public,Y,Y,);
Attribute(RANGE,org.jfree.chart.axis.CategoryLabelWidthType,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(readResolve,java.lang.Object,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.chart.axis.CategoryLabelWidthType);
Call(METHOD,org.jfree.chart.axis.CategoryLabelWidthType,equals --> toString,org.jfree.chart.axis.CategoryLabelWidthType,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelWidthType,readResolve --> equals,org.jfree.chart.axis.CategoryLabelWidthType,);
Call(METHOD,org.jfree.chart.axis.CategoryLabelWidthType,<clinit> --> <init>,org.jfree.chart.axis.CategoryLabelWidthType,);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,<init> --> name,org.jfree.chart.axis.CategoryLabelWidthType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,toString --> name,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,equals --> name,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,readResolve --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,readResolve --> RANGE,org.jfree.chart.axis.CategoryLabelWidthType,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,<clinit> --> CATEGORY,org.jfree.chart.axis.CategoryLabelWidthType,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.CategoryLabelWidthType,<clinit> --> RANGE,org.jfree.chart.axis.CategoryLabelWidthType,WRITE);
Call(METHOD,org.jfree.chart.axis.CategoryLabelWidthType,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 153
StartClass 154
Class(org.jfree.chart.labels.CategoryItemLabelGenerator,Y,Y,Public);
Method(generateRowLabel,java.lang.String,Public,N,Y);
Method(generateColumnLabel,java.lang.String,Public,N,Y);
Method(generateLabel,java.lang.String,Public,N,Y);
Parameter(generateRowLabel,org.jfree.data.category.CategoryDataset,);
Parameter(generateRowLabel,int,);
Parameter(generateColumnLabel,org.jfree.data.category.CategoryDataset,);
Parameter(generateColumnLabel,int,);
Parameter(generateLabel,org.jfree.data.category.CategoryDataset,);
Parameter(generateLabel,int,);
Parameter(generateLabel,int,);
EndClass 154
StartClass 155
Class(org.jfree.chart.labels.CategoryToolTipGenerator,Y,Y,Public);
Method(generateToolTip,java.lang.String,Public,N,Y);
Parameter(generateToolTip,org.jfree.data.category.CategoryDataset,);
Parameter(generateToolTip,int,);
Parameter(generateToolTip,int,);
EndClass 155
StartClass 156
Class(org.jfree.chart.urls.CategoryURLGenerator,Y,Y,Public);
Method(generateURL,java.lang.String,Public,N,Y);
Parameter(generateURL,org.jfree.data.category.CategoryDataset,);
Parameter(generateURL,int,);
Parameter(generateURL,int,);
EndClass 156
StartClass 157
Class(org.jfree.chart.labels.CategorySeriesLabelGenerator,Y,Y,Public);
Method(generateLabel,java.lang.String,Public,N,Y);
Parameter(generateLabel,org.jfree.data.category.CategoryDataset,);
Parameter(generateLabel,int,);
EndClass 157
StartClass 158
Class(org.jfree.chart.util.TextUtils,N,N,Public);
Method(<init>,void,Public,N,N);
Method(drawAlignedString,java.awt.geom.Rectangle2D,Public,Y,N);
Method(calcAlignedStringBounds,java.awt.geom.Rectangle2D,Public,Y,N);
Method(deriveTextBoundsAnchorOffsets,float[],Private,Y,N);
Method(deriveTextBoundsAnchorOffsets$2,float[],Private,Y,N);
Method(getTextBounds,java.awt.geom.Rectangle2D,Public,Y,N);
Method(getTextBounds$2,java.awt.geom.Rectangle2D,Public,Y,N);
Parameter(drawAlignedString,java.lang.String,);
Parameter(drawAlignedString,java.awt.Graphics2D,);
Parameter(drawAlignedString,float,);
Parameter(drawAlignedString,float,);
Parameter(drawAlignedString,org.jfree.ui.TextAnchor,);
Parameter(calcAlignedStringBounds,java.lang.String,);
Parameter(calcAlignedStringBounds,java.awt.Graphics2D,);
Parameter(calcAlignedStringBounds,float,);
Parameter(calcAlignedStringBounds,float,);
Parameter(calcAlignedStringBounds,org.jfree.ui.TextAnchor,);
Parameter(deriveTextBoundsAnchorOffsets,java.awt.Graphics2D,);
Parameter(deriveTextBoundsAnchorOffsets,java.lang.String,);
Parameter(deriveTextBoundsAnchorOffsets,org.jfree.ui.TextAnchor,);
Parameter(deriveTextBoundsAnchorOffsets$2,java.awt.Graphics2D,);
Parameter(deriveTextBoundsAnchorOffsets$2,java.lang.String,);
Parameter(deriveTextBoundsAnchorOffsets$2,org.jfree.ui.TextAnchor,);
Parameter(deriveTextBoundsAnchorOffsets$2,java.awt.geom.Rectangle2D,);
Parameter(getTextBounds,java.lang.String,);
Parameter(getTextBounds,java.awt.FontMetrics,);
Parameter(getTextBounds$2,java.lang.String,);
Parameter(getTextBounds$2,double,);
Parameter(getTextBounds$2,double,);
Parameter(getTextBounds$2,java.awt.FontMetrics,);
Call(METHOD,org.jfree.chart.util.TextUtils,drawAlignedString --> deriveTextBoundsAnchorOffsets$2,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.util.TextUtils,calcAlignedStringBounds --> deriveTextBoundsAnchorOffsets$2,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.util.TextUtils,deriveTextBoundsAnchorOffsets --> getTextBounds,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.util.TextUtils,deriveTextBoundsAnchorOffsets$2 --> getTextBounds,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.util.TextUtils,getTextBounds --> getTextBounds$2,org.jfree.chart.util.TextUtils,);
Call(METHOD,org.jfree.chart.util.TextUtils,getTextBounds$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 158
StartClass 159
Class(org.jfree.chart.entity.CategoryItemEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(dataset,org.jfree.data.category.CategoryDataset,Private,N,N,);
Attribute(series,int,Private,N,N,);
Attribute(category,java.lang.Object,Private,N,N,);
Attribute(categoryIndex,int,Private,N,N,);
Attribute(rowKey,java.lang.Comparable,Private,N,N,);
Attribute(columnKey,java.lang.Comparable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getDataset,org.jfree.data.category.CategoryDataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(getRowKey,java.lang.Comparable,Public,N,N);
Method(setRowKey,void,Public,N,N);
Method(getColumnKey,java.lang.Comparable,Public,N,N);
Method(setColumnKey,void,Public,N,N);
Method(getSeries,int,Public,N,N);
Method(setSeries,void,Public,N,N);
Method(getCategory,java.lang.Object,Public,N,N);
Method(setCategory,void,Public,N,N);
Method(getCategoryIndex,int,Public,N,N);
Method(setCategoryIndex,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,org.jfree.data.category.CategoryDataset,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,int,);
Parameter(<init>$2,java.awt.Shape,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,org.jfree.data.category.CategoryDataset,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(setDataset,org.jfree.data.category.CategoryDataset,);
Parameter(setRowKey,java.lang.Comparable,);
Parameter(setColumnKey,java.lang.Comparable,);
Parameter(setSeries,int,);
Parameter(setCategory,java.lang.Object,);
Parameter(setCategoryIndex,int,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.data.category.CategoryDataset);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> dataset,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> series,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> category,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> rowKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init> --> columnKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> dataset,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> rowKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> columnKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> series,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> category,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getDataset --> dataset,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setDataset --> dataset,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getRowKey --> rowKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setRowKey --> dataset,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setRowKey --> rowKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setRowKey --> series,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getColumnKey --> columnKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setColumnKey --> dataset,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setColumnKey --> columnKey,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setColumnKey --> category,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setColumnKey --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getSeries --> series,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setSeries --> series,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getCategory --> category,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setCategory --> category,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,getCategoryIndex --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,setCategoryIndex --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,toString --> rowKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,toString --> columnKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,toString --> dataset,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> rowKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> columnKey,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> dataset,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> categoryIndex,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> series,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.CategoryItemEntity,equals --> category,org.jfree.chart.entity.CategoryItemEntity,READ);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init> --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init> --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init> --> getColumnKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> <init>$3,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> getRowIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,<init>$2 --> getColumnIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,setDataset --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,setRowKey --> getRowIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,setColumnKey --> getColumnIndex,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.entity.CategoryItemEntity,equals --> equals,org.jfree.chart.entity.ChartEntity,);
EndClass 159
StartClass 160
Class(org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(DEFAULT_LABEL_FORMAT,java.lang.String,Public,Y,Y,);
Attribute(formatPattern,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(generateLabel,java.lang.String,Public,N,N);
Method(createItemArray,java.lang.Object[],Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(generateLabel,org.jfree.data.category.CategoryDataset,);
Parameter(generateLabel,int,);
Parameter(createItemArray,org.jfree.data.category.CategoryDataset,);
Parameter(createItemArray,int,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.chart.labels.CategorySeriesLabelGenerator);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,<init> --> <init>$2,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,generateLabel --> createItemArray,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,<init>$2 --> formatPattern,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,WRITE);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,generateLabel --> formatPattern,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,equals --> formatPattern,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,READ);
Call(ATTRIBUTE,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,hashCode --> formatPattern,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,READ);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,generateLabel --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,createItemArray --> getRowKey,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,hashCode --> hashCode$6,org.jfree.chart.HashUtilities,);
EndClass 160
StartClass 161
Class(org.jfree.data.KeyedValues2D,Y,Y,Public);
Method(getRowKey,java.lang.Comparable,Public,N,Y);
Method(getRowIndex,int,Public,N,Y);
Method(getRowKeys,java.util.List,Public,N,Y);
Method(getColumnKey,java.lang.Comparable,Public,N,Y);
Method(getColumnIndex,int,Public,N,Y);
Method(getColumnKeys,java.util.List,Public,N,Y);
Method(getValue,java.lang.Number,Public,N,Y);
Parameter(getRowKey,int,);
Parameter(getRowIndex,java.lang.Comparable,);
Parameter(getColumnKey,int,);
Parameter(getColumnIndex,java.lang.Comparable,);
Parameter(getValue,java.lang.Comparable,);
Parameter(getValue,java.lang.Comparable,);
Realization(org.jfree.data.Values2D);
EndClass 161
StartClass 162
Class(org.jfree.chart.ChartColor,N,N,Public);
Attribute(VERY_DARK_RED,java.awt.Color,Public,Y,Y,);
Attribute(DARK_RED,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_RED,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_RED,java.awt.Color,Public,Y,Y,);
Attribute(VERY_DARK_YELLOW,java.awt.Color,Public,Y,Y,);
Attribute(DARK_YELLOW,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_YELLOW,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_YELLOW,java.awt.Color,Public,Y,Y,);
Attribute(VERY_DARK_GREEN,java.awt.Color,Public,Y,Y,);
Attribute(DARK_GREEN,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_GREEN,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_GREEN,java.awt.Color,Public,Y,Y,);
Attribute(VERY_DARK_CYAN,java.awt.Color,Public,Y,Y,);
Attribute(DARK_CYAN,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_CYAN,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_CYAN,java.awt.Color,Public,Y,Y,);
Attribute(VERY_DARK_BLUE,java.awt.Color,Public,Y,Y,);
Attribute(DARK_BLUE,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_BLUE,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_BLUE,java.awt.Color,Public,Y,Y,);
Attribute(VERY_DARK_MAGENTA,java.awt.Color,Public,Y,Y,);
Attribute(DARK_MAGENTA,java.awt.Color,Public,Y,Y,);
Attribute(LIGHT_MAGENTA,java.awt.Color,Public,Y,Y,);
Attribute(VERY_LIGHT_MAGENTA,java.awt.Color,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(createDefaultPaintArray,java.awt.Paint[],Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_RED,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_BLUE,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_GREEN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_YELLOW,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_MAGENTA,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> DARK_CYAN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_RED,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_BLUE,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_GREEN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_YELLOW,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_MAGENTA,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> LIGHT_CYAN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_RED,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_BLUE,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_GREEN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_YELLOW,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_MAGENTA,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_DARK_CYAN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_RED,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_BLUE,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_GREEN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_YELLOW,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_MAGENTA,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,createDefaultPaintArray --> VERY_LIGHT_CYAN,org.jfree.chart.ChartColor,READ);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_RED,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_RED,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_RED,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_RED,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_YELLOW,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_YELLOW,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_YELLOW,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_YELLOW,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_GREEN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_GREEN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_GREEN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_GREEN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_CYAN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_CYAN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_CYAN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_CYAN,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_BLUE,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_BLUE,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_BLUE,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_BLUE,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_DARK_MAGENTA,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> DARK_MAGENTA,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> LIGHT_MAGENTA,org.jfree.chart.ChartColor,WRITE);
Call(ATTRIBUTE,org.jfree.chart.ChartColor,<clinit> --> VERY_LIGHT_MAGENTA,org.jfree.chart.ChartColor,WRITE);
EndClass 162
StartClass 163
Class(org.jfree.chart.entity.LegendItemEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(dataset,org.jfree.data.general.Dataset,Private,N,N,);
Attribute(seriesKey,java.lang.Comparable,Private,N,N,);
Attribute(seriesIndex,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDataset,org.jfree.data.general.Dataset,Public,N,N);
Method(setDataset,void,Public,N,N);
Method(getSeriesKey,java.lang.Comparable,Public,N,N);
Method(setSeriesKey,void,Public,N,N);
Method(getSeriesIndex,int,Public,N,N);
Method(setSeriesIndex,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(setDataset,org.jfree.data.general.Dataset,);
Parameter(setSeriesKey,java.lang.Comparable,);
Parameter(setSeriesIndex,int,);
Parameter(equals,java.lang.Object,);
SuperClass(org.jfree.chart.entity.ChartEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Composition(org.jfree.data.general.Dataset);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,getDataset --> dataset,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,setDataset --> dataset,org.jfree.chart.entity.LegendItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,getSeriesKey --> seriesKey,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,setSeriesKey --> seriesKey,org.jfree.chart.entity.LegendItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,getSeriesIndex --> seriesIndex,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,setSeriesIndex --> seriesIndex,org.jfree.chart.entity.LegendItemEntity,WRITE);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,equals --> seriesKey,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,equals --> seriesIndex,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,equals --> dataset,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,toString --> seriesKey,org.jfree.chart.entity.LegendItemEntity,READ);
Call(ATTRIBUTE,org.jfree.chart.entity.LegendItemEntity,toString --> dataset,org.jfree.chart.entity.LegendItemEntity,READ);
Call(METHOD,org.jfree.chart.entity.LegendItemEntity,<init> --> <init>,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.LegendItemEntity,equals --> equals,org.jfree.chart.entity.ChartEntity,);
Call(METHOD,org.jfree.chart.entity.LegendItemEntity,clone --> clone,org.jfree.chart.entity.ChartEntity,);
EndClass 163
StartClass 164
Class(org.jfree.data.general.AbstractDataset,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(group,org.jfree.data.general.DatasetGroup,Private,N,N,);
Attribute(listenerList,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(notify,boolean,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(getGroup,org.jfree.data.general.DatasetGroup,Public,N,N);
Method(setGroup,void,Public,N,N);
Method(getNotify,boolean,Public,N,N);
Method(setNotify,void,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(hasListener,boolean,Public,N,N);
Method(fireDatasetChanged,void,Protected,N,N);
Method(notifyListeners,void,Protected,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(validateObject,void,Public,N,N);
Parameter(setGroup,org.jfree.data.general.DatasetGroup,);
Parameter(setNotify,boolean,);
Parameter(addChangeListener,org.jfree.data.general.DatasetChangeListener,);
Parameter(removeChangeListener,org.jfree.data.general.DatasetChangeListener,);
Parameter(hasListener,java.util.EventListener,);
Parameter(notifyListeners,org.jfree.data.general.DatasetChangeEvent,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.jfree.data.category.DefaultCategoryDataset);
SubClass(org.jfree.data.general.DefaultPieDataset);
SubClass(org.jfree.data.xy.XYSeriesCollection);
SubClass(org.jfree.data.xy.AbstractIntervalXYDataset);
SubClass(org.jfree.data.xy.AbstractXYDataset);
SubClass(org.jfree.data.general.AbstractSeriesDataset);
Realization(org.jfree.data.general.Dataset);
Composition(org.jfree.data.general.DatasetGroup);
Call(METHOD,org.jfree.data.general.AbstractDataset,setNotify --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.AbstractDataset,fireDatasetChanged --> notifyListeners,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.AbstractDataset,validateObject --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,<init> --> group,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,<init> --> listenerList,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,<init> --> notify,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,getGroup --> group,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,setGroup --> group,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,getNotify --> notify,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,setNotify --> notify,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,addChangeListener --> listenerList,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,removeChangeListener --> listenerList,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,hasListener --> listenerList,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,fireDatasetChanged --> notify,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,notifyListeners --> listenerList,org.jfree.data.general.AbstractDataset,READ);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,clone --> listenerList,org.jfree.data.general.AbstractDataset,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.AbstractDataset,readObject --> listenerList,org.jfree.data.general.AbstractDataset,WRITE);
Call(METHOD,org.jfree.data.general.AbstractDataset,<init> --> <init>,org.jfree.data.general.DatasetGroup,);
Call(METHOD,org.jfree.data.general.AbstractDataset,setGroup --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.AbstractDataset,fireDatasetChanged --> <init>,org.jfree.data.general.DatasetChangeEvent,);
Call(METHOD,org.jfree.data.general.AbstractDataset,notifyListeners --> datasetChanged,org.jfree.data.general.DatasetChangeListener,);
EndClass 164
StartClass 165
Class(org.jfree.data.DefaultKeyedValues2D,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(rowKeys,java.util.List,Private,N,N,);
Attribute(columnKeys,java.util.List,Private,N,N,);
Attribute(rows,java.util.List,Private,N,N,);
Attribute(sortRowKeys,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getValue,java.lang.Number,Public,N,N);
Method(getRowKey,java.lang.Comparable,Public,N,N);
Method(getRowIndex,int,Public,N,N);
Method(getRowKeys,java.util.List,Public,N,N);
Method(getColumnKey,java.lang.Comparable,Public,N,N);
Method(getColumnIndex,int,Public,N,N);
Method(getColumnKeys,java.util.List,Public,N,N);
Method(getValue$2,java.lang.Number,Public,N,N);
Method(addValue,void,Public,N,N);
Method(setValue,void,Public,N,N);
Method(removeValue,void,Public,N,N);
Method(removeRow,void,Public,N,N);
Method(removeRow$2,void,Public,N,N);
Method(removeColumn,void,Public,N,N);
Method(removeColumn$2,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(<init>$2,boolean,);
Parameter(getValue,int,);
Parameter(getValue,int,);
Parameter(getRowKey,int,);
Parameter(getRowIndex,java.lang.Comparable,);
Parameter(getColumnKey,int,);
Parameter(getColumnIndex,java.lang.Comparable,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(addValue,java.lang.Number,);
Parameter(addValue,java.lang.Comparable,);
Parameter(addValue,java.lang.Comparable,);
Parameter(setValue,java.lang.Number,);
Parameter(setValue,java.lang.Comparable,);
Parameter(setValue,java.lang.Comparable,);
Parameter(removeValue,java.lang.Comparable,);
Parameter(removeValue,java.lang.Comparable,);
Parameter(removeRow,int,);
Parameter(removeRow$2,java.lang.Comparable,);
Parameter(removeColumn,int,);
Parameter(removeColumn$2,java.lang.Comparable,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.data.KeyedValues2D);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,<init> --> <init>$2,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> getRowIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,addValue --> setValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,setValue --> getRowIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> setValue,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> getRowIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeRow$2 --> getRowIndex,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeRow$2 --> removeRow,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn --> getColumnKey,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn --> removeColumn$2,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getRowKeys,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getColumnKeys,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getRowCount,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getColumnCount,org.jfree.data.DefaultKeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getValue,org.jfree.data.DefaultKeyedValues2D,);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,<init>$2 --> rowKeys,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,<init>$2 --> columnKeys,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,<init>$2 --> rows,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,<init>$2 --> sortRowKeys,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getRowCount --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getColumnCount --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getValue --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getValue --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getRowKey --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getRowIndex --> sortRowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getRowIndex --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getRowKeys --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getColumnKey --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getColumnIndex --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getColumnKeys --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,setValue --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,setValue --> sortRowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,setValue --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,setValue --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeValue --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeValue --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeValue --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeRow --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeRow --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clear --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clear --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clear --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,hashCode --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,hashCode --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,hashCode --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> columnKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> rowKeys,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> rows,org.jfree.data.DefaultKeyedValues2D,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> columnKeys,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> rowKeys,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues2D,clone --> rows,org.jfree.data.DefaultKeyedValues2D,WRITE);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getRowIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getColumnIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,getValue$2 --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,setValue --> <init>,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,setValue --> setValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> getItemCount,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeValue --> removeValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeRow$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeRow$2 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,removeColumn$2 --> removeValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getRowKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getColumnKeys,org.jfree.data.KeyedValues2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getRowCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getColumnCount,org.jfree.data.Values2D,);
Call(METHOD,org.jfree.data.DefaultKeyedValues2D,equals --> getValue,org.jfree.data.Values2D,);
EndClass 165
StartClass 166
Class(org.jfree.data.xy.AbstractIntervalXYDataset,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(getStartXValue,double,Public,N,N);
Method(getEndXValue,double,Public,N,N);
Method(getStartYValue,double,Public,N,N);
Method(getEndYValue,double,Public,N,N);
Parameter(getStartXValue,int,);
Parameter(getStartXValue,int,);
Parameter(getEndXValue,int,);
Parameter(getEndXValue,int,);
Parameter(getStartYValue,int,);
Parameter(getStartYValue,int,);
Parameter(getEndYValue,int,);
Parameter(getEndYValue,int,);
SuperClass(org.jfree.data.xy.AbstractXYDataset);
SuperClass(org.jfree.data.general.AbstractSeriesDataset);
SuperClass(org.jfree.data.general.AbstractDataset);
SubClass(org.jfree.data.xy.XYSeriesCollection);
Generalization(org.jfree.data.xy.AbstractXYDataset);
Realization(org.jfree.data.xy.IntervalXYDataset);
Call(METHOD,org.jfree.data.xy.AbstractIntervalXYDataset,<init> --> <init>,org.jfree.data.xy.AbstractXYDataset,);
Call(METHOD,org.jfree.data.xy.AbstractIntervalXYDataset,getStartXValue --> getStartX,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.xy.AbstractIntervalXYDataset,getEndXValue --> getEndX,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.xy.AbstractIntervalXYDataset,getStartYValue --> getStartY,org.jfree.data.xy.IntervalXYDataset,);
Call(METHOD,org.jfree.data.xy.AbstractIntervalXYDataset,getEndYValue --> getEndY,org.jfree.data.xy.IntervalXYDataset,);
EndClass 166
StartClass 167
Class(org.jfree.data.xy.IntervalXYDelegate,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(dataset,org.jfree.data.xy.XYDataset,Private,N,N,);
Attribute(autoWidth,boolean,Private,N,N,);
Attribute(intervalPositionFactor,double,Private,N,N,);
Attribute(fixedIntervalWidth,double,Private,N,N,);
Attribute(autoIntervalWidth,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(isAutoWidth,boolean,Public,N,N);
Method(setAutoWidth,void,Public,N,N);
Method(getIntervalPositionFactor,double,Public,N,N);
Method(setIntervalPositionFactor,void,Public,N,N);
Method(getFixedIntervalWidth,double,Public,N,N);
Method(setFixedIntervalWidth,void,Public,N,N);
Method(getIntervalWidth,double,Public,N,N);
Method(getStartX,java.lang.Number,Public,N,N);
Method(getStartXValue,double,Public,N,N);
Method(getEndX,java.lang.Number,Public,N,N);
Method(getEndXValue,double,Public,N,N);
Method(getDomainLowerBound,double,Public,N,N);
Method(getDomainUpperBound,double,Public,N,N);
Method(getDomainBounds,org.jfree.data.Range,Public,N,N);
Method(datasetChanged,void,Public,N,N);
Method(recalculateInterval,double,Private,N,N);
Method(calculateIntervalForSeries,double,Private,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,org.jfree.data.xy.XYDataset,);
Parameter(<init>$2,org.jfree.data.xy.XYDataset,);
Parameter(<init>$2,boolean,);
Parameter(setAutoWidth,boolean,);
Parameter(setIntervalPositionFactor,double,);
Parameter(setFixedIntervalWidth,double,);
Parameter(getStartX,int,);
Parameter(getStartX,int,);
Parameter(getStartXValue,int,);
Parameter(getStartXValue,int,);
Parameter(getEndX,int,);
Parameter(getEndX,int,);
Parameter(getEndXValue,int,);
Parameter(getEndXValue,int,);
Parameter(getDomainLowerBound,boolean,);
Parameter(getDomainUpperBound,boolean,);
Parameter(getDomainBounds,boolean,);
Parameter(datasetChanged,org.jfree.data.general.DatasetChangeEvent,);
Parameter(calculateIntervalForSeries,int,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.data.general.DatasetChangeListener);
Realization(org.jfree.data.DomainInfo);
Composition(org.jfree.data.xy.XYDataset);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,<init> --> <init>$2,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,setAutoWidth --> recalculateInterval,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getIntervalWidth --> isAutoWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartX --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartX --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartXValue --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartXValue --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndX --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndX --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndXValue --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndXValue --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainLowerBound --> getDomainBounds,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainUpperBound --> getDomainBounds,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> getIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> getIntervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,datasetChanged --> recalculateInterval,org.jfree.data.xy.IntervalXYDelegate,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,recalculateInterval --> calculateIntervalForSeries,org.jfree.data.xy.IntervalXYDelegate,);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> dataset,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> intervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> autoIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,isAutoWidth --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,setAutoWidth --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,setAutoWidth --> autoIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getIntervalPositionFactor --> intervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,setIntervalPositionFactor --> intervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getFixedIntervalWidth --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,setFixedIntervalWidth --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,setFixedIntervalWidth --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getIntervalWidth --> autoIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getIntervalWidth --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getStartX --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getStartXValue --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getEndX --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getEndXValue --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,datasetChanged --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,datasetChanged --> autoIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,recalculateInterval --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,calculateIntervalForSeries --> dataset,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,equals --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,equals --> intervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,equals --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,hashCode --> autoWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,hashCode --> intervalPositionFactor,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(ATTRIBUTE,org.jfree.data.xy.IntervalXYDelegate,hashCode --> fixedIntervalWidth,org.jfree.data.xy.IntervalXYDelegate,READ);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartX --> getX,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getStartXValue --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndX --> getX,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getEndXValue --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainLowerBound --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainUpperBound --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> findDomainBounds$2,org.jfree.data.general.DatasetUtilities,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> getLowerBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> getUpperBound,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,getDomainBounds --> <init>,org.jfree.data.Range,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,recalculateInterval --> getSeriesCount,org.jfree.data.general.SeriesDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,calculateIntervalForSeries --> getItemCount,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,calculateIntervalForSeries --> getXValue,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,hashCode --> hashCode,org.jfree.chart.HashUtilities,);
Call(METHOD,org.jfree.data.xy.IntervalXYDelegate,hashCode --> hashCode$3,org.jfree.chart.HashUtilities,);
EndClass 167
StartClass 168
Class(org.jfree.data.general.SeriesChangeListener,Y,Y,Public);
Method(seriesChanged,void,Public,N,Y);
Parameter(seriesChanged,org.jfree.data.general.SeriesChangeEvent,);
EndClass 168
StartClass 169
Class(org.jfree.data.general.Series,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(key,java.lang.Comparable,Private,N,N,);
Attribute(description,java.lang.String,Private,N,N,);
Attribute(listeners,javax.swing.event.EventListenerList,Private,N,N,);
Attribute(propertyChangeSupport,java.beans.PropertyChangeSupport,Private,N,N,);
Attribute(vetoableChangeSupport,java.beans.VetoableChangeSupport,Private,N,N,);
Attribute(notify,boolean,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(<init>$2,void,Protected,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(setKey,void,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(setDescription,void,Public,N,N);
Method(getNotify,boolean,Public,N,N);
Method(setNotify,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(getItemCount,int,Public,N,Y);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(addChangeListener,void,Public,N,N);
Method(removeChangeListener,void,Public,N,N);
Method(fireSeriesChanged,void,Public,N,N);
Method(notifyListeners,void,Protected,N,N);
Method(addPropertyChangeListener,void,Public,N,N);
Method(removePropertyChangeListener,void,Public,N,N);
Method(firePropertyChange,void,Protected,N,N);
Method(addVetoableChangeListener,void,Public,N,N);
Method(removeVetoableChangeListener,void,Public,N,N);
Method(fireVetoableChange,void,Protected,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>$2,java.lang.Comparable,);
Parameter(<init>$2,java.lang.String,);
Parameter(setKey,java.lang.Comparable,);
Parameter(setDescription,java.lang.String,);
Parameter(setNotify,boolean,);
Parameter(equals,java.lang.Object,);
Parameter(addChangeListener,org.jfree.data.general.SeriesChangeListener,);
Parameter(removeChangeListener,org.jfree.data.general.SeriesChangeListener,);
Parameter(notifyListeners,org.jfree.data.general.SeriesChangeEvent,);
Parameter(addPropertyChangeListener,java.beans.PropertyChangeListener,);
Parameter(removePropertyChangeListener,java.beans.PropertyChangeListener,);
Parameter(firePropertyChange,java.lang.String,);
Parameter(firePropertyChange,java.lang.Object,);
Parameter(firePropertyChange,java.lang.Object,);
Parameter(addVetoableChangeListener,java.beans.VetoableChangeListener,);
Parameter(removeVetoableChangeListener,java.beans.VetoableChangeListener,);
Parameter(fireVetoableChange,java.lang.String,);
Parameter(fireVetoableChange,java.lang.Object,);
Parameter(fireVetoableChange,java.lang.Object,);
SubClass(org.jfree.data.xy.XYSeries);
Call(METHOD,org.jfree.data.general.Series,<init> --> <init>$2,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.general.Series,setNotify --> fireSeriesChanged,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.general.Series,isEmpty --> getItemCount,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.general.Series,equals --> getKey,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.general.Series,equals --> getDescription,org.jfree.data.general.Series,);
Call(METHOD,org.jfree.data.general.Series,fireSeriesChanged --> notifyListeners,org.jfree.data.general.Series,);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> key,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> description,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> listeners,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> propertyChangeSupport,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> vetoableChangeSupport,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,<init>$2 --> notify,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,getKey --> key,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setKey --> key,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setKey --> vetoableChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setKey --> propertyChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setKey --> key,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,getDescription --> description,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setDescription --> description,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setDescription --> propertyChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setDescription --> description,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,getNotify --> notify,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setNotify --> notify,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,setNotify --> notify,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,clone --> listeners,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,clone --> propertyChangeSupport,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,clone --> vetoableChangeSupport,org.jfree.data.general.Series,WRITE);
Call(ATTRIBUTE,org.jfree.data.general.Series,hashCode --> key,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,hashCode --> description,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,addChangeListener --> listeners,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,removeChangeListener --> listeners,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,fireSeriesChanged --> notify,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,notifyListeners --> listeners,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,addPropertyChangeListener --> propertyChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,removePropertyChangeListener --> propertyChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,firePropertyChange --> propertyChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,addVetoableChangeListener --> vetoableChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,removeVetoableChangeListener --> vetoableChangeSupport,org.jfree.data.general.Series,READ);
Call(ATTRIBUTE,org.jfree.data.general.Series,fireVetoableChange --> vetoableChangeSupport,org.jfree.data.general.Series,READ);
Call(METHOD,org.jfree.data.general.Series,<init>$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.Series,setKey --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.general.Series,fireSeriesChanged --> <init>,org.jfree.data.general.SeriesChangeEvent,);
Call(METHOD,org.jfree.data.general.Series,notifyListeners --> seriesChanged,org.jfree.data.general.SeriesChangeListener,);
EndClass 169
StartClass 170
Class(org.jfree.data.UnknownKeyException,N,N,Public);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.String,);
EndClass 170
StartClass 171
Class(org.jfree.data.DefaultKeyedValues,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(keys,java.util.ArrayList,Private,N,N,);
Attribute(values,java.util.ArrayList,Private,N,N,);
Attribute(indexMap,java.util.HashMap,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(getValue,java.lang.Number,Public,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(getIndex,int,Public,N,N);
Method(getKeys,java.util.List,Public,N,N);
Method(getValue$2,java.lang.Number,Public,N,N);
Method(addValue,void,Public,N,N);
Method(addValue$2,void,Public,N,N);
Method(setValue,void,Public,N,N);
Method(setValue$2,void,Public,N,N);
Method(insertValue,void,Public,N,N);
Method(insertValue$2,void,Public,N,N);
Method(rebuildIndex,void,Private,N,N);
Method(removeValue,void,Public,N,N);
Method(removeValue$2,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(sortByKeys,void,Public,N,N);
Method(sortByValues,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Parameter(getValue,int,);
Parameter(getKey,int,);
Parameter(getIndex,java.lang.Comparable,);
Parameter(getValue$2,java.lang.Comparable,);
Parameter(addValue,java.lang.Comparable,);
Parameter(addValue,double,);
Parameter(addValue$2,java.lang.Comparable,);
Parameter(addValue$2,java.lang.Number,);
Parameter(setValue,java.lang.Comparable,);
Parameter(setValue,double,);
Parameter(setValue$2,java.lang.Comparable,);
Parameter(setValue$2,java.lang.Number,);
Parameter(insertValue,int,);
Parameter(insertValue,java.lang.Comparable,);
Parameter(insertValue,double,);
Parameter(insertValue$2,int,);
Parameter(insertValue$2,java.lang.Comparable,);
Parameter(insertValue$2,java.lang.Number,);
Parameter(removeValue,int,);
Parameter(removeValue$2,java.lang.Comparable,);
Parameter(sortByKeys,org.jfree.util.SortOrder,);
Parameter(sortByValues,org.jfree.util.SortOrder,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.data.KeyedValues);
Call(METHOD,org.jfree.data.DefaultKeyedValues,getValue$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,getValue$2 --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,addValue --> addValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,addValue$2 --> setValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,setValue --> setValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,setValue$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,insertValue --> insertValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,insertValue$2 --> getItemCount,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,insertValue$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,insertValue$2 --> rebuildIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,removeValue --> rebuildIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,removeValue$2 --> getIndex,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,removeValue$2 --> removeValue,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> clear,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> addValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> clear,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> addValue$2,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getItemCount,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getKey,org.jfree.data.DefaultKeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getValue,org.jfree.data.DefaultKeyedValues,);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,<init> --> keys,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,<init> --> values,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,<init> --> indexMap,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,getItemCount --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,getValue --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,getKey --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,getIndex --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,getKeys --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,setValue$2 --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,setValue$2 --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,setValue$2 --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,insertValue$2 --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,insertValue$2 --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,rebuildIndex --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,rebuildIndex --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,removeValue --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,removeValue --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clear --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clear --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clear --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByKeys --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByKeys --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByValues --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByValues --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,hashCode --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> keys,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> values,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> indexMap,org.jfree.data.DefaultKeyedValues,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> keys,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> values,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,clone --> indexMap,org.jfree.data.DefaultKeyedValues,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByKeys --> BY_KEY,org.jfree.data.KeyedValueComparatorType,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValues,sortByValues --> BY_VALUE,org.jfree.data.KeyedValueComparatorType,READ);
Call(METHOD,org.jfree.data.DefaultKeyedValues,getIndex --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,getValue$2 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,setValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,insertValue$2 --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,removeValue$2 --> <init>,org.jfree.data.UnknownKeyException,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> <init>,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> <init>,org.jfree.data.KeyedValueComparator,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> getKey,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByKeys --> getValue,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> <init>,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> <init>,org.jfree.data.KeyedValueComparator,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> getKey,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,sortByValues --> getValue,org.jfree.data.DefaultKeyedValue,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getItemCount,org.jfree.data.Values,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getKey,org.jfree.data.KeyedValues,);
Call(METHOD,org.jfree.data.DefaultKeyedValues,equals --> getValue,org.jfree.data.Values,);
EndClass 171
StartClass 172
Class(org.jfree.data.xy.XYDataItem,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(x,java.lang.Number,Private,N,N,);
Attribute(y,java.lang.Number,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getX,java.lang.Number,Public,N,N);
Method(getXValue,double,Public,N,N);
Method(getY,java.lang.Number,Public,N,N);
Method(getYValue,double,Public,N,N);
Method(setY,void,Public,N,N);
Method(setY$2,void,Public,N,N);
Method(compareTo,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.Number,);
Parameter(<init>,java.lang.Number,);
Parameter(<init>$2,double,);
Parameter(<init>$2,double,);
Parameter(setY,double,);
Parameter(setY$2,java.lang.Number,);
Parameter(compareTo,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Call(METHOD,org.jfree.data.xy.XYDataItem,<init>$2 --> <init>,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYDataItem,setY --> setY$2,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYDataItem,compareTo --> getX,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYDataItem,toString --> getXValue,org.jfree.data.xy.XYDataItem,);
Call(METHOD,org.jfree.data.xy.XYDataItem,toString --> getYValue,org.jfree.data.xy.XYDataItem,);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,<init> --> x,org.jfree.data.xy.XYDataItem,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,<init> --> y,org.jfree.data.xy.XYDataItem,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,getX --> x,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,getXValue --> x,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,getY --> y,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,getYValue --> y,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,setY$2 --> y,org.jfree.data.xy.XYDataItem,WRITE);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,compareTo --> x,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,equals --> x,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,equals --> y,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,hashCode --> x,org.jfree.data.xy.XYDataItem,READ);
Call(ATTRIBUTE,org.jfree.data.xy.XYDataItem,hashCode --> y,org.jfree.data.xy.XYDataItem,READ);
Call(METHOD,org.jfree.data.xy.XYDataItem,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 172
StartClass 173
Class(org.jfree.data.general.SeriesException,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.String,);
EndClass 173
StartClass 174
Class(org.jfree.data.Values,Y,Y,Public);
Method(getItemCount,int,Public,N,Y);
Method(getValue,java.lang.Number,Public,N,Y);
Parameter(getValue,int,);
EndClass 174
StartClass 175
Class(org.jfree.chart.axis.TickUnit,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(size,double,Private,N,N,);
Attribute(minorTickCount,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getSize,double,Public,N,N);
Method(getMinorTickCount,int,Public,N,N);
Method(valueToString,java.lang.String,Public,N,N);
Method(compareTo,int,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,double,);
Parameter(<init>$2,double,);
Parameter(<init>$2,int,);
Parameter(valueToString,double,);
Parameter(compareTo,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Call(METHOD,org.jfree.chart.axis.TickUnit,compareTo --> getSize,org.jfree.chart.axis.TickUnit,);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,<init> --> size,org.jfree.chart.axis.TickUnit,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,<init>$2 --> size,org.jfree.chart.axis.TickUnit,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,<init>$2 --> minorTickCount,org.jfree.chart.axis.TickUnit,WRITE);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,getSize --> size,org.jfree.chart.axis.TickUnit,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,getMinorTickCount --> minorTickCount,org.jfree.chart.axis.TickUnit,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,compareTo --> size,org.jfree.chart.axis.TickUnit,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,equals --> size,org.jfree.chart.axis.TickUnit,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,equals --> minorTickCount,org.jfree.chart.axis.TickUnit,READ);
Call(ATTRIBUTE,org.jfree.chart.axis.TickUnit,hashCode --> size,org.jfree.chart.axis.TickUnit,READ);
EndClass 175
StartClass 176
Class(org.jfree.chart.entity.TickLabelEntity,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.awt.Shape,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
SuperClass(org.jfree.chart.entity.ChartEntity);
SubClass(org.jfree.chart.entity.CategoryLabelEntity);
Generalization(org.jfree.chart.entity.ChartEntity);
Call(METHOD,org.jfree.chart.entity.TickLabelEntity,<init> --> <init>$3,org.jfree.chart.entity.ChartEntity,);
EndClass 176
StartClass 177
Class(org.jfree.data.Values2D,Y,Y,Public);
Method(getRowCount,int,Public,N,Y);
Method(getColumnCount,int,Public,N,Y);
Method(getValue,java.lang.Number,Public,N,Y);
Parameter(getValue,int,);
Parameter(getValue,int,);
EndClass 177
StartClass 178
Class(org.jfree.data.xy.AbstractXYDataset,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(getDomainOrder,org.jfree.data.DomainOrder,Public,N,N);
Method(getXValue,double,Public,N,N);
Method(getYValue,double,Public,N,N);
Parameter(getXValue,int,);
Parameter(getXValue,int,);
Parameter(getYValue,int,);
Parameter(getYValue,int,);
SuperClass(org.jfree.data.general.AbstractSeriesDataset);
SuperClass(org.jfree.data.general.AbstractDataset);
SubClass(org.jfree.data.xy.XYSeriesCollection);
SubClass(org.jfree.data.xy.AbstractIntervalXYDataset);
Generalization(org.jfree.data.general.AbstractSeriesDataset);
Realization(org.jfree.data.xy.XYDataset);
Call(ATTRIBUTE,org.jfree.data.xy.AbstractXYDataset,getDomainOrder --> NONE,org.jfree.data.DomainOrder,READ);
Call(METHOD,org.jfree.data.xy.AbstractXYDataset,<init> --> <init>,org.jfree.data.general.AbstractSeriesDataset,);
Call(METHOD,org.jfree.data.xy.AbstractXYDataset,getXValue --> getX,org.jfree.data.xy.XYDataset,);
Call(METHOD,org.jfree.data.xy.AbstractXYDataset,getYValue --> getY,org.jfree.data.xy.XYDataset,);
EndClass 178
StartClass 179
Class(org.jfree.data.general.SeriesChangeEvent,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.Object,);
EndClass 179
StartClass 180
Class(org.jfree.data.KeyedValueComparatorType,N,N,Public);
Attribute(BY_KEY,org.jfree.data.KeyedValueComparatorType,Public,Y,Y,);
Attribute(BY_VALUE,org.jfree.data.KeyedValueComparatorType,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(equals,java.lang.Object,);
Composition(org.jfree.data.KeyedValueComparatorType);
Call(METHOD,org.jfree.data.KeyedValueComparatorType,<clinit> --> <init>,org.jfree.data.KeyedValueComparatorType,);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,<init> --> name,org.jfree.data.KeyedValueComparatorType,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,toString --> name,org.jfree.data.KeyedValueComparatorType,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,equals --> name,org.jfree.data.KeyedValueComparatorType,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,hashCode --> name,org.jfree.data.KeyedValueComparatorType,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,<clinit> --> BY_KEY,org.jfree.data.KeyedValueComparatorType,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparatorType,<clinit> --> BY_VALUE,org.jfree.data.KeyedValueComparatorType,WRITE);
EndClass 180
StartClass 181
Class(org.jfree.data.DefaultKeyedValue,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(key,java.lang.Comparable,Private,N,N,);
Attribute(value,java.lang.Number,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getKey,java.lang.Comparable,Public,N,N);
Method(getValue,java.lang.Number,Public,N,N);
Method(setValue,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.Comparable,);
Parameter(<init>,java.lang.Number,);
Parameter(setValue,java.lang.Number,);
Parameter(equals,java.lang.Object,);
Realization(org.jfree.data.KeyedValue);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,<init> --> key,org.jfree.data.DefaultKeyedValue,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,<init> --> value,org.jfree.data.DefaultKeyedValue,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,getKey --> key,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,getValue --> value,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,setValue --> value,org.jfree.data.DefaultKeyedValue,WRITE);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,equals --> key,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,equals --> value,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,hashCode --> key,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,hashCode --> value,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,toString --> key,org.jfree.data.DefaultKeyedValue,READ);
Call(ATTRIBUTE,org.jfree.data.DefaultKeyedValue,toString --> value,org.jfree.data.DefaultKeyedValue,READ);
Call(METHOD,org.jfree.data.DefaultKeyedValue,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
EndClass 181
StartClass 182
Class(org.jfree.data.KeyedValueComparator,N,N,Public);
Attribute(type,org.jfree.data.KeyedValueComparatorType,Private,N,N,);
Attribute(order,org.jfree.util.SortOrder,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getType,org.jfree.data.KeyedValueComparatorType,Public,N,N);
Method(getOrder,org.jfree.util.SortOrder,Public,N,N);
Method(compare,int,Public,N,N);
Parameter(<init>,org.jfree.data.KeyedValueComparatorType,);
Parameter(<init>,org.jfree.util.SortOrder,);
Parameter(compare,java.lang.Object,);
Parameter(compare,java.lang.Object,);
Composition(org.jfree.data.KeyedValueComparatorType);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,<init> --> type,org.jfree.data.KeyedValueComparator,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,<init> --> order,org.jfree.data.KeyedValueComparator,WRITE);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,getType --> type,org.jfree.data.KeyedValueComparator,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,getOrder --> order,org.jfree.data.KeyedValueComparator,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,compare --> type,org.jfree.data.KeyedValueComparator,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,compare --> order,org.jfree.data.KeyedValueComparator,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,compare --> BY_KEY,org.jfree.data.KeyedValueComparatorType,READ);
Call(ATTRIBUTE,org.jfree.data.KeyedValueComparator,compare --> BY_VALUE,org.jfree.data.KeyedValueComparatorType,READ);
Call(METHOD,org.jfree.data.KeyedValueComparator,<init> --> nullNotPermitted,org.jfree.chart.util.ParamChecks,);
Call(METHOD,org.jfree.data.KeyedValueComparator,compare --> getKey,org.jfree.data.KeyedValue,);
Call(METHOD,org.jfree.data.KeyedValueComparator,compare --> getValue,org.jfree.data.Value,);
EndClass 182
StartClass 183
Class(org.jfree.data.general.AbstractSeriesDataset,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Protected,N,N);
Method(getSeriesCount,int,Public,N,Y);
Method(getSeriesKey,java.lang.Comparable,Public,N,Y);
Method(indexOf,int,Public,N,N);
Method(seriesChanged,void,Public,N,N);
Parameter(getSeriesKey,int,);
Parameter(indexOf,java.lang.Comparable,);
Parameter(seriesChanged,org.jfree.data.general.SeriesChangeEvent,);
SuperClass(org.jfree.data.general.AbstractDataset);
SubClass(org.jfree.data.xy.XYSeriesCollection);
SubClass(org.jfree.data.xy.AbstractIntervalXYDataset);
SubClass(org.jfree.data.xy.AbstractXYDataset);
Generalization(org.jfree.data.general.AbstractDataset);
Realization(org.jfree.data.general.SeriesDataset);
Realization(org.jfree.data.general.SeriesChangeListener);
Call(METHOD,org.jfree.data.general.AbstractSeriesDataset,indexOf --> getSeriesCount,org.jfree.data.general.AbstractSeriesDataset,);
Call(METHOD,org.jfree.data.general.AbstractSeriesDataset,indexOf --> getSeriesKey,org.jfree.data.general.AbstractSeriesDataset,);
Call(METHOD,org.jfree.data.general.AbstractSeriesDataset,<init> --> <init>,org.jfree.data.general.AbstractDataset,);
Call(METHOD,org.jfree.data.general.AbstractSeriesDataset,seriesChanged --> fireDatasetChanged,org.jfree.data.general.AbstractDataset,);
EndClass 183
StartClass 184
Class(org.jfree.data.KeyedValue,Y,Y,Public);
Method(getKey,java.lang.Comparable,Public,N,Y);
Realization(org.jfree.data.Value);
EndClass 184
StartClass 185
Class(org.jfree.data.Value,Y,Y,Public);
Method(getValue,java.lang.Number,Public,N,Y);
EndClass 185